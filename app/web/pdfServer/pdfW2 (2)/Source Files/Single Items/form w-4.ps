%!PS-Adobe-3.1
%ADO_DSC_Encoding: Windows Roman
%%Title: form w-4.pdf
%%Creator: Adobe Acrobat 9.4.0
%%For: ghaner
%%CreationDate: 1/5/2011, 12:26:44 PM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 611.9761 791.9681
%%CropBox: 0 0 611.9761 791.9681
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1250 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2011-01-05T12:25:21-07:00"
   xmp:CreateDate="2011-01-05T12:25:21-07:00"
   xmp:MetadataDate="2011-01-05T12:25:21-07:00"
   xmp:CreatorTool="Adobe LiveCycle Designer ES 8.2"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:9769992a-c2d7-46bb-96bb-06b3a34418ac"
   xmpMM:InstanceID="uuid:beda0c29-1ec0-416f-b65e-eb1371e3a92d"
   pdf:Producer="Adobe LiveCycle Designer ES 8.2">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2011 Form W-4</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Employee's Withholding Allowance Certificate</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>SE:W:CAR:MP</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [611.976 791.968 ] >> setpagedevice
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -791.968 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 791.968 li
611.976 791.968 li
611.976 0 li
cp
clp
[1 0 0 1 0 0 ]ct
set_def_flat
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
36 36 mo
576 36 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
1 setflat
set_def_flat
2 lw
0 lc
35.75 58 mo
201.85 58 li
@
1 setflat
%ADOBeginSubsetFont: PBAAAA+ITCFranklinGothicStd-Demi Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+ITCFranklinGothicStd-Demi def
/FontInfo 7 dict dup begin
/Notice (Copyright 1986, 1992, 1995 , 2002Adobe Systems Incorporated. All Rights Reserved. ITC Franklin Gothic is a registered trademark of International Typeface Corporation.) def
/Weight (Demi) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 70 /F put
dup 87 /W put
dup 109 /m put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-199 -250 1014 934} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 686 696 508 518] def
/OtherBlues [272 278 -179 -171] def
/FamilyBlues [-10 -0 686 696 508 521] def
/FamilyOtherBlues [272 278 -192 -167] def
/StdHW [114] def
/StdVW [147] def
/StemSnapH [114 133] def
/StemSnapV [147 160] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/space <1C60D8A8C9B83E2D40> |-
/parenleft <1C60D8A8C9B73F59DCB2E44467AF88F6B1F7013BFA268F581FB5
BD767D31DB19418E186EF5C42842CF2A49C312ABF331DCF75AF2DCA4B551A36D
9816B8CEBA9132CF456E65AE> |-
/parenright <1C60D8A8C9B73F59DCB2E44467AF88F6F7479BC8A612167442A
2ECCF0A5447B75868BB0A1B3AF3B6BC4437EC4126323525F1F7D6B1D9086F9F6
DFF254EF1845D6D82AF4AE083> |-
/hyphen <1C60D8A8C9B87A8F7270BD2E6C5E66B3C879474D4FB7AADB25F7D27
D7962FE> |-
/zero <1C60D8A8C9B7C3C99492611BD66241C806DB2FAB219687A5680FAE710
78FEFC2C9E6885165A8F028148C3EC76FAD224FAA65926FC8E2648DA49499A73
9D01CC2560F1D8EE83CABF373EA4B5074F46F9CE09E760E3CC1DCB30A8731007
93061A29860F4134107D69FB8D51F18B12E3F9A56E8B067FF> |-
/one <1C60D8A8C9B7C3C99E829D3578F8A1FDE7192FA4FD4DC034EF60969100
CF9AAC869F840E3ABB33B08D16D025FCC1DE99D9D4FDF66238ED62B250077B79
91> |-
/two <1C60D8A8C9B7C3C99E8290B9E2726556D4ACBC4DCF72E697EB38A1DB5E
57BBE0397A029B81CD85EAFC33D79F9B899E7E49F4E7F2618BDCED47DD0B80C7
06FBA1279A8D5C1B3855C322C946DCB2F8815BF5835C463BB94AB912E3F02941
61F2BA7202EACE9ECB84ADA20FE333CD> |-
/four <1C60D8A8C9B7C3C9B5778CA7CAEC8D86CCA38C5056C7F2177CF0296AE
8CC8039E61F42F3E33D2014B7DA975D8BE25260D2C10DC723A6AF8A1A8B677E7
9978852093ED3C60347188333CAF51720C8DC21CF961283BEC01C2DA75F72C29
91A08> |-
/F <1C60D8A8C9B79FB095E01E3CD236D7F9B19E4E49457CB97DFAC2A4338C3A
B062EC1C1047DE187B4CF64FE7FA5851A2225A630D73200D7A494372DB> |-
/W <1C60D8A8C9B58A94DDBE80A6B293E1169AEEF76A7CE9EA7E1CE496BF22A6
3B3FE120ACEC34758C176C97D8E354CEB4821BA290D247DA7C3DDD70B35C1B58
D3873B3844DD9EFCC9C81F42719BE272398342B183> |-
/m <1C60D8A8C9B6A93EA8F219F3C6B4F27C07062A4567BBA60BA7B698083612
F6674C47C3D0AA74B41DC990851760CE04FCABDA93A2E7FA50D9B20A4CE401C7
FBB9640E262EE6D957A537214CBFE3ECF6D4EB9A704F4DCCBD1826E64C6CF4EF
09404523B261AC8B256E554C11A3BB7C9050040228797902735687C1929D6C49
AD5A6CB20C051C5FB932B05A414B78FF6C6D81D57FD1090A80942C17A5F279CB
19DDF82866693E54CED23876EC72DFE29E06805F66591944549745> |-
/o <1C60D8A8C9B79FB0B478F40195B784EB19A2EA44EF5639FC72F6E6CC34F8
F8E3C21C7C2F7A4F9CE41E24D20B979C391F97E9A2C089C74C788B4EAC67CB64
67DDD95EA1B447316281078BC8DA913D2F8B30E1E65083DE55588AFCA4CC1E22
E517F6> |-
/r <1C60D8A8C9B816D29A5416DD80921422825C7677DA0ED4779DE26EB89BF6
9FF4ABD96C3C3D8D58CC3509EF9CAEF75F440A8AC8F150D484B1642C79CDBDAB
D37C42952C80F59E16076D8A1FF342CC3E3B0B3704A72B> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKO+ITCFranklinGothicStd-Demi /PBAAAA+ITCFranklinGothicStd-Demi findfont ct_VMDictPut
/PZSRKO+ITCFranklinGothicStd-Demi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /.notdef /four 17{/.notdef}rp /F 16{/.notdef}rp 
/W 21{/.notdef}rp /m /.notdef /o 2{/.notdef}rp /r 141{/.notdef}rp]
PZSRKO+ITCFranklinGothicStd-Demi nf
PZSRKO+ITCFranklinGothicStd-Demi*1 [18 0 0 -18 0 0 ]msf
36 51.348 mo
(Form W-4 \(2011\))
[9.71988 9.71988 6.11993 14.7601 5.40005 16.1999 4.3201 10.8001 5.40005 6.84009 10.8001 10.8001 
10.8001 10.8001 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeueLTStd-Bd def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 72 /H put
dup 78 /N put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-166 -218 1078 975} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 531 700 700] def
/OtherBlues [264 273 375 384 -196 -182] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [107] def
/StdVW [142] def
/StemSnapH [107 117] def
/StemSnapV [142 157] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
35 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/period <1C60D8A8C9B854D088EA530B20E3B0DEE3CA00DEF27483AD4E92322
9DB> |-
/A <1C60D8A8C9B620B7A43CC51579C8D121C58BBE933C07AB94D996447A678F
4949EA32ACEE213F8A4439C799E8BE68DF3C6CD527046F55ABAEC874FA31DFA2
2A9238967C> |-
/B <1C60D8A8C9B635A4D71865DBDA3FC777F96778AD46ADBA8C30C5EE87A666
3EE6FBC13BE79FEB91764B7E8E6DF7F3D12799AC2E5D4810DADEF55AE2F604EB
8D3FCAEB958ED1928305996B548FBFB3F725C4AA2B5E7EDC22ACA042CFFBA40E
BA72F5349C2D255E35C618EB20BEC95C6A0C3410576F9A70E295B2E6DB50D9C9
826C5C6ED6625A19398055A10FBD> |-
/C <1C60D8A8C9B6184A36046A485CC32551579D6D08B181C8223B6A468F99CE
9ECB396E0A60E664886DD7FDFE4B7E8976D6FDDAF89D222084E6E7178536CDA2
18425BEE56E793A5046315BACBEDE5F7EEC9AF390DD5A823C1CFBAF894F213C2
302DC1F8B273> |-
/E <1C60D8A8C9B67DB5F4526A7E94FABE07028B57E65A9AF78EF96609CDB235
DFD7B75910D70BC0B14BEA79534BD3B17C069550E4D1F4DA03EF7FB66E8D54DE
A6> |-
/H <1C60D8A8C9B6184AECC26C5F013D64FB9C2A65827FAFEA8577451F102C72
5201BF14CDCDC9A65348C0172BC4506E48CCA1363B6527E4D3C2DF030A6A68E9
7244A880> |-
/N <1C60D8A8C9B6184AECC26C51215199BB99023F3D7D4A172ED01B7B8B7B36
300294556101613158F5EA09C4A48339F2AB4D70B72F9EB7B2E16B4ACD0E316E
BA> |-
/P <1C60D8A8C9B64EDFA3F30AE4FCEDDC7CF99B0D740AB78A4CD5837380F302
A57BF14EE63914ACD62253B2A55E7694E8F54EF4B8326A6F2E6DA1FCA78582C7
390480E76DC6FC9FF5CC3CDDAAD0A185AE0E323E7768> |-
/T <1C60D8A8C9B7D8BE41A64DAA4F1C36A5BC537C07513FCF51433853C1AF3B
A4DB1654B144F15BC7FC3B2AEB0BBD2E66> |-
/W <1C60D8A8C9B5D6EF151AEEAFF39173A33992E189C68C471D9950A53D4E59
D88E4166F1595027C135A9F6E3BEF48A28E61A0C53D489FF306FB6BCD2121835
132533F2FFF05AF370A99788CA9B3F84C5583038> |-
/a <1C60D8A8C9B7FD8410FD83276644B2A5A145ABED7C11EFF2618D3F4B35A6
1A6CC9DD931C491E897914BD93A78806892424EBDC0871149941A1A103D8C2B9
306C436DC23BF7418C427862B2763A715FA96A586BC34323634174300E5B2747
2816CBC153D6018FD893AF6FE2811879F16309C512519543903FF7AE6C37BE0F
F561F159DE53EEDA39B720F5D0B1649F0894AE1F9908DEBA16663BA738> |-
/b <1C60D8A8C9B7D8BE6A378724B759608062B4370718AA5B42BACE0E914BF3
33138BBECE610A89E1B39047BA4D1237632E4FAF357D89158FE235F86D884574
6D11CC371CA56AB6E8C8235CD36888719FA1C26503AE0C04CC61A9A2E0ABC49D
2088BCB61EBC04F9AFF05BB1657595529D54D313EDAAD335ED521F1B52> |-
/c <1C60D8A8C9B7FD8410E1EFEAD08A079AEEBA5F2AA1068B5D1B248B7051B8
110EBF4C5B1493AD5ADEA84C25CAD930238BD3AC0F2262A93D2A55ABFB97680D
A126E4F186E18DD983AA769D8C6D1D9BAD339A7B8E1EE02D0FD2> |-
/d <1C60D8A8C9B7D8BE6A378724B759608062B4376DD8C2B27C37AE3D584C98
1DEBB72D38A97CE09220DD22D4BD95D5C7A13939943248357E93C5DB232B25EA
170BBBE531B90D44E7E77F37AB35E1BA9174C74D0C453DE5A048F665FDB3EFBA
06E4D83512EE55C7995E8D746C43686B2EB890C02D2DE5B4F650E124EF8493A7> |-
/e <1C60D8A8C9B7FD8410E1EFE59764D0AC9E879756152A1DD4802F5562912C
BF475362BD26F5B8652E7F5234AC8A293F4976FDE356CD1F67B94D390DA42D68
63927587611E87759056EEF34E9C0464162DB6A2B6A4CFC070FCD6E465C68095
EBA999FEFA> |-
/f <1C60D8A8C9B81F2C6DADD030FC14BA630B0AD55B6AA7F29FCF7C3C051020
58D72A32D882B562676ECB55516F37ABBF2F5B4D405C422B17AC0356E90E3348
44EE3790B0CC41A2D6F4D13302D9> |-
/g <1C60D8A8C9B7D8BE1A051E11C984AE1B2AD6C7DFFCFD4019259F0541286E
615037C3AE44917E9ED178875F5BD55D2A7417CD87B57ED7C3C988A28DE0F1E4
749444691A00F0B3560785F3237DB7EB959DFAE6DC66A7B0382451183DD0B88E
A766EC079FDB987878A106F602A389D44126E0093378C70BB8352D5C4825D76C
E87969812B3D2998DBD6378FAD2BAD9A05778F5286DF582B5E684A4F4732> |-
/h <1C60D8A8C9B7CA647DE1C48038F5C1DA9591E24E59C58DD902E05BAB0AE9
80AF02104267E28BF7BBDB7462497B590F1BE94017F5BE1A33436ED7849F8533
591CEAA0458B7EBAD2FF6BD5B342F503116A> |-
/i <1C60D8A8C9B868F3ECECA4B25ECB91DCC989E8B91A8521428F7B060BDE6A
CB4AF79EB6B4BF466FA2E051CC0ACB134CF5A031D93E> |-
/j <1C60D8A8C9B854D0F827390C6146F10018D9BDD7D037014085EFD563F31D
D8B270A09B664AF62A90D47759344EE539DB605210B9F20700245A8AE72831C4
0A40341FDAFC4A08CB579F5FA1C65735F971BB> |-
/k <1C60D8A8C9B7FD84CD08F2937763F9E9719DC6BB9BA5DD9C68540AA0D86F
EF92F3A840D36B3BD9E2E05204C837DDDDF81301DC714EA9995BDC2A7DA84F19
A6C96B76DB28> |-
/l <1C60D8A8C9B868F3ECECA4B3CB4DF347EFB2E6322F61960A8BB3D0C58102
E4D4> |-
/m <1C60D8A8C9B58C3B2BFC243B852BA8B3174E2AB78F4DEB9BE317BE008E43
29A8032BCE4C204FF69C6E6F454C3856D26592D64E1E5D821C77DDD2B7FC06E6
B8233D66B63E1EA4DF5098744E29A54BE883ACB61F1A0FD8C989ECF30FD338C4
2CCD806093D79789BBE826456C39708194E6084CB869673F118BA6C87B0B40D7
34EBED5C23D2B70F> |-
/n <1C60D8A8C9B7CA647DE1C48038F5C1DAADDE07D80BB85FFF26033090E1E7
A49EB8196C9CD89C3274D2A79E2B15092AA1EBAEC7B164076DD5B285C88BDEA9
D2E0D43834ED95BE83B4E099FB9731787C4ABDF2B70DA1A6FF60F09FB6F761> |-
/o <1C60D8A8C9B7D8BE9CC7CDFCDBD8490BBD923B76E31CAF311C220AC2D63B
3AAA206FE895019E9EED8463BA7DE21064C063A878151F26C5E7BE883CF15C84
DEE66F706A44C82F703603DF963C3CB4866F976872F39AA2> |-
/p <1C60D8A8C9B7D8BE1A68BECA012E6F309A1EF0C2CC0530F52F1EF08E4CC1
CB433D229B85C0B3DAEF506F3F670C787C9170FE6EA9E4817151B0C1A55A089D
9BEABB37B6ED2F32AFFD041A83A6A8F2F3B9E5DA92042B37E6421F5C5F05114F
DD408F65999EA73157749AB259923D7DB77F73E19A83B6044D426833D53DC82D
673B4236D139298A58893B6F7F7A75A3FD1B7005EFBCCF89AEB8628ADC42A4EE
559E55E5602045E940C1A89762> |-
/r <1C60D8A8C9B7361F55E947F9D093B9517C27B9EF65BDB71CA8C1A8AA2AE7
0F17E5A2B765431F4498C8D35EC59177A332D58E3DD0C38307B7D6F7E8C0E9C4
E750D9A965F222BC3558D63EF0C8ABC7CC7D500E112FFFC7D0C1520D9C0518DE
B37DDB3DB02D7E290083A9196DE92698E1D92ADDC75F161776C0> |-
/s <1C60D8A8C9B7825658D68635CD4D00789EA325E4C2629FA3CA1494A62394
9831EB8676A56B0A10C758F7C7FD43F01EAC5A2DB0FE26D19D8DA3248E7042E9
A965A0C45BB428CBEBB3CC16477F8D234C2E5DA7F2E92C566F1BAF57545CC86E
D09FC507687FE644F5D98AD4CE248576BB1CDE3DB9410139991C> |-
/t <1C60D8A8C9B80A3FF00F87B10EEDA4C3E970DF679E1D082F67BAF82A4E54
69F93D34ACB1C5BF554E5B1092198D2B741E95F833764B436467EB3E914295F5
09D2DA26FC8F4B8E45FE1EF79A8FDB20> |-
/u <1C60D8A8C9B7CA64A027E3950C0376940960940AC4DF6E8A8A45CDACBD71
251D213F826FE738B4A8CB9047DFE8C5B9176AF41ED76B58B780F86B35C554D5
86EBBD3A194C1383769ACE9D19EC0B3C46562E8E2B6AB6E76095279C13ED150C
E0C0> |-
/w <1C60D8A8C9B6A351680511D56A8DDE7BB19BEEB7A14024CC7588AC182D19
E78CE8539DC360DB731ACC39A3862D067B4211B093D41A8DD1CF4DD52277643F
6AD4CC203869DBF123A9BC4CD2C1> |-
/x <1C60D8A8C9B7825685F30FF57F868996EA81D7C826FA642DE5465E674513
9B52966A2137817DBE4FB79554C40A55647F0B3AB609CC29B311B229E6EB863E
2EFA2EE79A932DFC4232> |-
/y <1C60D8A8C9B7B4A13335097CACA4545518D9A05B96907D6FBF4621519CC3
2B7407A8C567078FA2E27BC28ACAE333A7A52B868D2D820442440A44EC31906E
1CA142AB767FFD7AECB38A6A29600B588B02FD12> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd /HIBBAA+HelveticaNeueLTStd-Bd findfont ct_VMDictPut
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A /B /C 
/.notdef /E 2{/.notdef}rp /H 5{/.notdef}rp /N /.notdef /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w /x /y 134{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
36 69.355 mo
(Purpose. )
[5.00256 4.44752 2.91756 4.58244 4.58244 4.02752 4.30504 2.085 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+HelveticaNeueLTStd-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Helvetica is a Trademark of Heidelberger Druckmaschinen AG exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 36 /dollar put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
def
/FontBBox {-166 -214 1076 952} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 529] def
/OtherBlues [273 280 380 387 -210 -198] def
/StdHW [75] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
62 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/dollar <1C60D8A8C9B7EF32532053E28563490A20F0C013F88790C5C9761F2
0685ED1B0F48EE7980E5AC318F1778DB77685FBBDB0B189D1CE1C107D5277523
F0300D3ABF50486BB3A62BAC5912E9A228EBB39D4E23E02C1EE3FCA90008565E
887044BDB5DBABE7EF9FE1066EF7411FD686DC5012C24894264B62A2A14066C4
EDC939542794249C05D3F05C0EC01A71DC9D4EA72958537047028F92C40DCE0E
0F5C1F367DA5915CC5013B2408A63CBF89BF5C8F830270533CAF2B0C8FC816A4
92FB5F6F939D3D493D889BC6E3BB089AF308B55D9B69A64EBA48FE01D4973D68
35C58D9> |-
/percent <1C60D8A8C9B5EE31851049BF0BB9A0DFA2628895F342086139693E
89967D139C0FA85159A682543AECFDF0AD72B359730851EE52497B940978FA94
7E87346FB2305063F3999D13AD874282DFC9CEFE61C28C2894D9F6B015C1D171
19255F3617B445D17DF419264B14604DDC94760BA4C7344753EF9E67B71976B9
66F0E47CA940478F520F1AC18578F8DF6ACAD0F7BB887E229721A6B72DDC737A
8102816415464287C358D106C102178BE7ACBAF1376C7782CAAEC8EECD55FAC7
63E45572FDA4726E31847CE9D1813835178059978F9FE731BCFC66591CC1> |-
/parenleft <1C60D8A8C9B869C16E50087FBABDE3CE9254D1765A74B8B9272D
914398AE33F8B2966754C363726A17F4C09731D8C9EE470734AD4F2399A2ADD2
4C927825E107E863D288> |-
/parenright <1C60D8A8C9B869C16E50087FBABDE3CEDFC6D5C37E30FEB4587
7D71FCEF9FE36F031ADA85A1EFF7D43F1A8A077177AA69C5F8B6A1A05A9B12A9
61B0CCD6C95BE9AA7A526> |-
/comma <1C60D8A8C9B854D088EA7EB6675C5EA96A8A91573407E6DCF13FBB96
B02EF3507E2B385EAEB354BFDC197F> |-
/hyphen <1C60D8A8C9B7361F0233AF69090D8ECAE31A9DE2627FA300EAB5349
9411C> |-
/period <1C60D8A8C9B854D088EA7EB6675C5EA96A8AA06A11CFB5862004787
8C4> |-
/slash <1C60D8A8C9B81F2C4259275C61524F37AF6E3ADA60853DE014C290A0
DD558D8694> |-
/zero <1C60D8A8C9B7EF32A30FDF4F8ED4A615320DD4E567DE9680C3BFF51BC
733D5C1C28AA1821AE9B518D330D74510FA4B3D6E6957F6CE779DD29DC0F9188
71FC9DEDF1A33F3D999BD00F960001DD2FE7C347519EF56080F62061AB3D6A3> |-
/one <1C60D8A8C9B7EF327C10274ACE3AF096CC06ECC6A1FDB54F82BF82AF46
240A5247573E9E02A79668EFDE205282> |-
/two <1C60D8A8C9B7EF32574661BA14F3CD118D98149F1C079B1FA7CC393BA1
A8542F01925726313A147539BD7098A31AE3BC8326DFFC67329A3FB440CD9927
B22413EC96BA55FACDA5BD1056A86706B6A6930A53C7F2B4938AFFA68B72A3A8
055AFA> |-
/three <1C60D8A8C9B7EF32A30FDF41D2AA7A047EF89D7DB5335B3C57271500
04C6AC573F9686D737551D1298FE18C0CC29FB2681D0F650C17F208183791643
BE6EBC296565839A8FBFCF9047A76E7803C3ED6C8C2E878C38B3DB4E333C1DC0
836A2B8AA4A48EF29CC8A728F48FE629709D551775D4B2F61E8D43D359FEB32B
F8084EB6ECD08EBDF2028764357318CAA256B69A8AC61A018902EAC5E540> |-
/four <1C60D8A8C9B7EF327C1027456C3D115195F0F1719A1D162CE6D9964C5
8D4B1B14779722028390C0C3EA9CF1184B91A36FE2082F7F8EF539EE699B014F
DAE00640E18> |-
/five <1C60D8A8C9B7EF32A30FDF4EAEE3CEFCE7253DB6D0CE95F7FD971731C
8896CC7C6A3E31C0472E216681719B0CA5E217D5CE08BE67FCBDAFBB3E804F65
949D5FD0135DA3A3EDA11C134951DECEF875C8A9DDC28CF9555632507FDBED95
769773AE317069BB15DF166FB71E50BE96C1A> |-
/six <1C60D8A8C9B7EF32A30FDF4EA3805875E345D52FA706F947AA46EA5A87
C2B35040F95850B25F58A4D5B1EEC949FE33F8C6AA2A82E7AE352A6971CB9DE7
53EF69C7248D8DC27D5E18215C5F9AB1AF39905B1358DA3F5BB67F80EF69C02A
1FE0FD1F11EF08D6EB31563C5576BFBCE78BA693F43C19A64B55634976F8642C
4600ED9416D7FD82DF393196EC5797D89AE4F75F80CF700CEB04F56814DCF47B
E153C9DFE6CCE4CAB27726096F255E49309A5E57CBEE176F2659A7E0> |-
/seven <1C60D8A8C9B7EF327C10274AA393C495FBA7DD6CA9C26879A8C99113
3A431CAEF35AFDE90AE46DF180C24B1B0F7782CFC6B9416F6C44E7EAE057FF19> |-
/eight <1C60D8A8C9B7EF32A30FDF41D2B3BC5AB460CE6DF996E6FDBE8358F1
DFDF11DF90B0E3044B1A5A62A638CD2F3D2826314C7260E0C73251E2DC88A1D4
BF9CB628328BB35E1DEA45EFB4D2F67080C8C1A1139D80F41865B30565B1D265
AEA9068B8F8352A2EBD26BDE848AAC61C96BFCDAE9F50EA2677117A6A3E060C8
C63C6C0B753FD688959BE9543F4FA621776BA7A996E194EBB37AA0B1FEB506AC
7A21CC787A002B6DD3A20A2ACBF45E7A53F84057247F8D75DC26B21531985F8E
11CEF62933C89CA2FC9A3E44ACEC5FD855FB45C3C28EC494FDB99B158A1064D6
EC6F6516381FE0A886908D0ADE7D387986> |-
/nine <1C60D8A8C9B7EF32A30FDF41B3B09EB0EF99DD55F762CE5B83E660968
DC60A349D9B2A64E5D03F852490B6351C5F496520C6816229AFAA4E2BC692A83
294CA841C96AFB7B831E20CF7FD1601F69E5D7C5572EEF8AA005A3149742587A
48C3917B087C2BA72D0996D50C4006DA06E834569572C873ABE40A6555114CFB
40C20F859160A827D8F8CA3E2FC460F88ED7A62A86B73B97B00D5159B0D69FEF
C8115C70B7D96701323F864C071F8846D9E262CE2C8284C5621C6> |-
/A <1C60D8A8C9B67DB5DFC07A3352648048B989C881F1D77E85E3FC1B35E4DB
0D5CB1BD5888217B0E4FE6F57A0D0C24C2041E777BCED33B4C7C77D7F47040B4
64F7BA43C275B9D874A81AE32AB56B13CD46> |-
/C <1C60D8A8C9B6079FEF8760F9C1321FA433F0BA2035A26FF8FE488C0C4876
D35C91EC3100D4DDD0332AD8F31C7DFF7C2EA58FE6FF8CD039C86B660095C078
841EFD41499BC62B344A982FDA8599507300E468BEFF36D7ED13F5DD0660E3D5
319829C660065AFD> |-
/D <1C60D8A8C9B635A4D734FEE524B90076D40977669A4A566C3E61590FFB6F
CDC3D041C91C3712133D40C7574FCFB64F8FF5F6415C095B859EE743A161F77F
B515E377AFD855A5577AE0> |-
/E <1C60D8A8C9B7D8BE6A0467BB33B79637C4DC4ECCF8EB661C426DFBB3E2A6
642D5225E7573C948A918EDA893C4A7BFAB89B89C7578231FE3C> |-
/F <1C60D8A8C9B7FD84CD08F29CEBD0F7D55E27F85F482A186E366330702034
295D81E1D480988E3591EE38DEE4E9102A87277E> |-
/G <1C60D8A8C9B6EA91968DE5AA0C5FEEA72136FC50F4D7F50B492D0E5D88F0
DCC146E52360330EE13ECDC475CB15A2503E385F8CD1DAB2F2A5785A1E0B18EE
D10F5646641EBAE1CA4200EC2160E88C0B1E93D6C307C915B0DB7E56CEB60088
4443CB5E167572B1E63C75A411EF48BD036C9ADADEA309E563271E02AA4DDF9F
CA55F185F9A9468C> |-
/H <1C60D8A8C9B6079F3517E07A12A2C48A0EE2770D4AF60C05A31D41DEBCC2
23AFC8646172351DDB62F6E59063FC7A9D7247128356AAB8D7812541E7> |-
/I <1C60D8A8C9B869C135694496FC80660E2CA716B2B3027EC53A1ADA319C> |-
/M <1C60D8A8C9B69A173543128D8B1AC42594A59F873F7A3EB54F44F295C397
47C8320D8D5CB5E13143DE91E6825AFF396262D3195986101386A194C01C2852
BB6A7C87971AD0095592A5AC1D1E432779557119462AF93204161A8D> |-
/N <1C60D8A8C9B6079F3517E074AC7F02ABBE6FFD53C20C1832F87BC43EF705
4410E96BC3E9C9B11460D8BEFB30FAC087FA4C3BDE60D5D3104CD934876B0306
5E986F15102A9E642A34042A5C1D32013CCA4287FE888FB8CAAFF1744C> |-
/O <1C60D8A8C9B6ED05589977F626CB6A269556E7221F6E03CF1DC1BE3C0470
15F23AEB89943170BA4C346A9DCE27DE74621613ADA8CF0C4A6ADFCA9FDE24F9
D680E034C01C08712DC60C90FA059814DAAC1A75E64322C9EEEC3CC276670769
BC2688BD70> |-
/P <1C60D8A8C9B67DB5DFC07A33817ED0FE66A0A180DEBB0D8B0645A556A3F2
00FCC87D9D3931583CD651B820A4CECCA014724B4871C94B460799B849FD481E
29400AAF99CF3E3AA0C6C9AA8EF3A33981> |-
/S <1C60D8A8C9B67DB50536B7FF8ABC0B497BA3B515CBA710718F58724EAA99
C9474916D6E54CEBF2CBA3496494F840172398909F9A2A9A7E023D503FE3E4BC
399D0C9DC6E9F5AC613337842184382525816A18C1579C95F53201A84533F2DF
2088F4C0D90D787F53F90357B49210532147C289EB4C6E2398DE8CA36625E9EE
8CADAFD2E64B5A8DF6324DADC658AFC17644E35A5CC2B771DCB67E5841D29C4B
03> |-
/T <1C60D8A8C9B7FD84CD08F29211E1CE435942E6F7E1D0885BDC50D0FDB2F5
1B8F7DF6955631DCE1888CDE> |-
/W <1C60D8A8C9B5A05A5EEA8D4BA030323AFF818CE298E62ABCEE7D55C2A605
37F4C1E9CAB220282DAF4415BD3C91D779F9F8FB2A87253AF210E54E4B65F7A2
386544FC66978AABC17035352994947380798374ADC96224392EE948EEA51207
0F4A2605B3055769C4E1E9> |-
/Y <1C60D8A8C9B67DB5DFC07A3D14BE0C43E1BC981BA7D3053000D78BE4A34B
C9989596C56BDCFFAADA47597E48653EE6AF0536CA3D529A72> |-
/a <1C60D8A8C9B782565A0F44FF3FF79D86A76E31D55C5CB721C885F9335614
134A94F1FA53B3C66614E6FCA74364946171FBE952C85E60266CBABC0F2D44BF
A489025D0AC535F7C1EC804032978FD9E28F98B22A3E30C9083D03A8D5953492
E9812C1E9FDAF87879CE9397A1FDC4429EC29575D6EC9ADE81623CFEEE73D60B
4C7C97D4AE8D83DD083677504BA1549E21A426A247480E37E1B6B68523D9C3EC
7E61050EED80D80AAA6CC51CB253201E49> |-
/b <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1D8873ADC85A667E2EB557EA
79394AAF7B956A9747ABE804ECE3B9072797BEE49B46E87994AAA4027D041AE4
4EBF36291B3DFE5EC17034768573410428CE4CCD9FB3C03208D54E0909EA9ABF
D500D237F2BEDB7B848215C6049C1DAD013579B1E3124A1BA033DD833AC31172
A54A776B570E4400B8E9C7615D581E567874C544> |-
/c <1C60D8A8C9B782565A0F44FF3FF79D86A76E314A50283B7BF36B7D7827B1
E40B28772D8C396314E5C7227F8B86505F9D1F1D0D048E01A343E0AFA701795B
509767B97C38DF595755267C314BBE63A0876B669F949368EF> |-
/d <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1DE92E8F99455DE774011C7C
8026D7870A16B0504916579F11B86525DE399B8C2E127DB7D84660C489FBAFC2
DFB0B10A8F81850C633230D8A7844E5ABFF78A3A4ADAA6077D7F04FF120B2E57
3AF0E95F4E436FA30A1085EC023458432330913B43947565E7CC83B65DBFBF24
BDDE43578CA23C03E3714F4C37C5FB02788FDF96> |-
/e <1C60D8A8C9B782565A0F44F0302B83DEA18A9E45B5689F7EAB30463ECA57
32F60F41D03338E7E22B5322EC6372E5769F0C8388130702227553FBF766496F
FEAA5C51915E26BDDED417C3E122BD2FF21DAFB03A61DE680B21981F408B682D
FDFA76FAFE7DE8658863F5563E96> |-
/f <1C60D8A8C9B8425736C8FDF0CEB5D9BE550FA9AD58C956A28E666EDBEB89
152755BF252321D927292D3909BB94247F244D06D4AF60DDC22B1565F7F3092F
DDDA80A08DEAD1A8CD98E24B92B2C610569EBE022C4E43514D6416E2C489C9F6
E52F785F3187C73A8285E6> |-
/g <1C60D8A8C9B7FD84964396C929E2B9A02A33EABD1403FBCC31D68AEEA71E
7280B0C83081F9BBA9C90B32CC38468A06220B26B45CD586DB17DB35B9EF0628
73CE9BBDF45B950FA66A7E74A92D7D3A50DE6A0D7499CDCA2C84C4A0F000CCDA
4B9CF677DC868E21AEE72D6A2FAFC34B0280A0D4A0D915780E7DC67D5759332C
64BC3A2321D235EFB6776673C24896FFE1EA901F4FD91089C35D3543620E9A39
29B3AD9B94D4A46DE57D46D140F744A64E7589EE38FC76E34DF4367FA131D377
44A1A9> |-
/h <1C60D8A8C9B7EF327C10274A04C52E1BAEF569DB515D2F1C46FA94F3823B
63DF43C80E4A27869D57C25F45912780382F20F8954A1409FF26187780CCAF4A
25B5415DC44590E5B774D5E2> |-
/i <1C60D8A8C9B88C082599D5E950391FCAB66B5B2D29D35D1A155318D65C84
E2D11A9D4B383DBB8DC386425ABD> |-
/j <1C60D8A8C9B88C087EE9D200C61E879DE16CACCECB671B6D00FDBC0F539D
BAC132DC2D8688E22B8B4EF8CF460BBB022BD4AB2528A69445B10010A07E8FD7
D702CC6E3859EEBF72> |-
/k <1C60D8A8C9B7B4A1684D51778B5AC2DDA0B4C9193BEBD0B5656EE07B247C
10AB0752D2160DAC67C41E0547FC6A8354319E3D190614FFEE6A9ED5184262E1
6B48FE> |-
/l <1C60D8A8C9B88C082599D5E8A418F1DC641F88208BE042DF9BCA86A0D7> |-
/m <1C60D8A8C9B6889A971AB98656F773653371BD773BC570B6FAE176F22F63
8A875B0CAAA9CFF63B8D6C26933260A812EBDD60DCEF6810DA777A6FA4F67FCA
97985DC9EFFEA007CBA62676D4A7F1B147B7CAABCD3CD6392CAE5AAF7BF05049
79300E35C4C7753DE970BCB308AEB758224E414F25338139A191DE> |-
/n <1C60D8A8C9B7EF327C10274A04C52E29DA6D62ED663BE08D4147C757D157
2AAEC36FBDA205EF77A6BF17B1378D1B59FE8440ADB18679F2047B393BE59039
38CF15B254B22F3703B85AF9951491059C09CDC36AD28B> |-
/o <1C60D8A8C9B7FD841262BACCF9BE9CBF3B3457AB27787C73E0674F33EA4B
8692DC269761987488F4EB83E73305EFC34C60CB9046C7444019208F46CD0804
4D254DA27A31487E897021112EC48FD0DDE352849E1627ED83> |-
/p <1C60D8A8C9B7CA642635ED2640AFBBBDBA4375533E709967C6E296806A7C
635D92119D43C6165458C32D45B1674504E28CEEB57403E5FC3338F12154F663
9BBEB3ABAA0FBF5F5BAC570B541C114FD05865579917B7F577DD134557FE6510
DFABED396AE948813797B5347214849467A4A576FC982FC15279789B572D5232> |-
/q <1C60D8A8C9B7CA642635ED2640AFBBBDBA5F09C4994548DD22A46FBAD385
C0E63A77AB1BC0F330E967F00E19AE4E3D67C007C22544D0951AB2C76CBC6B8F
E1760E1E329AA2BA6F1ADAEFF62257AEB847343B3C846CE246814EF5AA57B55F
76140BB090BC773050175934AF0C8AC770FBA4604CA7D7583D21907849946018> |-
/r <1C60D8A8C9B81F2C6DADD0308D9839297A9FF792A3445615C4DAF30AFF52
E0268D4A39A8F052DB6727DC104CFF4A6AA2C112B0947446CD904C0615153B9D> |-
/s <1C60D8A8C9B7A73D31AAF751C5A5B130CD0602349DE09AC3B860DCD5BB18
11067B12FB402FFC4709FFC64DD39C776EEB5C7479236BF2DE22B00ABAECEE6D
35A47B13712DE5CB3DAC8D23D074B1070B78A3DBD3750B25335426F01A449656
DED1708AF81CDD35AF3928DF308D46C2691203B3FF9CFC1E0356C6919EEBF134
5D64C5A81341C58AC7CC8E5F0C4783EA3643> |-
/t <1C60D8A8C9B831A9FFE9D7A47E1DCC5E5C070901296475C163353217BEFB
B4E6ABF1EA9649F0E58A9C73F33EAD0E62C588043313C609E3339C82B94F6E79
FE97> |-
/u <1C60D8A8C9B7EF32A30FDF4E2BE49BA4832F6985DE18054E8E86E4208CDC
E1F47B7BD726AD81F7F51E58E5548808D32C107458071DFC8F6BA26CE9FD4F10
CB30FA991486AE90159DD25F6CEEDC5DA493F8910807711CB1D3> |-
/v <1C60D8A8C9B7A73DEE9439F98CDA5041A52794841159137281766159E5F9
4600C10EA2C68B6C850E061AEA52681B268004744AC16A8A2E8C77C617533977> |-
/w <1C60D8A8C9B6EB66AF9822D87D440E94538CD16812303E41CAE2BA0183A7
AE4A8F85C50931035B776CE9F9DFA35998C95A26071436FFCF63A1764BDF5CD0
E70643A3BA1551F587C3AEF45C9304D05CFA90A69173AD4F11> |-
/x <1C60D8A8C9B7B5772438E75F34900C948B0E861DDAB2E4A5061170B13319
E952D9C628F38076E53551006609BF145BDD5ED851B65867EDF93204B0BE6395
262325F8A0D91120072DB3C4731A3C38C4617A610874340FBB2CEC> |-
/y <1C60D8A8C9B7A73DB58F19AA62180711A3724FAC71C25BC7E17CEACB417B
686DB19C3144A2B6A6DB5B5069D19ABFDA9E84E99A7BD0DAD9457EADE78D8103
4EC7A09C029AFE93D2533FF3CFFADBA603811CAD163551E275BF1DB6B53806CD
85DAD72989322D558AA86C986245CE> |-
/z <1C60D8A8C9B75BE5656FDF07D83A5FDE8B4B1DDC95280943DF78465A42AF
DC5A20EF535393B42BF6387FCC1C5198E213231858> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman /QJJAAA+HelveticaNeueLTStd-Roman findfont ct_VMDictPut
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two 
/three /four /five /six /seven /eight /nine 7{/.notdef}rp 
/A /.notdef /C /D /E /F /G /H 
/I 3{/.notdef}rp /M /N /O /P 2{/.notdef}rp /S 
/T 2{/.notdef}rp /W /.notdef /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
133{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
70.0351 69.355 mo
(Complete Form W-4 so that your)
[5.415 4.30504 6.39748 4.44752 1.665 4.02752 2.36252 4.02752 2.085 4.30504 4.30504 2.49744 
6.39748 2.085 6.94495 2.91757 4.16998 2.08501 3.75 4.30504 2.08499 2.36252 4.17001 4.02751 
2.36252 2.08501 3.75 4.30502 4.17001 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
180.345 69.355 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 77.3575 mo
(employer can withhold the correct federal )
[4.02752 6.39748 4.44752 1.665 4.30504 3.75 4.02752 2.49744 2.085 4.02752 4.02752 4.17 
2.085 5.68497 1.665 2.36252 4.17 4.17 4.30504 1.665 4.44752 2.085 2.36252 4.17 
4.02752 2.085 4.02752 4.30504 2.49745 2.49744 4.02753 4.02751 2.36252 2.08501 2.22003 4.02753 
4.44751 4.02753 2.49744 4.02753 1.66499 0 ]xsh
36 85.36 mo
(income)
[1.665 4.17 4.02752 4.30504 6.39748 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
60.5926 85.36 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
62.6776 85.36 mo
(tax from your pay. Consider completing a )
[2.36252 4.02752 3.88504 2.085 2.22004 2.49744 4.30504 6.39748 2.085 3.75 4.30504 4.17 
2.49744 2.085 4.44752 4.02752 3.75 2.085 2.085 5.415 4.30504 4.17 3.75 1.66499 
4.44753 4.02751 2.49745 2.08501 4.02751 4.30504 6.39748 4.44753 1.66499 4.02751 2.36252 1.66501 
4.17 4.30504 2.08499 4.02753 0 ]xsh
36 93.3625 mo
(new)
[4.17 4.02752 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
49.8825 93.3625 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
51.9675 93.3625 mo
(Form W-4 each year and when your )
[4.30504 4.30504 2.49744 6.39748 2.085 6.94496 2.91756 4.17 2.085 4.02752 4.02752 4.02752 
4.17 2.085 3.75 4.02752 4.02752 2.49744 2.085 4.02752 4.17 4.44753 2.08499 5.68497 
4.17 4.02751 4.17001 2.08499 3.75 4.30504 4.17 2.49744 0 ]xsh
36 101.365 mo
(personal or)
[4.44752 4.02752 2.49744 3.75 4.30504 4.17 4.02752 1.665 2.085 4.30504 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
73.7775 101.365 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
75.8625 101.365 mo
(financial situation changes.)
[2.22004 1.665 4.17 4.02752 4.17 4.02752 1.665 4.02752 1.665 2.085 3.75 1.665 
2.36252 4.17 4.02752 2.36252 1.665 4.30503 4.17001 2.08499 4.02753 4.16998 4.02753 4.17 
4.30504 4.02753 3.75 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
36 112.368 mo
(Exemption from withholding. )
[4.85996 4.02752 4.30504 6.79504 4.58244 2.64004 1.93497 4.58244 4.44752 2.085 2.49744 2.91756 
4.58244 6.79504 2.085 6.10497 1.93497 2.64004 4.44752 4.44752 4.58244 1.93497 4.58244 1.93497 
4.44751 4.58246 2.08499 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
140.947 112.368 mo
(If you are)
[1.94252 2.22005 2.08499 3.75 4.30504 4.17 2.08499 4.02753 2.49744 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
172.057 112.368 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
174.142 112.368 mo
(exempt, )
[4.02753 3.88504 4.02751 6.39748 4.44751 2.36252 2.08501 0 ]xsh
36 120.37 mo
(complete )
[4.02752 4.30504 6.39748 4.44752 1.665 4.02752 2.36252 4.02752 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
69.3451 120.37 mo
( only  )
[2.085 4.58244 4.44752 1.93497 3.89248 2.085 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
90.4575 120.37 mo
(lines 1, 2, 3, 4, and 7)
[1.665 1.665 4.17 4.02752 3.75 2.085 4.17 2.085 2.085 4.17 2.085 2.085 
4.16999 2.08501 2.08501 4.16998 2.08501 2.08501 4.02751 4.17 4.44751 2.08501 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
160.08 120.37 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
162.165 120.37 mo
(and sign )
[4.02753 4.16998 4.44753 2.08501 3.75 1.66499 4.30504 4.17 0 ]xsh
36 128.373 mo
(the form to validate it. Your exemption)
[2.36252 4.17 4.02752 2.085 2.22004 4.30504 2.49744 6.39748 2.085 2.36252 4.30504 2.085 
3.75 4.02752 1.665 1.665 4.44752 4.02752 2.36252 4.02752 2.085 1.665 2.36252 2.085 
2.085 4.85996 4.30504 4.17 2.49744 2.08499 4.02753 3.88504 4.02753 6.39746 4.44753 2.36252 
1.66499 4.30505 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
164.363 128.373 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
166.448 128.373 mo
(for 2011 )
[2.22003 4.30505 2.49744 2.08499 4.17001 4.16998 4.17001 4.16998 0 ]xsh
36 136.375 mo
(expires February 16, 2012. See)
[4.02752 3.88504 4.44752 1.665 2.49744 4.02752 3.75 2.085 4.30504 4.02752 4.44752 2.49744 
4.17 4.02752 2.49744 3.75 2.085 4.17 4.17 2.085 2.085 4.17 4.17 4.17 
4.17 2.085 2.085 4.85997 4.02751 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
140.467 136.375 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
142.552 136.375 mo
(Pub. 505, Tax )
[4.85995 4.17001 4.44751 2.08499 2.08501 4.17 4.17 4.17 2.08499 2.08501 4.30504 4.02753 
3.88504 0 ]xsh
36 144.378 mo
(Withholding and Estimated Tax.)
[6.94496 1.665 2.36252 4.17 4.17 4.30504 1.665 4.44752 1.665 4.17 4.30504 2.085 
4.02752 4.17 4.44752 2.085 4.58244 3.75 2.36252 1.665 6.39748 4.02752 2.36252 4.02752 
4.44752 2.08499 4.30505 4.02751 3.88504 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
36 155.38 mo
(Note. )
[5.55748 4.58244 2.64004 4.30504 2.085 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
57.255 155.38 mo
(If another person can claim you as a)
[1.94252 2.22004 2.085 4.02752 4.17 4.30504 2.36252 4.17 4.02752 2.49744 2.085 4.44752 
4.02752 2.49744 3.75 4.30504 4.17 2.085 4.02752 4.02752 4.17001 2.08499 4.02753 1.66499 
4.02751 1.66501 6.39748 2.08501 3.75 4.30502 4.17001 2.08499 4.02753 3.75 2.08499 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
178.808 155.38 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 163.383 mo
(dependent on his or her tax return, you cannot )
[4.44752 4.02752 4.44752 4.02752 4.17 4.44752 4.02752 4.17 2.36252 2.085 4.30504 4.17 
2.085 4.17 1.665 3.75 2.085 4.30504 2.49744 2.085 4.17 4.02752 2.49744 2.085 
2.36252 4.02752 3.88504 2.08501 2.49744 4.02753 2.36252 4.16998 2.49745 4.17 2.08499 2.08501 
3.75 4.30504 4.17 2.08501 4.02751 4.02751 4.17001 4.16998 4.30505 2.36252 0 ]xsh
36 171.385 mo
(claim exemption from)
[4.02752 1.665 4.02752 1.665 6.39748 2.085 4.02752 3.88504 4.02752 6.39748 4.44752 2.36252 
1.665 4.30504 4.17 2.085 2.22004 2.49744 4.30504 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
108.66 171.385 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
110.745 171.385 mo
(withholding if your income )
[5.68497 1.665 2.36252 4.17 4.17 4.30504 1.66501 4.44751 1.66501 4.16998 4.30505 2.08499 
1.66501 2.22003 2.08499 3.75 4.30505 4.16998 2.49745 2.08501 1.66499 4.17 4.02753 4.30502 
6.39749 4.02751 0 ]xsh
36 179.388 mo
(exceeds $950)
[4.02752 3.88504 4.02752 4.02752 4.02752 4.44752 3.75 2.085 4.17 4.17 4.17 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
82.9576 179.388 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
85.0426 179.388 mo
(and includes more than $300 of )
[4.02752 4.17 4.44752 2.085 1.665 4.17 4.02752 1.665 4.17 4.44752 4.02752 3.75 
2.085 6.39748 4.30504 2.49744 4.02753 2.08499 2.36252 4.17001 4.02751 4.17 2.08499 4.17001 
4.16998 4.17001 4.16998 2.08501 4.30504 2.22003 0 ]xsh
36 187.39 mo
(unearned)
[4.17 4.17 4.02752 4.02752 2.49744 4.17 4.02752 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
67.5375 187.39 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
69.6225 187.39 mo
(income \(for example, interest and )
[1.665 4.17 4.02752 4.30504 6.39748 4.02752 2.085 1.94252 2.22004 4.30504 2.49744 2.085 
4.02752 3.88504 4.02752 6.39748 4.44752 1.66499 4.02753 2.08499 2.08501 1.66499 4.17001 2.36252 
4.02751 2.49745 4.02751 3.75 2.36252 2.08501 4.02751 4.17 4.44751 0 ]xsh
36 195.393 mo
(dividends\).)
[4.44752 1.665 3.75 1.665 4.44752 4.02752 4.17 4.44752 3.75 1.94252 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
36 206.395 mo
(Basic instructions. )
[5.27996 4.30504 4.02752 1.93497 4.30504 2.085 1.93497 4.44752 4.02752 2.64004 2.91756 4.44752 
4.30504 2.64004 1.93497 4.58244 4.44752 4.02752 2.085 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
104.46 206.395 mo
(If you are not exempt,)
[1.94252 2.22004 2.085 3.75 4.30504 4.17 2.085 4.02752 2.49745 4.02751 2.08501 4.16998 
4.30505 2.36252 2.08499 4.02753 3.88504 4.02751 6.39748 4.44751 2.36252 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
177.81 206.395 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 214.398 mo
(complete the)
[4.02752 4.30504 6.39748 4.44752 1.665 4.02752 2.36252 4.02752 2.085 2.36252 4.17 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
79.9051 214.398 mo
( Personal Allowances Worksheet )
[2.085 5.00256 4.30504 2.91756 4.02752 4.58244 4.44752 4.30504 1.93497 2.085 5.13748 1.93497 
1.93497 4.58244 6.10497 4.30504 4.44753 4.30502 4.30505 4.02751 2.08501 7.07999 4.58246 2.91754 
4.30505 4.02751 4.44753 4.30502 4.30505 2.64003 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 222.4 mo
(below. The worksheets on page 2 further adjust)
[4.44752 4.02752 1.665 4.30504 5.68497 2.085 2.085 4.30504 4.17 4.02752 2.085 5.68497 
4.30504 2.49744 3.89248 3.75 4.17 4.02752 4.02752 2.36252 3.75 2.085 4.30504 4.17 
2.085 4.44752 4.02753 4.30502 4.02753 2.08499 4.17001 2.08499 2.22003 4.17001 2.49744 2.36252 
4.17 4.02751 2.49745 2.08501 4.02751 4.44753 1.66499 4.17 3.75 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
195.6 222.4 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 230.403 mo
(your withholding allowances based on itemized)
[3.75 4.30504 4.17 2.49744 2.085 5.68497 1.665 2.36252 4.17 4.17 4.30504 1.665 
4.44752 1.665 4.17 4.30504 2.085 4.02752 1.665 1.665 4.30504 5.68497 4.02752 4.17 
4.02752 4.02752 3.74999 2.08501 4.44753 4.02751 3.75 4.02751 4.44753 2.08501 4.30502 4.17001 
2.08499 1.66501 2.36252 4.02751 6.39748 1.66501 3.59996 4.02751 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
194.475 230.403 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 238.405 mo
(deductions, certain credits, adjustments to)
[4.44752 4.02752 4.44752 4.17 4.02752 2.36252 1.665 4.30504 4.17 3.75 2.085 2.085 
4.02752 4.02752 2.49744 2.36252 4.02752 1.665 4.17 2.085 4.02752 2.49744 4.02752 4.44752 
1.665 2.36252 3.75 2.085 2.085 4.02753 4.44751 1.66501 4.16998 3.75 2.36252 6.39749 
4.02751 4.17 2.36252 3.75 2.08499 2.36252 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
179.235 238.405 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
36 246.408 mo
(income, or two-earners/multiple jobs situations.)
[1.665 4.17 4.02752 4.30504 6.39748 4.02752 2.085 2.085 4.30504 2.49744 2.085 2.36252 
5.68497 4.30504 2.91756 4.02752 4.02752 2.49744 4.17 4.02752 2.49744 3.75 2.49744 6.39748 
4.17 1.665 2.36252 1.66499 4.44753 1.66499 4.02753 2.08499 1.66501 4.30504 4.44753 3.75 
2.08499 3.75 1.66501 2.36252 4.16998 4.02753 2.36252 1.66501 4.30502 4.17001 3.75 0 
]xsh
223.2 44.4101 mo
(Complete all worksheets that apply. However, )
[5.41499 4.30505 6.39746 4.44753 1.66499 4.02753 2.36252 4.02753 2.08499 4.02753 1.66501 1.66498 
2.08502 5.68494 4.30505 2.49744 3.89249 3.75 4.17001 4.0275 4.02753 2.36252 3.75 2.08499 
2.36252 4.17001 4.0275 2.36255 2.08499 4.0275 4.44754 4.44751 1.66501 3.75 2.08499 2.08499 
5.41501 4.30502 5.685 4.02753 3.75 4.0275 2.49747 2.08496 0 ]xsh
223.2 52.4126 mo
(you may claim fewer \(or zero\) allowances. For )
[3.75 4.30504 4.17 2.08501 6.39746 4.02753 3.75 2.08499 4.02753 1.66501 4.0275 1.66501 
6.39749 2.08499 2.22003 4.02753 5.68497 4.02753 2.49744 2.08499 1.94254 4.30502 2.49747 2.08499 
3.59995 4.02753 2.49744 4.30505 1.9425 2.08502 4.02753 1.66498 1.66501 4.30502 5.685 4.0275 
4.17001 4.02753 4.02753 3.75 2.08496 2.08502 4.30505 4.30499 2.49747 0 ]xsh
223.2 60.4151 mo
(regular wages, withholding must be based on )
[2.49745 4.02751 4.30504 4.17 1.66499 4.02753 2.49744 2.08501 5.68497 4.02751 4.30505 4.02753 
3.75 2.08499 2.08499 5.68497 1.66501 2.36252 4.16998 4.17001 4.30502 1.66501 4.44751 1.66501 
4.17001 4.30502 2.08499 6.39749 4.16998 3.75 2.36252 2.08502 4.44751 4.02753 2.08499 4.44751 
4.0275 3.75 4.02753 4.44751 2.08502 4.30505 4.16998 0 ]xsh
223.2 68.4176 mo
(allowances you claimed and may not be a flat )
[4.02751 1.66501 1.66501 4.30502 5.68497 4.02753 4.17 4.02751 4.02753 3.75 2.08499 3.75 
4.30505 4.16998 2.08502 4.0275 1.66501 4.02753 1.66498 6.39749 4.02753 4.44751 2.08499 4.02753 
4.16998 4.44754 2.08499 6.39746 4.02753 3.75 2.08502 4.16998 4.30505 2.36249 2.08502 4.44751 
4.02753 2.08499 4.0275 2.08502 2.22003 1.66501 4.0275 2.36255 0 ]xsh
223.2 76.4201 mo
(amount or percentage of wages.)
[4.02751 6.39749 4.30502 4.17001 4.16998 2.36252 2.08501 4.30504 2.49744 2.08502 4.44751 4.02753 
2.49744 4.02753 4.0275 4.17001 2.36252 4.0275 4.30505 4.02753 2.08499 4.30502 2.22006 2.08499 
5.68497 4.02753 4.30502 4.02753 3.75 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
223.2 87.4226 mo
(Head of household. )
[5.55748 4.30504 4.30504 4.58244 2.08501 4.58243 2.49745 2.08501 4.44751 4.58246 4.44751 4.02753 
4.30502 4.44751 4.58246 1.93497 4.58243 2.08499 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
294.727 87.4226 mo
(Generally, you may claim)
[5.6925 4.02753 4.17001 4.0275 2.49747 4.0275 1.66501 1.66501 3.75 2.08499 2.08499 3.75 
4.30505 4.16998 2.08502 6.39746 4.02753 3.75 2.08499 4.02753 1.66501 4.02753 1.66498 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
378.772 87.4226 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
223.2 95.4251 mo
(head of household filing status on your tax)
[4.17 4.02753 4.02751 4.44753 2.08499 4.30504 2.22005 2.08499 4.17 4.30504 4.16998 3.75 
4.02753 4.17001 4.30502 1.66501 4.44751 2.08499 2.22006 1.66501 1.66498 1.66501 4.17001 4.30502 
2.08499 3.75 2.36252 4.02753 2.36252 4.16998 3.75 2.08502 4.30502 4.17001 2.08499 3.75 
4.30502 4.17001 2.49747 2.08496 2.36255 4.02753 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
365.588 95.4251 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
367.673 95.4251 mo
(return )
[2.49744 4.02753 2.36252 4.16998 2.49747 4.16998 0 ]xsh
223.2 103.428 mo
(only if you are unmarried and pay more)
[4.30504 4.17 1.66499 3.75 2.08501 1.66499 2.22005 2.08501 3.75 4.30502 4.17001 2.08499 
4.02753 2.49744 4.02753 2.08499 4.16998 4.17001 6.39749 4.0275 2.49747 2.49744 1.66498 4.02753 
4.44751 2.08502 4.02753 4.16998 4.44751 2.08502 4.44751 4.02753 3.75 2.08499 6.39746 4.30505 
2.49744 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
354.345 103.428 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
356.43 103.428 mo
(than )
[2.36252 4.16998 4.02753 4.17001 0 ]xsh
223.2 111.43 mo
(50% of the costs of keeping up a home)
[4.17 4.17 7.5 2.08501 4.30502 2.22005 2.08501 2.36252 4.16998 4.02753 2.08499 4.02753 
4.30502 3.75 2.36255 3.75 2.08499 4.30502 2.22003 2.08502 3.89246 4.02753 4.02753 4.44751 
1.66501 4.17001 4.30502 2.08499 4.17001 4.44751 2.08499 4.02753 2.08499 4.17001 4.30502 6.39749 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
355.605 111.43 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
357.69 111.43 mo
(for )
[2.22003 4.30505 2.49744 0 ]xsh
223.2 119.433 mo
(yourself and your dependent\(s\) or other)
[3.75 4.30504 4.17 2.49745 3.75 4.02751 1.66499 2.22005 2.08501 4.02751 4.17 4.44751 
2.08502 3.75 4.30502 4.17001 2.49744 2.08499 4.44751 4.02753 4.44751 4.02753 4.17001 4.44751 
4.02753 4.16998 2.36252 1.94254 3.75 1.9425 2.08499 4.30505 2.49744 2.08499 4.30505 2.36252 
4.16998 4.02753 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
355.305 119.433 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
223.2 127.435 mo
(qualifying individuals. See Pub. 501,)
[4.44753 4.16998 4.02753 1.66501 1.66499 2.22005 3.75 1.66499 4.17 4.30504 2.08501 1.66498 
4.17001 4.44751 1.66501 3.75 1.66501 4.44751 4.17001 4.0275 1.66501 3.75 2.08499 2.08499 
4.85999 4.02753 4.0275 2.08499 4.85999 4.16998 4.44751 2.08502 2.08499 4.17001 4.16998 4.16998 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
344.205 127.435 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
346.29 127.435 mo
(Exemptions, )
[4.58243 3.88507 4.0275 6.39749 4.44751 2.36252 1.66501 4.30502 4.17001 3.75 2.08499 0 
]xsh
223.2 135.438 mo
(Standard Deduction, and Filing)
[4.85997 2.36252 4.02751 4.17 4.44751 4.02753 2.49744 4.44753 2.08501 5.27997 4.0275 4.44754 
4.16998 4.02753 2.36252 1.66501 4.30502 4.17001 2.08499 2.08499 4.02753 4.16998 4.44751 2.08502 
4.30502 1.66501 1.66501 1.66501 4.16998 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
327.255 135.438 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
329.34 135.438 mo
(Information, for )
[1.94254 4.16998 2.22003 4.30505 2.49744 6.39746 4.02753 2.36252 1.66501 4.30505 4.16998 2.08499 
2.08499 2.22006 4.30502 2.49744 0 ]xsh
223.2 143.44 mo
(information.)
[1.66499 4.17001 2.22003 4.30504 2.49745 6.39746 4.02753 2.36252 1.66501 4.30502 4.17001 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
223.2 154.443 mo
(Tax credits. )
[4.58244 4.30504 4.02751 2.08501 4.30504 2.91756 4.30504 4.58244 1.93498 2.64001 4.02753 2.08499 
0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
267.083 154.443 mo
(You can take projected tax)
[4.85995 4.30505 4.16998 2.08499 4.02753 4.02753 4.16998 2.08502 2.36252 4.0275 3.89249 4.02753 
2.08499 4.44751 2.49747 4.30502 1.66501 4.02753 4.0275 2.36255 4.0275 4.44754 2.08499 2.36252 
4.02753 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
357.375 154.443 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
359.46 154.443 mo
(credits )
[4.02753 2.49744 4.02753 4.44751 1.66501 2.36252 3.75 0 ]xsh
223.2 162.445 mo
(into account in figuring your allowable)
[1.66499 4.17001 2.36252 4.30502 2.08501 4.02751 4.02753 4.02753 4.30502 4.17001 4.16998 2.36252 
2.08499 1.66501 4.17001 2.08499 2.22003 1.66501 4.30505 4.16998 2.49744 1.66501 4.17001 4.30502 
2.08499 3.75 4.30505 4.16998 2.49744 2.08502 4.02753 1.66498 1.66501 4.30502 5.685 4.0275 
4.44754 1.66498 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
350.288 162.445 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
352.373 162.445 mo
(number of )
[4.17001 4.16998 6.39746 4.44754 4.0275 2.49747 2.08499 4.30505 2.22003 0 ]xsh
223.2 170.448 mo
(withholding allowances. Credits for)
[5.68497 1.66499 2.36252 4.17001 4.16998 4.30505 1.66499 4.44753 1.66499 4.17 4.30502 2.08502 
4.02753 1.66498 1.66501 4.30502 5.685 4.0275 4.17001 4.02753 4.0275 3.75 2.08499 2.08502 
5.41498 2.49747 4.0275 4.44754 1.66501 2.36249 3.75 2.08502 2.22003 4.30505 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
340.688 170.448 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
342.773 170.448 mo
(child or )
[4.02753 4.16998 1.66501 1.66501 4.44751 2.08499 4.30505 2.49744 0 ]xsh
223.2 178.45 mo
(dependent care expenses and the)
[4.44753 4.02751 4.44753 4.02751 4.17 4.44751 4.02753 4.16998 2.36255 2.08499 4.0275 4.02753 
2.49744 4.02753 2.08502 4.0275 3.88504 4.44751 4.02753 4.17001 3.75 4.0275 3.75 2.08502 
4.02753 4.16998 4.44751 2.08502 2.36249 4.17001 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
337.538 178.45 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
339.623 178.45 mo
(child tax )
[4.02753 4.16998 1.66501 1.66501 4.44751 2.08499 2.36252 4.02753 3.88504 0 ]xsh
223.2 186.453 mo
(credit may be claimed using the)
[4.02751 2.49745 4.02751 4.44753 1.66499 2.36252 2.08501 6.39748 4.02753 3.75 2.08499 4.44751 
4.02753 2.08499 4.02753 1.66501 4.02753 1.66498 6.39749 4.0275 4.44754 2.08499 4.16998 3.75 
1.66501 4.17001 4.30502 2.08499 2.36255 4.16998 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
330.18 186.453 mo
( Personal )
[2.08499 5.00256 4.30502 2.91757 4.02753 4.58243 4.44751 4.30505 1.93497 0 ]xsh
223.2 194.455 mo
(Allowances Worksheet )
[5.13748 1.93497 1.93497 4.58244 6.10497 4.30504 4.44751 4.30505 4.30502 4.02753 2.08499 7.08002 
4.58243 2.91757 4.30502 4.02753 4.44751 4.30505 4.30502 2.64005 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
307.065 194.455 mo
(below. See)
[4.44751 4.02753 1.66501 4.30502 5.68497 2.08502 2.08499 4.85995 4.02753 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
344.28 194.455 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
346.365 194.455 mo
(Pub. 919, )
[4.85995 4.17001 4.44751 2.08499 2.08502 4.16998 4.16998 4.17001 2.08499 0 ]xsh
223.2 202.458 mo
(How Do I Adjust My Tax)
[5.41499 4.30505 5.68497 2.08499 5.27997 4.30502 2.08501 1.94252 2.08499 4.85999 4.44751 1.66498 
4.17001 3.75 2.36252 2.08499 6.53253 3.75 2.08499 4.30505 4.0275 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
304.313 202.458 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
306.398 202.458 mo
(Withholding, for )
[6.94498 1.66498 2.36252 4.17001 4.16998 4.30505 1.66498 4.44754 1.66501 4.16998 4.30505 2.08499 
2.08499 2.22003 4.30505 2.49744 0 ]xsh
223.2 210.46 mo
(information on converting)
[1.66499 4.17001 2.22003 4.30504 2.49745 6.39746 4.02753 2.36252 1.66501 4.30502 4.17001 2.08499 
4.30505 4.16998 2.08499 4.02753 4.30502 4.17001 3.75 4.02753 2.49744 2.36252 1.66501 4.16998 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
308.91 210.46 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
310.995 210.46 mo
(your other credits into )
[3.75 4.30505 4.16998 2.49744 2.08502 4.30502 2.36252 4.16998 4.02753 2.49744 2.08502 4.02753 
2.49744 4.02753 4.44751 1.66498 2.36255 3.75 2.08499 1.66501 4.16998 2.36252 4.30502 0 
]xsh
223.2 218.463 mo
(withholding allowances.)
[5.68497 1.66499 2.36252 4.17001 4.16998 4.30505 1.66499 4.44753 1.66499 4.17 4.30502 2.08502 
4.02753 1.66498 1.66501 4.30502 5.685 4.0275 4.17001 4.02753 4.0275 3.75 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
223.2 229.465 mo
(Nonwage income. )
[5.55748 4.58244 4.44753 6.10495 4.30505 4.58243 4.30505 2.08499 1.93497 4.44751 4.30505 4.58243 
6.79504 4.30505 2.08499 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
289.71 229.465 mo
(If you have a large amount)
[1.9425 2.22006 2.08499 3.75 4.30505 4.16998 2.08499 4.17001 4.02753 3.75 4.0275 2.08499 
4.02753 2.08502 1.66498 4.02753 2.49744 4.30505 4.02753 2.08499 4.0275 6.39749 4.30502 4.17001 
4.17001 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
378.48 229.465 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
380.565 229.465 mo
(of )
[4.30502 2.22006 0 ]xsh
223.2 237.468 mo
(nonwage income, such as interest or)
[4.17 4.30504 4.17 5.68497 4.02753 4.30502 4.02753 2.08499 1.66501 4.16998 4.02753 4.30505 
6.39746 4.02753 2.08499 2.08499 3.75 4.17001 4.02753 4.16998 2.08499 4.02753 3.75 2.08502 
1.66498 4.17001 2.36252 4.02753 2.49744 4.02753 3.75 2.36249 2.08502 4.30502 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
346.553 237.468 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
348.638 237.468 mo
(dividends, )
[4.44751 1.66501 3.75 1.66501 4.44751 4.02753 4.16998 4.44754 3.75 2.08499 0 ]xsh
223.2 245.47 mo
(consider making estimated tax payments using)
[4.02751 4.30505 4.16998 3.75 1.66501 4.44751 4.02753 2.49744 2.08501 6.39748 4.02753 3.89246 
1.66501 4.17001 4.30502 2.08499 4.02753 3.75 2.36252 1.66501 6.39746 4.02753 2.36252 4.02753 
4.44751 2.08499 2.36255 4.0275 3.88504 2.08502 4.44751 4.02753 3.75 6.39746 4.02753 4.16998 
2.36255 3.75 2.08496 4.17001 3.75 1.66501 4.16998 0 ]xsh
410.4 44.4702 mo
(Form 1040-ES, Estimated Tax for Individuals. )
[4.30502 4.30505 2.49744 6.39749 2.08499 4.16998 4.17001 4.17001 4.16998 2.91754 4.58246 4.85995 
2.08499 2.08502 4.58243 3.75 2.36252 1.66501 6.39749 4.0275 2.36252 4.02753 4.44751 2.08502 
4.30502 4.02753 3.88504 2.08502 2.22003 4.30499 2.49744 2.08502 1.9425 4.17004 4.44751 1.66498 
3.75 1.66504 4.44751 4.16998 4.02753 1.66498 3.75 2.08502 0 ]xsh
410.4 52.4727 mo
(Otherwise, you may owe additional tax. If you )
[5.69995 2.36252 4.17001 4.0275 2.49747 5.68497 1.66498 3.75 4.02753 2.08502 2.08499 3.75 
4.30502 4.17001 2.08499 6.39746 4.02753 3.75 2.08502 4.30502 5.68497 4.02753 2.08499 4.02753 
4.44751 4.44751 1.66501 2.36249 1.66504 4.30505 4.16998 4.02753 1.66498 2.08502 2.36249 4.02753 
3.88501 2.08502 2.08502 1.9425 2.22003 2.08502 3.75 4.30505 4.16998 0 ]xsh
410.4 60.4752 mo
(have pension or annuity income, see Pub. 919 to )
[4.17001 4.0275 3.75 4.02753 2.08499 4.44751 4.02753 4.17001 3.75 1.66501 4.30502 4.17001 
2.08499 4.30502 2.49744 2.08502 4.02753 4.16998 4.16998 4.17001 1.66501 2.36252 3.75 2.08499 
1.66501 4.16998 4.02753 4.30502 6.39746 4.02753 2.08502 2.08502 3.75 4.02753 4.02747 2.08502 
4.85992 4.17004 4.44751 2.08496 2.08502 4.16998 4.17004 4.16998 2.08502 2.36249 4.30505 0 
]xsh
410.4 68.4777 mo
(find out if you should adjust your withholding on )
[2.22003 1.66501 4.16998 4.44754 2.08499 4.30505 4.16998 2.36252 2.08499 1.66501 2.22003 2.08499 
3.75 4.30505 4.16998 2.08502 3.75 4.16998 4.30505 4.16998 1.66501 4.44751 2.08499 4.02753 
4.44751 1.66501 4.17001 3.75 2.36252 2.08499 3.75 4.30505 4.16998 2.49744 2.08502 5.68494 
1.66504 2.36249 4.16998 4.17004 4.30505 1.66498 4.44751 1.66498 4.17004 4.30499 2.08502 4.30505 
4.16998 0 ]xsh
410.4 76.4802 mo
(Form W-4 or W-4P.)
[4.30502 4.30505 2.49744 6.39749 2.08499 6.94495 2.91757 4.17001 2.08499 4.30502 2.49744 2.08502 
6.94495 2.91757 4.16998 4.85995 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 87.4827 mo
(Two earners or multiple jobs. )
[4.58243 6.10498 4.58246 2.08499 4.30502 4.30505 2.91754 4.44751 4.30505 2.91754 4.02753 2.08502 
4.58243 2.91757 2.08499 6.79504 4.44751 1.93497 2.64005 1.93497 4.58243 1.93497 4.30505 2.08499 
2.08499 4.58246 4.58243 4.02756 2.08496 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
516.758 87.4827 mo
(If you have a)
[1.9425 2.22003 2.08502 3.75 4.30505 4.16998 2.08502 4.16998 4.02753 3.75 4.02753 2.08496 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
559.403 87.4827 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 95.4852 mo
(working spouse or more than one job, figure)
[5.68497 4.30505 2.49744 3.89246 1.66501 4.17001 4.30502 2.08499 3.75 4.44754 4.30502 4.17001 
3.75 4.0275 2.08502 4.30502 2.49747 2.08499 6.39746 4.30505 2.49744 4.02753 2.08499 2.36252 
4.17001 4.0275 4.17001 2.08499 4.30502 4.16998 4.02753 2.08502 1.66498 4.30505 4.44751 2.08502 
2.08496 2.22009 1.66498 4.30505 4.16998 2.49744 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
558.615 95.4852 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
560.7 95.4852 mo
(the )
[2.36255 4.16998 4.02753 0 ]xsh
410.4 103.488 mo
(total number of allowances you are entitled)
[2.36252 4.30505 2.36249 4.02753 1.66501 2.08499 4.17001 4.16998 6.39749 4.44751 4.02753 2.49744 
2.08499 4.30505 2.22003 2.08499 4.02753 1.66501 1.66501 4.30502 5.68497 4.02753 4.16998 4.02753 
4.02753 3.75 2.08499 3.75 4.30502 4.16998 2.08502 4.02753 2.49744 4.02753 2.08502 4.02747 
4.17004 2.36249 1.66498 2.36255 1.66504 4.02747 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
554.723 103.488 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
556.808 103.488 mo
(to )
[2.36249 4.30505 0 ]xsh
410.4 111.49 mo
(claim on all jobs using worksheets from only)
[4.02753 1.66501 4.0275 1.66501 6.39746 2.08502 4.30502 4.17001 2.08499 4.02753 1.66501 1.66498 
2.08502 1.66498 4.30505 4.44751 3.75 2.08499 4.17001 3.75 1.66498 4.17001 4.30502 2.08502 
5.68497 4.30502 2.49744 3.89249 3.75 4.17001 4.02753 4.02753 2.36249 3.75 2.08502 2.22003 
2.49744 4.30505 6.39746 2.08496 4.30505 4.17004 1.66498 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
558.615 111.49 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
560.7 111.49 mo
(one )
[4.30505 4.16998 4.02753 0 ]xsh
410.4 119.493 mo
(Form W-4. Your withholding usually will)
[4.30502 4.30505 2.49744 6.39749 2.08499 6.94495 2.91757 4.17001 2.08499 2.08499 4.85995 4.30505 
4.16998 2.49747 2.08499 5.68497 1.66498 2.36255 4.16998 4.16998 4.30505 1.66501 4.44751 1.66501 
4.16998 4.30505 2.08499 4.17001 3.75 4.16998 4.02753 1.66498 1.66504 3.75 2.08496 5.685 
1.66498 1.66504 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
542.768 119.493 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
544.853 119.493 mo
(be most )
[4.44751 4.02753 2.08502 6.39746 4.30505 3.75 2.36249 0 ]xsh
410.4 127.495 mo
(accurate when all allowances are)
[4.02753 4.0275 4.02753 4.17001 2.49744 4.02753 2.36252 4.02753 2.08499 5.68497 4.16998 4.02753 
4.16998 2.08502 4.02753 1.66498 1.66501 2.08499 4.02753 1.66501 1.66501 4.30502 5.68497 4.02753 
4.16998 4.02753 4.02753 3.75 2.08499 4.0275 2.4975 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
521.22 127.495 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
523.305 127.495 mo
(claimed on the )
[4.02753 1.66498 4.02753 1.66504 6.39746 4.02753 4.44751 2.08496 4.30505 4.16998 2.08502 2.36249 
4.17004 4.02753 0 ]xsh
410.4 135.498 mo
(Form W-4 for the highest)
[4.30502 4.30505 2.49744 6.39749 2.08499 6.94495 2.91757 4.17001 2.08499 2.22003 4.30502 2.49747 
2.08499 2.36252 4.17001 4.0275 2.08499 4.17001 1.66501 4.30502 4.17001 4.02753 3.75 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
494.31 135.498 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
496.395 135.498 mo
(paying job and zero )
[4.44751 4.02753 3.75 1.66501 4.16998 4.30505 2.08502 1.66498 4.30505 4.44751 2.08496 4.02753 
4.17004 4.44751 2.08496 3.59998 4.02753 2.49744 4.30505 0 ]xsh
410.4 143.5 mo
(allowances are claimed on)
[4.02753 1.66501 1.66498 4.30505 5.68497 4.0275 4.17001 4.02753 4.0275 3.75 2.08502 4.02753 
2.49744 4.02753 2.08499 4.0275 1.66501 4.02753 1.66501 6.39746 4.02753 4.44751 2.08502 4.30502 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
499.29 143.5 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
501.375 143.5 mo
(the others. See Pub. )
[2.36252 4.16998 4.02753 2.08502 4.30499 2.36255 4.16998 4.02753 2.49744 3.75 2.08502 2.08502 
4.85992 4.02753 4.02753 2.08502 4.85992 4.16998 4.44751 2.08502 0 ]xsh
410.4 151.503 mo
(919 for details.)
[4.17001 4.16998 4.16998 2.08502 2.22003 4.30505 2.49744 2.08499 4.44751 4.02753 2.36252 4.02753 
1.66498 1.66501 3.75 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 162.505 mo
(Nonresident alien. )
[5.55746 4.58246 4.44751 2.91757 4.30502 4.02753 1.93497 4.58243 4.30505 4.44751 2.64005 2.08499 
4.30505 1.93497 1.93497 4.30502 4.44754 2.08499 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
477.33 162.505 mo
(If you are a nonresident)
[1.9425 2.22006 2.08499 3.75 4.30505 4.16998 2.08499 4.02753 2.49744 4.02753 2.08499 4.02753 
2.08502 4.16998 4.30505 4.16998 2.49744 4.02753 3.75 1.66498 4.44751 4.02753 4.16998 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
556.23 162.505 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
558.315 162.505 mo
(alien, )
[4.02753 1.66498 1.66504 4.02753 4.16998 2.08496 0 ]xsh
410.4 170.508 mo
(see Notice 1392, Supplemental Form)
[3.75 4.02753 4.0275 2.08502 5.41498 4.30505 2.36252 1.66501 4.02753 4.0275 2.08499 4.17001 
4.17001 4.16998 4.16998 2.08502 2.08499 4.85995 4.17001 4.44751 4.44751 1.66501 4.02753 6.39746 
4.02753 4.16998 2.36255 4.02753 1.66498 2.08502 4.30499 4.30505 2.49744 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
534.885 170.508 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
536.97 170.508 mo
(W-4 )
[6.94495 2.91754 4.17004 0 ]xsh
410.4 178.51 mo
(Instructions for Nonresident Aliens, before)
[1.94254 4.16998 3.75 2.36252 2.49744 4.17001 4.02753 2.36249 1.66501 4.30505 4.16998 3.75 
2.08499 2.22006 4.30502 2.49744 2.08502 5.41498 4.30505 4.16998 2.49747 4.0275 3.75 1.66501 
4.44754 4.0275 4.17001 2.36252 2.08499 4.85995 1.66501 1.66498 4.02753 4.16998 3.75 2.08502 
2.08502 4.44751 4.02753 2.22003 4.30505 2.49744 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
551.52 178.51 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 186.513 mo
(completing this form.)
[4.02753 4.30502 6.39749 4.44751 1.66501 4.02753 2.36249 1.66501 4.17001 4.30502 2.08499 2.36255 
4.16998 1.66501 3.75 2.08499 2.22003 4.30505 2.49744 6.39746 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 197.515 mo
(Check your withholding. )
[5.55746 4.44754 4.30502 4.30505 4.30502 2.08499 3.89249 4.58246 4.44751 2.91757 2.08499 6.10495 
1.93497 2.64005 4.44751 4.44751 4.58246 1.93497 4.58243 1.935 4.44751 4.58243 2.08499 0 
]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
499.14 197.515 mo
(After your Form W-4)
[4.85995 2.22006 2.36249 4.02753 2.49744 2.08502 3.75 4.30505 4.16998 2.49744 2.08502 4.30499 
4.30505 2.49744 6.39752 2.08496 6.94495 2.9176 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
567.622 197.515 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 205.518 mo
(takes effect, use Pub. 919 to see how the)
[2.36252 4.02753 3.89246 4.02753 3.75 2.08502 4.0275 2.22006 2.22003 4.02753 4.0275 2.36252 
2.08502 2.08499 4.16998 3.75 4.02753 2.08499 4.85999 4.16998 4.44751 2.08502 2.08499 4.16998 
4.17001 4.16998 2.08502 2.36249 4.30505 2.08499 3.75003 4.02753 4.02747 2.08502 4.16998 4.30505 
5.68494 2.08502 2.36249 4.17004 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
549.323 205.518 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 213.52 mo
(amount you are having withheld compares to)
[4.02753 6.39746 4.30505 4.16998 4.17001 2.36252 2.08499 3.75 4.30505 4.16998 2.08499 4.02753 
2.49744 4.02753 2.08499 4.17001 4.0275 3.75 1.66501 4.17001 4.30502 2.08499 5.685 1.66498 
2.36252 4.17001 4.16998 4.02753 1.66498 4.44751 2.08502 4.02753 4.30505 6.39746 4.44751 4.02753 
2.49744 4.02753 3.75 2.08496 2.36255 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
561.548 213.52 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
410.4 221.523 mo
(your projected total tax for 2011. See Pub.)
[3.75 4.30502 4.17001 2.49744 2.08499 4.44754 2.49744 4.30502 1.66501 4.02753 4.02753 2.36252 
4.02753 4.44751 2.08499 2.36252 4.30505 2.36249 4.02753 1.66501 2.08499 2.36252 4.02753 3.88504 
2.08499 2.22006 4.30502 2.49744 2.08499 4.17001 4.17001 4.16998 4.16998 2.08502 2.08496 4.85999 
4.02753 4.02753 2.08496 4.85999 4.17004 4.44751 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
552.788 221.523 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
554.873 221.523 mo
(919, )
[4.16998 4.17004 4.16998 2.08496 0 ]xsh
410.4 229.525 mo
(especially if your earnings exceed)
[4.02753 3.75 4.44751 4.02753 4.0275 1.66501 4.02753 1.66501 1.66498 3.75 2.08502 1.66498 
2.22006 2.08499 3.75 4.30505 4.16998 2.49744 2.08502 4.0275 4.02753 2.49744 4.17001 1.66498 
4.17001 4.30502 3.75 2.08502 4.02753 3.88501 4.02753 4.02753 4.02753 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.5 0 0 -7.5 0 0 ]msf
523.455 229.525 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
525.54 229.525 mo
($130,000 )
[4.16998 4.16998 4.17004 4.16998 2.08502 4.16998 4.16998 4.16998 0 ]xsh
410.4 237.528 mo
(\(Single\) or $180,000 \(Married\).)
[1.94254 4.85995 1.66501 4.16998 4.30505 1.66498 4.02753 1.9425 2.08502 4.30502 2.49747 2.08499 
4.16998 4.17001 4.16998 4.17001 2.08499 4.16998 4.17001 4.17001 2.08499 1.9425 6.53253 4.0275 
2.49747 2.49744 1.66501 4.02753 4.44751 1.9425 0 ]xsh
set_def_flat
1 lw
35.75 252 mo
576.25 252 li
@
1 setflat
set_def_flat
.5 lw
35.75 263.999 mo
576.25 263.999 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
175.002 260.224 mo
(Personal Allowances Worksheet )
[6.67007 5.74005 3.89008 5.37003 6.10992 5.93002 5.74005 2.57996 2.78 6.84998 2.57996 2.57996 
6.10992 8.13995 5.74005 5.93001 5.74005 5.74005 5.37006 2.77997 9.44 6.10992 3.89008 5.74005 
5.37006 5.92999 5.74005 5.74005 3.52008 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/K <1C60D8A8C9B64EDFA3F30AEA61CA89752887E45433033D62A8C08B98AC4D
ED8A34321EA2F59660E66B0DA74672869658045CE135BCCD1963E626404885E8
66> |-
/quotedblleft <1C60D8A8C9B71131DFA7C580178285AA054A5A9B8CEC3BEC6
BDFA738275248C2181003880B2704A816DBE9AA1307C1AC7B893389DAB8C3226
8A89622E224CA23F5CF48949A44A9BAF54813CE5170F9> |-
/quotedblright <1C60D8A8C9B71131DFA78FF9EDD7DC176A59409FFBC35DC2
E83E729F5A0B357DD5E899B9FD9197D518CB4A3C9A673A5082793C3F482287C7
57DF8F1F4A00CB86CE503248A5A6DD92A6203CE876A437> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 75 /K put
dup 170 /quotedblleft put
dup 186 /quotedblright put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /slash /zero /one /two 
/three /four /five /six /seven /eight /nine 7{/.notdef}rp 
/A /.notdef /C /D /E /F /G /H 
/I /.notdef /K /.notdef /M /N /O /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W /.notdef /Y 7{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [10 0 0 -10 0 0 ]msf
331.632 260.224 mo
(\(Keep for your records.\))
[2.59003 6.67007 5.37003 5.37003 5.93002 2.78 2.96005 5.74005 3.32993 2.78 5 5.74005 
5.56 3.32993 2.78 3.32993 5.37003 5.37003 5.74005 3.32993 5.93002 5 2.78 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 273.567 mo
(A)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 273.567 mo
(Enter \2521\272 for )
[5.19344 4.72599 2.67752 4.56453 2.83043 2.36301 3.62096 4.726 3.62096 2.36299 2.51605 4.87904 
2.83043 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
106.873 273.567 mo
(yourself )
[4.41148 5.19344 5.04052 3.30656 4.56453 4.87903 2.19296 2.83044 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
141.655 273.567 mo
(if no one else can claim you as a dependent..................)
[1.88699 2.51605 2.36301 4.72598 4.87906 2.36299 4.87904 4.726 4.56453 2.36299 4.56453 1.88699 
4.25 4.56451 2.36301 4.56451 4.56453 4.726 2.36301 4.56451 1.88699 4.56453 1.88701 7.25046 
2.36301 4.25 4.87904 4.726 2.36301 4.56451 4.25 2.36301 4.56451 2.36301 5.04053 4.56451 
5.04053 4.56451 4.72598 5.04053 4.56451 4.72601 6.12003 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.825 273.567 mo
(A)sh
set_def_flat
546.95 275.998 mo
576.25 275.998 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 297.568 mo
(B)sh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B854D0FB84274EB091F18F1F7E589D44EFD4D0869
717C1A8B1862E2B3FD5EB96F56A1BF450F6E41B8519> |-
/colon <1C60D8A8C9B854D088EA7EB6412D7C7D5124509928809EDD5ED7B208
0EC1FB14006899C81807B046263F705D1041162D24> |-
/semicolon <1C60D8A8C9B854D088EA7EB6412D7C7D5124509928809EEC70EC
F50FE4D0740C8999C8BE543A5F345FEC43AE553C8A7028FE682CB81B36A90DA4
DBACDBC5C5> |-
/bullet <1C60D8A8C9B7A73DB96349318805D706307AE97EB774B75B56FBA43
23757CC9ADA1883635DB4CD72E13244> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 39 /quoteright put
dup 58 /colon put
dup 59 /semicolon put
dup 183 /bullet put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /.notdef /C /D /E 
/F /G /H /I /.notdef /K /.notdef /M 
/N /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/.notdef /Y 7{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 47{/.notdef}rp /quotedblleft 12{/.notdef}rp 
/bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 297.568 mo
(Enter \2521\272 if:)
[5.19344 4.72599 2.67752 4.56453 2.83043 2.36301 3.62096 4.726 3.62096 2.36299 1.88701 2.51604 
0 ]xsh
%ADOBeginSubsetFont: GFNBAA+TimesLTStd-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+TimesLTStd-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright 1985, 1987, 1989, 1990, 1993, 1997, 1998, 1999, 2002 Adobe Systems Incorporated. All Rights Reserved. Times is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/braceleft <1C60D8A8C9B75BE5157E200E19847916E1C21B8B531EA0C730F7
8879AD07805056291EF2647B624134CA08E147D2A3C99827F7790E2947B87468
05C26BD3153E5D967F8D8344FF26C48EC1382F04802DD3720DB93AC8CDD7B6BD
B78934CC25> |-
/braceright <1C60D8A8C9B75BE5157E200E19847916E1FEFA893472082F8E1
B50325B0F556CE2319A6C1A1196435C60FBC292FD21884A39E84F9D278F23867
8BA4C72BD0AC85196827B6CA267BF08676708CFE6EB0E43EE661BAAE39265170
2ACB1D993790D> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKR+TimesLTStd-Roman /GFNBAA+TimesLTStd-Roman findfont ct_VMDictPut
/PZSRKR+TimesLTStd-Roman*1 
[123{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
PZSRKR+TimesLTStd-Roman nf
PZSRKR+TimesLTStd-Roman*1 [14.4 0 0 -33.6 0 0 ]msf
108 301.15 mo
({)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
122.4 285.569 mo
(\267 You are single and have only one job; or)
[4.25 2.363 5.50797 4.87903 4.72601 2.36299 4.56453 2.83043 4.56453 2.36299 4.25 1.88701 
4.72598 4.87906 1.88699 4.56451 2.36301 4.56451 4.72601 5.04051 2.36299 4.72601 4.56451 4.25 
4.56451 2.36301 4.87904 4.726 1.88699 4.25 2.36301 4.87904 4.726 4.56451 2.36301 1.88699 
4.87906 5.0405 2.36301 2.36301 4.87903 0 ]xsh
122.4 297.571 mo
(\267 You are married, have only one job, and your spouse does not work; or                                   ...)
[4.25 2.363 5.50797 4.87903 4.72601 2.36299 4.56453 2.83043 4.56453 2.36299 7.25047 4.56451 
2.83044 2.83044 1.88699 4.56451 5.04053 2.36301 2.36299 4.726 4.56451 4.25 4.56453 2.36299 
4.87906 4.72598 1.88701 4.25 2.36299 4.87906 4.72598 4.56453 2.36299 1.88699 4.87906 5.04053 
2.36298 2.36301 4.56451 4.72601 5.04053 2.36298 4.25 4.87906 4.72598 2.83044 2.36301 4.25 
5.04053 4.87903 4.72601 4.25 4.56451 2.36301 5.0405 4.87906 4.56451 4.25 2.36301 4.72598 
4.87906 2.67752 2.36301 6.44296 4.87903 2.83044 4.41147 2.36301 2.36298 4.87906 2.83044 2.36301 
2.36298 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 2.36301 2.36298 2.36301 2.36301 2.36298 
2.36301 2.36301 2.36301 2.36301 2.36298 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 2.36301 
2.36298 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 2.36301 2.36298 12.954 12.002 12.002 
0 ]xsh
122.4 309.573 mo
(\267)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.16 0 0 -8.5 0 0 ]msf
126.65 309.567 mo
( Your wages from a second job or your spouse's wages \(or the total of both\) are $1,500 or less.)
[2.26849 5.28763 4.68388 4.53696 2.71722 2.26848 6.18524 4.38194 4.68388 4.38194 4.08 2.26846 
2.41541 2.71722 4.68388 6.96046 2.26846 4.38194 2.26848 4.08 4.38194 4.38194 4.68388 4.53696 
4.8389 2.26848 1.81152 4.68388 4.8389 2.26848 4.68388 2.71722 2.26846 4.08002 4.68387 4.53696 
2.71722 2.26846 4.08002 4.8389 4.68387 4.53696 4.08002 4.38193 2.26849 4.07999 2.26849 6.18524 
4.38193 4.6839 4.38193 4.08002 2.26846 2.11346 4.68387 2.71722 2.26849 2.5704 4.53696 4.38196 
2.26846 2.57043 4.68387 2.57043 4.38193 1.81152 2.26849 4.68387 2.41541 2.26846 4.8389 4.6839 
2.5704 4.53696 2.11346 2.26849 4.38193 2.71722 4.38193 2.26849 4.53696 4.53696 2.26849 4.53696 
4.53696 4.53696 2.26846 4.6839 2.71719 2.26849 1.81152 4.38193 4.08002 4.07999 0 ]xsh
PZSRKR+TimesLTStd-Roman*1 [14.4 0 0 -33.6 0 0 ]msf
475.2 301.15 mo
(})sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.8 297.568 mo
(B)sh
set_def_flat
546.95 299.999 mo
576.25 299.999 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 321.569 mo
(C)sh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B620B78F80EE0CAC255A65B162516E7DBE65CE2F4FB479487A
8A118DDD04BF075EC753D79D584330022F1CEE72838DFE2D66B3AF6E31874AC0
AA83DCDC1358DB476EC567601B32F9D27FA94BC00BAF65E3890A3DED40E4EC40
9750631ACF173D840B2FC092E30405C16F2D3B935EC8B2FA22AB4478A76B09E8
481E55EF11EB399094034346BB305BF415072BC393CD8414AB986914DB831F24
C7AC9AC4E825885F89A59FD4A3BD7E398D32> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /.notdef /M 
/N /O /P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 
/.notdef /Y 7{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 47{/.notdef}rp /quotedblleft 12{/.notdef}rp 
/bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 320.872 mo
(Enter \2521\272 for your )
[5.19344 4.72599 2.67752 4.56453 2.83043 2.4395 3.62096 4.726 3.62096 2.4395 2.51604 4.87904 
2.83044 2.4395 4.25 4.87904 4.726 2.83043 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
126.228 320.872 mo
(spouse. )
[4.56452 5.19344 5.19344 5.04053 4.56451 4.87904 2.36299 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
160.465 320.872 mo
(But, you may choose to enter \252-0-\272 if you are married and have either a working spouse or more )
[5.82248 4.726 2.67752 2.36301 2.43948 4.25 4.87906 4.72598 2.43951 7.25046 4.56453 4.25 
2.4395 4.56451 4.72601 4.87903 4.87906 4.25 4.56451 2.431 2.67752 4.87906 2.43948 4.56454 
4.72598 2.67752 4.56451 2.83044 2.431 3.62094 3.30658 4.72601 3.30655 3.62094 2.43951 1.88699 
2.51605 2.43948 4.25 4.87906 4.72598 2.43951 4.56451 2.83044 4.56451 2.43951 7.25049 4.56451 
2.83044 2.83044 1.88699 4.56451 5.04053 2.43948 4.56454 4.72598 5.04053 2.431 4.72598 4.56451 
4.25 4.56454 2.43948 4.56454 1.88699 2.67752 4.72598 4.56451 2.83044 2.43951 4.56451 2.43951 
6.44293 4.87909 2.83044 4.41144 1.88702 4.72601 4.87903 2.43945 4.25 5.04053 4.87903 4.72601 
4.25 4.56451 2.43103 4.87903 2.83044 2.43945 7.25049 4.87903 2.83044 4.56451 0 ]xsh
57.6495 331.871 mo
(than one job. \(Entering \252-0-\272 may help you avoid having too little tax withheld.\) ..............)
[2.67752 4.726 4.56451 4.726 2.36301 4.87904 4.726 4.56451 2.36301 1.88699 4.87904 5.04053 
2.36299 2.36301 2.20152 5.19344 4.726 2.67752 4.56451 2.83044 1.88699 4.726 4.87904 2.36301 
3.62096 3.30656 4.726 3.30656 3.62096 2.36299 7.25047 4.56453 4.25 2.36299 4.72601 4.56451 
1.88699 5.04053 2.36301 4.25 4.87903 4.72601 2.36299 4.56453 4.25 4.87903 1.88701 5.04051 
2.36301 4.726 4.56453 4.25 1.88699 4.72598 4.87906 2.36301 2.67752 4.87903 4.87906 2.36298 
1.88702 1.88699 2.67752 2.67752 1.88699 4.56451 2.36301 2.67752 4.56451 4.40305 2.36301 6.44296 
1.88702 2.67749 4.72601 4.72601 4.56451 1.88699 5.04053 2.36301 2.20151 6.40903 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.867 333.571 mo
(C)sh
set_def_flat
546.95 335.999 mo
576.25 335.999 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6184AC728F715EA440622B8039708F04AF96E41DE1A58EA80
BC41BEB10657585AC4DC6E49D03D22B772630F66660AABD8DB8908344D75CE98
0D442B8743124A0CBA0CF6B5F1E69DB7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A /B /C 
/D /E 2{/.notdef}rp /H 5{/.notdef}rp /N /.notdef /P 
3{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /.notdef /w /x /y 134{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 345.567 mo
(D)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 345.567 mo
(Enter number of )
[5.19344 4.72599 2.67752 4.56453 2.83043 2.36301 4.726 4.726 7.25047 5.04051 4.56453 2.83043 
2.36301 4.87904 2.51604 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
121.212 345.567 mo
(dependents )
[5.19344 4.87904 5.19344 4.87904 5.04051 5.19345 4.87903 5.04053 2.99203 4.56453 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
171.43 345.567 mo
(\(other than your spouse or yourself\) you will claim on your tax return ........)
[2.20152 4.87904 2.67752 4.726 4.56453 2.83043 2.36299 2.67752 4.72601 4.56451 4.726 2.36299 
4.25 4.87906 4.72598 2.83044 2.36301 4.25 5.04051 4.87904 4.726 4.24998 4.56454 2.36301 
4.87903 2.83044 2.36298 4.25 4.87906 4.72598 2.83044 4.25 4.56451 1.88702 2.51605 2.20151 
2.36301 4.25 4.87903 4.72601 2.36298 6.44299 1.88699 1.88699 1.88699 2.36301 4.56451 1.88702 
4.56451 1.88699 7.25046 2.36301 4.87906 4.72598 2.36301 4.25 4.87903 4.72601 2.83044 2.36298 
2.67755 4.56451 4.40305 2.36301 2.83041 4.56454 2.67749 4.72601 2.83044 4.72598 3.026 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.808 345.567 mo
(D)sh
set_def_flat
546.95 347.998 mo
576.25 347.998 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 357.569 mo
(E)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 357.569 mo
(Enter \2521\272 if you will file as )
[5.19344 4.72599 2.67752 4.56453 2.83043 2.36301 3.62096 4.726 3.62096 2.36299 1.88701 2.51604 
2.36301 4.25 4.87904 4.726 2.36299 6.44296 1.88701 1.88699 1.88701 2.36299 2.51605 1.88699 
1.88701 4.56451 2.36301 4.56451 4.25 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
156.13 357.569 mo
(head of household )
[5.04053 4.87903 4.87906 5.19342 2.36301 5.19344 2.83043 2.36301 5.04053 5.19342 5.04053 4.56451 
4.87906 5.04051 5.19344 2.19296 5.19344 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
233.574 357.569 mo
(on your tax return \(see conditions under )
[4.87904 4.726 2.36301 4.25 4.87903 4.72601 2.83044 2.36298 2.67752 4.56454 4.40302 2.36301 
2.83044 4.56451 2.67752 4.72601 2.83044 4.72598 2.36301 2.20151 4.25 4.56454 4.56451 2.36298 
4.56454 4.87903 4.72601 5.0405 1.88702 2.67752 1.88699 4.87903 4.72601 4.25 2.36301 4.72598 
4.72601 5.04053 4.56451 2.83044 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
387.39 357.569 mo
(Head of household )
[6.29846 4.87906 4.87906 5.19342 2.36301 5.19342 2.83044 2.36301 5.04053 5.19342 5.04053 4.56451 
4.87903 5.04053 5.19345 2.19296 5.19342 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
466.091 357.569 mo
(above\) ..)
[4.56451 5.04053 4.87906 4.25 4.56451 2.20151 12.41 12.002 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.799 357.569 mo
(E)sh
set_def_flat
546.95 360 mo
576.25 360 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7CA647DE1C48F9C4687B08955F8336BCF8715F08A41E17834
59E98373110F13BFFA77A936A46DA97E534097ADD083017D12EC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 70 /F put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A /B /C 
/D /E /F /.notdef /H 5{/.notdef}rp /N /.notdef 
/P 3{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w /x /y 134{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 369.568 mo
(F)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.5985 369.568 mo
(Enter \2521\272 if you have at least $1,900 of )
[5.19344 4.72599 2.67752 4.56453 2.83043 2.36301 3.62096 4.726 3.62096 2.36299 1.88701 2.51604 
2.36301 4.25 4.87904 4.726 2.36299 4.726 4.56453 4.25 4.56451 2.36301 4.56451 2.67752 
2.36301 1.88699 4.56453 4.56451 4.25 2.67752 2.36301 4.726 4.726 2.36299 4.726 4.726 
4.726 2.36301 4.87903 2.51605 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
205.762 369.568 mo
(child or dependent care expenses )
[4.87904 5.04053 2.19296 2.19296 5.19342 2.36301 5.19344 3.30656 2.36301 5.19342 4.87906 5.19342 
4.87906 5.04053 5.19342 4.87903 5.04053 2.99207 2.36298 4.87906 4.87903 3.30658 4.87903 2.36301 
4.87903 4.56454 5.19342 4.87906 5.04053 4.56451 4.87903 4.56451 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
345.375 369.568 mo
(for which you plan to claim a credit ...)
[2.51605 4.87903 2.83044 2.36301 6.44296 4.72598 1.88699 4.56454 4.72598 2.36301 4.25 4.87906 
4.72598 2.36301 5.04053 1.88699 4.56451 4.72598 2.36301 2.67752 4.87906 2.36301 4.56451 1.88699 
4.56451 1.88699 7.25049 2.36301 4.56451 2.36301 4.56451 2.83044 4.56451 5.04053 1.88699 2.67752 
13.6 12.002 12.002 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.799 369.568 mo
(F)sh
set_def_flat
546.95 371.999 mo
576.25 371.999 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 381.567 mo
(\()sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6EA91968DE5AA117AB1A67F1CFCABDAA2E967FD2910C50267
294BF4F8A108FCA0F5ED48AD8852615C0DA71A2D2A850156A251C15198C41A14
8F058590479EB47ADBA6DA002D4769DAF4BE3BC06F074346EA75F01C7C101A20
1CBB4BA0E91B3D4F130A08F1736AA37692283E1634E945C5DE190DFECAC9CFAA
B0BFE22A3EBBD7DFF94E711EAEBB4983> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 18{/.notdef}rp /A /B /C 
/D /E /F /G /H 5{/.notdef}rp /N /.notdef 
/P 3{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /.notdef /w /x /y 134{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
59.8015 381.567 mo
(Note. )
[6.29848 5.19344 2.99204 4.87904 2.363 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
83.8905 381.567 mo
(Do )
[5.98396 4.87904 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
97.1165 381.567 mo
(not )
[5.04052 5.19344 2.99204 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
112.706 381.567 mo
(include child support payments. See Pub. 503, Child and Dependent Care Expenses, for details.\) )
[1.887 4.726 4.56452 1.887 4.726 5.04053 4.56451 2.36301 4.56451 4.726 1.88701 1.88699 
5.04053 2.36299 4.25 4.726 5.04053 5.04051 4.87904 2.83044 2.67752 2.36299 5.04051 4.56453 
4.25 7.25047 4.56451 4.72601 2.67752 4.25 2.36299 2.36299 5.50797 4.56451 4.56451 2.36301 
5.50797 4.72598 5.04053 2.36301 2.36301 4.72598 4.72601 4.72598 2.36301 2.36301 6.13699 4.72598 
1.88702 1.88699 5.04053 2.36298 4.56454 4.72598 5.04053 2.36301 5.98395 4.56451 5.04053 4.56451 
4.72601 5.0405 4.56454 4.72598 2.67752 2.36301 6.13699 4.56451 2.83044 4.56451 2.36301 5.19345 
4.40302 5.04053 4.56451 4.72601 4.25 4.56451 4.25 2.36301 2.36301 2.51605 4.87903 2.83044 
2.36298 5.04053 4.56451 2.67755 4.56451 1.88699 1.88699 4.25 2.36301 2.20151 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36.0015 393.569 mo
(G)sh
57.6 393.569 mo
(Child Tax Credit )
[6.29848 5.04052 2.19296 2.19296 5.19344 2.363 5.19344 4.87904 4.56452 2.363 6.29848 3.30656 
4.87904 5.19344 2.19296 2.99204 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
125.107 393.569 mo
(\(including additional child tax credit\). See Pub. 972, Child Tax Credit, for more information.)
[2.20152 1.887 4.726 4.56453 1.88699 4.726 5.04051 1.88701 4.726 4.87904 2.36299 4.56453 
5.04051 5.04053 1.88699 2.67752 1.88701 4.87904 4.726 4.56453 1.88699 2.36301 4.56451 4.726 
1.88701 1.88699 5.04053 2.36299 2.67752 4.56453 4.40305 2.36299 4.56453 2.83043 4.56453 5.0405 
1.88702 2.67752 2.20151 2.36301 2.36301 5.50793 4.56454 4.56451 2.36301 5.50793 4.72601 5.04053 
2.36298 2.36301 4.72601 4.72598 4.72601 2.36298 2.36301 6.13699 4.72601 1.88699 1.88699 5.04053 
2.36301 4.87903 4.56454 4.40305 2.36298 6.13702 2.83041 4.56454 5.0405 1.88702 2.67749 2.36301 
2.36301 2.51605 4.87903 2.83044 2.36301 7.25046 4.87906 2.83041 4.56454 2.36301 1.88699 4.72598 
2.51605 4.87903 2.83044 7.25049 4.56451 2.67752 1.88699 4.87906 4.72598 0 ]xsh
57.6 405.571 mo
(\267 )
[4.25 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.395 0 0 -8.5 0 0 ]msf
64.213 405.568 mo
(If your total income will be less than $61,000 \($90,000 if married\), enter \2522\272 for each eligible child; then )
[1.91532 2.18896 2.05581 3.69749 4.24477 4.11162 2.46248 2.05581 2.32944 4.24477 2.32944 3.97113 
1.64169 2.0558 1.64169 4.11162 3.97114 4.24477 6.30791 3.97113 2.05582 5.60538 1.64169 1.64169 
1.64168 2.0558 4.38525 3.97115 2.0558 1.64169 3.97113 3.69751 3.69749 2.0558 2.32945 4.11162 
3.97113 4.11163 2.0558 4.11162 4.11162 4.11162 2.0558 4.11162 4.11162 4.11162 2.05582 1.91533 
4.11162 4.11162 4.11162 2.0558 4.11162 4.11162 4.11162 2.05582 1.64168 2.18896 2.05582 6.30791 
3.97113 2.46246 2.46249 1.64169 3.97113 4.38525 1.91534 2.05579 2.05582 3.97113 4.1116 2.32947 
3.97113 2.46246 2.05582 3.15024 4.11163 3.15021 2.05582 2.18896 4.24478 2.46246 2.05579 3.97113 
3.97113 3.97119 4.11157 2.05585 3.97113 1.64166 1.64172 4.24475 1.64166 4.38525 1.64172 3.97113 
2.05579 3.97113 4.11163 1.64172 1.64166 4.38525 2.05579 2.05585 2.32941 4.11163 3.97113 4.11163 
0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.395 0 0 -8.5 0 0 ]msf
403.089 405.568 mo
(less )
[1.90787 4.24478 3.97113 3.97113 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.395 0 0 -8.5 0 0 ]msf
419.24 405.568 mo
(\2521\272 if you have three or more eligible children.)
[3.15024 4.1116 3.15024 2.05582 1.64169 2.18896 2.05579 3.69751 4.24478 4.1116 2.05582 4.1116 
3.97113 3.69751 3.97113 2.05582 2.32944 4.11163 2.46246 3.97113 3.97113 2.05582 4.24478 2.46246 
2.05582 6.30792 4.24475 2.46249 3.97113 2.05579 3.97113 1.64172 1.64166 4.24481 1.64166 4.38525 
1.64166 3.97119 2.05579 3.97113 4.11163 1.64166 1.64172 4.38525 2.46246 3.97113 4.11163 0 
]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 416.869 mo
(\267 If your total income will be between $61,000 and $84,000 \($90,000 and $119,000 if married\), enter \2521\272 for each eligible   )
[4.25 2.363 2.20152 2.51604 2.363 4.25 4.87904 4.726 2.83044 2.363 2.67752 4.87904 
2.67752 4.56452 1.887 2.363 1.887 4.726 4.56452 4.87904 7.25048 4.56451 2.36301 6.44296 
1.88699 1.88699 1.88701 2.36299 5.04053 4.56451 2.36301 5.04053 4.56451 2.67752 6.44296 4.56451 
4.56454 4.72598 2.36301 4.72598 4.72601 4.72598 2.36301 4.72601 4.72598 4.72601 2.36298 4.56454 
4.72598 5.04053 2.36301 4.72598 4.72601 4.72598 2.36301 4.72598 4.72601 4.72598 2.36301 2.20154 
4.72598 4.72601 4.72598 2.36301 4.72598 4.72601 4.72601 2.36298 4.56451 4.72601 5.04053 2.36298 
4.72601 4.72601 4.72598 4.72598 2.36301 4.72601 4.72598 4.72601 2.36298 1.88702 2.51605 2.36298 
7.25049 4.56451 2.83044 2.83044 1.88699 4.56451 5.04053 2.20151 2.36301 2.36301 4.56451 4.72601 
2.67749 4.56454 2.83041 2.36301 3.62097 4.72598 3.62097 2.36298 2.51605 4.87906 2.83041 2.36301 
4.56454 4.56451 4.56451 4.72601 2.36298 4.56451 1.88702 1.88699 4.87906 1.88699 5.0405 1.88702 
4.56448 2.36304 2.36298 0 ]xsh
57.6 427.868 mo
(   child plus \2521\272 )
[2.363 2.363 2.363 4.56452 4.726 1.887 1.887 5.04052 2.363 5.04052 1.887 4.726 
4.25 2.363 3.62096 4.726 3.62096 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
117.754 427.868 mo
(additional )
[4.87904 5.19344 5.19344 2.19296 2.99203 2.19296 5.19344 5.04051 4.87906 2.19296 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
160.067 427.868 mo
(if you have six or more eligible children ..................)
[1.88701 2.51604 2.36299 4.25 4.87906 4.72598 2.36301 4.726 4.56453 4.25 4.56451 2.36301 
4.25 1.88699 4.40305 2.36301 4.87903 2.83044 2.36301 7.25046 4.87906 2.83043 4.56453 2.36299 
4.56453 1.88699 1.88699 4.87906 1.88699 5.04053 1.88699 4.56451 2.36301 4.56451 4.72601 1.88699 
1.88699 5.04053 2.83044 4.56451 4.72601 4.42847 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.826 429.568 mo
(G)sh
set_def_flat
546.95 432 mo
576.25 432 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
36 441.568 mo
(H)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.735 0 0 -8.5 0 0 ]msf
57.6 441.568 mo
(Add lines A through G and enter total here. \()
[5.01224 4.58687 4.58688 2.15033 1.71717 1.71717 4.30065 4.15372 3.86751 2.15032 5.01225 2.15033 
2.43654 4.30066 2.5757 4.43993 4.30066 4.43993 4.30066 2.15033 5.87087 2.15033 4.15372 4.30066 
4.58688 2.15033 4.15372 4.30066 2.43654 4.1537 2.57571 2.15033 2.43654 4.43993 2.43655 4.15372 
1.71716 2.15033 4.30066 4.15372 2.57568 4.15372 2.15033 2.15033 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.735 0 0 -8.5 0 0 ]msf
209.747 441.568 mo
(Note.)
[5.73161 4.72603 2.72276 4.43993 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.735 0 0 -8.5 0 0 ]msf
229.518 441.568 mo
( This may be different from the number of exemptions you claim on your tax return.\) )
[2.15033 4.43993 4.30066 1.71718 3.86749 2.15033 6.59793 4.15373 3.86749 2.15033 4.58685 4.15372 
2.15033 4.58688 1.71716 2.28961 2.28961 4.15369 2.57571 4.15372 4.30066 2.43652 2.15033 2.28961 
2.57568 4.43994 6.59793 2.15033 2.43655 4.30066 4.15372 2.1503 4.30066 4.30066 6.59796 4.58685 
4.15372 2.57571 2.15033 4.43991 2.28961 2.15033 4.15372 4.00677 4.15369 6.59796 4.58685 2.43655 
1.71716 4.43991 4.30066 3.86752 2.15033 3.86749 4.43994 4.30066 2.1503 4.15375 1.71716 4.15372 
1.71716 6.59793 2.15033 4.43994 4.30066 2.15033 3.86749 4.43994 4.30066 2.57568 2.15033 2.43652 
4.15375 4.00677 2.15033 2.57568 4.15369 2.43658 4.30066 2.57568 4.30066 2.15033 2.00336 0 
]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.5 0 0 -7.5 0 0 ]msf
520.372 441.568 mo
( )sh
%ADOBeginSubsetFont: HJCBAA+UniversalStd-NewswithCommPi-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HJCBAA+UniversalStd-NewswithCommPi)
%%Title: (HJCBAA+UniversalStd-NewswithCommPi Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HJCBAA+UniversalStd-NewswithCommPi def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-7 -227 989 764} def
/FontInfo 5 dict dup begin
/Notice (Copyright 1988, 1995, 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Universal is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 98 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 10 dict dup begin
/BlueValues [0 0 757 757] def
/OtherBlues [-227 -227] def
/StdHW [48] def
/StdVW [48] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
97 <001C60D8A8C9B5EE310110536FEB6E1F35D1A46A73401D5B5FE71700214B
31B7D8> |
0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1F
C7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6
C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B1719
2> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HJCBAA+UniversalStd-NewswithCommPi-Identity-H /Identity-H 0 [/HJCBAA+UniversalStd-NewswithCommPi] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PZSRKS+UniversalStd-NewswithCommPi /HJCBAA+UniversalStd-NewswithCommPi-Identity-H findfont ct_VMDictPut
PZSRKS+UniversalStd-NewswithCommPi [6 0 0 -6 0 0 ]msf
522.457 440.068 mo
(\000a)sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
532.8 441.568 mo
(H)sh
set_def_flat
546.95 443.999 mo
576.25 443.999 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 452.068 mo
(For accuracy, )
[4.87904 4.87904 2.83044 2.363 4.56452 4.56452 4.56452 4.726 2.83044 4.56452 4.56452 4.25 
2.363 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B704CCBB34F94149B012C05A72966A62F7589DA190506
2B12B0BC3> |-
/slash <1C60D8A8C9B728C5D24E1BE6883F8E70459C44AB40B2AEFF9B813954
EDB7A660C8FB29> |-
/J <1C60D8A8C9B7EF32A6B3F3793681A02C77519FF9C3107479374C44CEA12C
70D3759BCF7530D18C7F3788B6159194E2DE182FF31B554C1B6C0ECDBA616850
79BC0448C479E53E> |-
/M <1C60D8A8C9B58D099743A044C25BCB009F954079D06977A10F9CB9BD761E
C0E5547BD885267328EB1959AD52249FCE4254E8D98CDB81D990D1AB002EA3F6
826A5C491864B37821FFD1ACA4FEA232> |-
/z <1C60D8A8C9B7B4A1439371372E0C850DCD0C7942DE9795CF5AB18DF3ECC1
D052D560EF233A4ACF7A093D1401A0CC66F6CFBE4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 45 /hyphen put
dup 47 /slash put
dup 74 /J put
dup 77 /M put
dup 122 /z put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 17{/.notdef}rp /A 
/B /C /D /E /F /G /H /.notdef 
/J 2{/.notdef}rp /M /N /.notdef /P 3{/.notdef}rp /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/.notdef /w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 462.064 mo
(complete all)
[4.87904 5.19344 7.70105 5.19344 2.19296 4.87904 2.99204 4.87904 2.363 4.87904 2.19296 0 
]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
107.138 462.064 mo
( )sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 472.06 mo
(worksheets)
[6.91896 5.19344 3.30656 4.87904 4.56452 5.04052 4.87904 4.87904 2.99204 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
104.818 472.06 mo
( )sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
57.6 482.056 mo
(that apply.)
[2.99204 5.04052 4.87904 2.99204 2.363 4.87904 5.19344 5.19344 2.19296 4.41148 0 ]xsh
PZSRKR+TimesLTStd-Roman*1 [14.4 0 0 -45.6 0 0 ]msf
115.2 477.343 mo
({)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
129.6 451.569 mo
(\267 If you plan to )
[4.25 2.36301 2.20151 2.51605 2.36301 4.25 4.87903 4.72601 2.36299 5.04051 1.88701 4.56453 
4.72598 2.36301 2.67752 4.87904 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
188.012 451.569 mo
(itemize )
[2.19296 2.99203 4.87906 7.70105 2.19296 4.41147 4.87904 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
219.624 451.569 mo
(or)
[4.87904 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
227.333 451.569 mo
( claim adjustments to income )
[2.36301 4.87903 2.19296 4.87906 2.19296 7.70105 2.36299 4.87904 5.19345 2.36298 5.04053 4.56451 
2.99207 7.70105 4.87903 5.04053 2.99203 4.56451 2.36301 2.99203 5.19345 2.36298 2.19299 5.0405 
4.87906 5.19342 7.70105 4.87906 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
349.275 451.569 mo
(and want to reduce your withholding, see the )
[4.56451 4.72601 5.04053 2.36298 6.44296 4.56454 4.72598 2.67752 2.36301 2.67752 4.87903 2.36301 
2.83044 4.56451 5.04053 4.72598 4.56451 4.56454 2.36301 4.25 4.87903 4.72601 2.83041 2.36301 
6.44296 1.88699 2.67752 4.72601 4.72598 4.87906 1.88699 5.04053 1.88699 4.72598 4.87906 2.36301 
2.36298 4.25 4.56454 4.56451 2.36301 2.67752 4.72598 4.56451 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
522.921 451.569 mo
(Deductions)
[6.29846 4.87903 5.19348 5.04053 4.87903 2.99207 2.19293 5.19342 5.04053 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
569.195 451.569 mo
( )sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
571.558 451.569 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
573.921 451.569 mo
( )sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
129.6 460.571 mo
(   and Adjustments Worksheet )
[2.36301 2.36299 2.36299 4.87906 5.04051 5.19344 2.36301 5.82248 5.19342 2.36301 5.04053 4.56451 
2.99203 7.70105 4.87906 5.04051 2.99205 4.56451 2.36301 8.02399 5.19345 3.30655 4.87906 4.56451 
5.04053 4.87903 4.87906 2.99203 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
253.802 460.571 mo
(on page 2. )
[4.87906 4.72598 2.36301 5.04053 4.56451 4.87903 4.56451 2.36301 4.72601 2.36301 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
296.634 460.571 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
129.6 469.572 mo
(\267 )
[4.25 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.225 0 0 -8.5 0 0 ]msf
136.213 469.569 mo
(If you have )
[1.87129 2.13864 2.00854 3.6125 4.14719 4.01711 2.00854 4.01709 3.87985 3.6125 3.87984 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.225 0 0 -8.5 0 0 ]msf
173.415 469.569 mo
(more than one job )
[6.5459 4.41441 2.81058 4.14719 2.00856 2.54323 4.28444 4.14719 4.28445 2.00854 4.41441 4.28444 
4.14719 2.00856 2.00854 4.41441 4.41443 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.225 0 0 -8.5 0 0 ]msf
238.31 469.569 mo
(or are )
[4.14719 2.40587 2.00856 3.87984 2.40587 3.87985 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.225 0 0 -8.5 0 0 ]msf
259.045 469.569 mo
(married and you and your spouse both work )
[6.5459 4.14719 2.81058 2.81058 1.86401 4.14719 4.41443 2.00854 4.14719 4.28445 4.4144 2.00854 
3.74976 4.41443 4.28445 2.00854 4.14719 4.28442 4.41443 2.00854 3.74976 4.41443 4.28442 2.81061 
2.00854 3.87982 4.41443 4.41443 4.28442 3.87985 4.14719 2.00854 4.41443 4.41443 2.54321 4.28445 
2.00858 5.8811 4.41443 2.81055 4.14722 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.225 0 0 -8.5 0 0 ]msf
413.184 469.569 mo
(and the combined earnings from all jobs exceed   )
[3.87985 4.01709 4.28445 2.00854 2.27588 4.01709 3.87985 2.00854 3.87985 4.14719 6.1629 4.28445 
1.60394 4.01709 3.87985 4.28442 2.00858 3.87982 3.87985 2.40585 4.01712 1.60394 4.01709 4.14719 
3.61252 2.00854 2.13864 2.40588 4.14716 6.1629 2.00854 3.87988 1.60394 1.60394 2.00854 1.60394 
4.14722 4.28442 3.61249 2.00854 3.87988 3.74255 3.87988 3.87982 3.87982 4.28442 2.00854 2.00854 
0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
574.576 469.569 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.225 0 0 -8.5 0 0 ]msf
129.6 478.569 mo
(   $40,000 \($10,000 if married\), see the )
[2.00854 2.00856 2.00854 4.01709 4.01711 4.01709 2.00856 4.01709 4.01711 4.01709 2.00856 1.87129 
4.01709 4.01711 4.01711 2.00854 4.01709 4.01711 4.01709 2.00856 1.60394 2.13864 2.00854 6.1629 
3.87985 2.40585 2.40588 1.60394 3.87985 4.28444 1.87129 2.00854 2.00854 3.61252 3.87984 3.87984 
2.00854 2.27591 4.01709 3.87985 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.225 0 0 -8.5 0 0 ]msf
255.561 478.569 mo
(Two-Earners/Multiple Jobs Worksheet )
[4.41443 5.8811 4.41443 2.94055 4.68176 4.14719 2.81058 4.28445 4.14719 2.81058 3.87985 2.68048 
6.55307 4.28442 1.86401 2.54324 1.86401 4.41443 1.86401 4.14719 2.00854 4.01709 4.41443 4.41443 
3.87985 2.00854 6.8204 4.41443 2.81055 4.14722 3.87982 4.28445 4.14719 4.14719 2.54324 0 
]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.225 0 0 -8.5 0 0 ]msf
390.134 478.569 mo
(on page 2 to avoid having too little tax withheld.  )
[4.14719 4.01709 2.00854 4.28445 3.87985 4.14719 3.87982 2.00858 4.01709 2.00854 2.27591 4.14716 
2.00858 3.87982 3.61252 4.14719 1.60394 4.28445 2.00854 4.01709 3.87985 3.61249 1.60397 4.01709 
4.14719 2.00854 2.27588 4.14719 4.14719 2.00858 1.60394 1.60394 2.27588 2.27591 1.60394 3.87985 
2.00854 2.27588 3.87985 3.74258 2.00854 5.4765 1.604 2.27588 4.01709 4.01709 3.87988 1.60388 
4.28448 2.00854 2.00854 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
129.6 487.569 mo
(\267 If)
[4.25 2.36301 2.20151 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
140.931 487.569 mo
( neither )
[2.36301 5.04051 4.87904 2.19296 2.99203 5.04053 4.87904 3.30656 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
173.987 487.569 mo
(of the above situations applies, )
[4.87904 2.51604 2.36301 2.67752 4.726 4.56453 2.36299 4.56453 5.04051 4.87904 4.25 4.56451 
2.36301 4.25 1.88699 2.67752 4.72601 4.56451 2.67752 1.88699 4.87906 4.72598 4.25 2.36301 
4.56451 5.04053 5.04053 1.88699 1.88699 4.56451 4.25 2.36301 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
294.586 487.569 mo
(stop here )
[4.56451 2.99207 5.19342 5.19342 2.36301 5.04053 4.87906 3.30655 4.87906 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
335.36 487.569 mo
(and enter the number from line H on line 5 of Form W-4 below.)
[4.56451 4.72601 5.04053 2.36298 4.56451 4.72601 2.67752 4.56451 2.83044 2.36301 2.67752 4.72598 
4.56451 2.36301 4.72601 4.72598 7.25049 5.04053 4.56451 2.83044 2.36298 2.51605 2.83044 4.87903 
7.25049 2.36298 1.88702 1.88699 4.72598 4.56454 2.36301 6.13699 2.36301 4.87903 4.72601 2.36298 
1.88702 1.88699 4.72598 4.56451 2.36301 4.72601 2.36301 4.87903 2.51605 2.36298 4.87903 4.87909 
2.83038 7.25049 2.36304 7.87097 3.30652 4.72601 2.36298 5.04053 4.56458 1.88696 4.87903 6.44299 
0 ]xsh
set_def_flat
1 lw
2 lc
36 492.001 mo
576 492.001 li
@
1 setflat
set_def_flat
.5 lw
0 lc
[2 1 ] 0 dsh
35.75 504 mo
137.05 504 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF327C10274560C9BEBE172155A7D278E733811D9A19B
96BF6E498600B139262EF956B7082FF89E4FE9B1C1F2DD7DB2DF011E97EFD1F8
19FB1006365841372EBFF2585C8> |-
/K <1C60D8A8C9B6079F3517E074AC7F02A3107BDA8B7DF68859128E33E7C86D
724C77AFD41705A1A28AF0D1A3EDEA3C880C5F7F656F6CE438FE3CB7A994E49A
FD40> |-
/v <1C60D8A8C9B7B3D0B3A458FB9BFFEF4D40C2203617EEB1DE44C6D0B97969
952A36BB6D391D046C6D5A8C6FE88EAD383E1EA85E30> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 52 /four put
dup 75 /K put
dup 118 /v put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 4{/.notdef}rp /four 
12{/.notdef}rp /A /B /C /D /E /F /G 
/H /.notdef /J /K /.notdef /M /N /.notdef 
/P 3{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /x /y /z 
133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
150.658 505.781 mo
(Cut here and give Form W-4 to your employer. Keep the top part for your records.)
[5.92798 4.74402 2.81604 2.224 4.74402 4.59204 3.11206 4.59204 2.224 4.59204 4.74402 4.88794 
2.224 4.88794 2.06396 4.16003 4.59204 2.224 4.74402 4.88794 3.11206 7.24805 2.224 7.552 
3.25598 4.44801 2.224 2.81604 4.88794 2.224 4.15198 4.88794 4.74402 3.11206 2.224 4.59204 
7.24805 4.88794 2.06396 4.88794 4.15198 4.59204 3.11206 2.224 2.224 5.776 4.59204 4.59204 
4.88794 2.224 2.81604 4.74402 4.59204 2.224 2.81604 4.88794 4.88794 2.224 4.88794 4.59204 
3.11206 2.81604 2.224 2.66394 4.88794 3.11206 2.224 4.15198 4.88794 4.74402 3.11206 2.224 
3.11206 4.59204 4.59204 4.88794 3.11206 4.88794 4.29602 0 ]xsh
set_def_flat
474.95 504 mo
576.25 504 li
@
1 setflat
set_def_flat
1 lw
[] 0 dsh
115.2 515.749 mo
115.2 552.499 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
36 533.135 mo
(Form   )
[4.01804 4.01804 2.33095 5.97098 1.946 1.946 0 ]xsh
%ADOBeginSubsetFont: UGXAAA+HelveticaNeueLTStd-BlkCn Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /UGXAAA+HelveticaNeueLTStd-BlkCn def
/FontInfo 7 dict dup begin
/Notice (Copyright 1990, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Black) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 52 /four put
dup 87 /W put
def
/FontBBox {-165 -230 1099 972} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 714 728 541 555 694 708] def
/OtherBlues [273 280 367 374 -184 -176] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [134] def
/StdVW [180] def
/StemSnapH [110 116 121 126 134 140 146 152] def
/StemSnapV [140 168 174 180 186 192] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/hyphen <1C60D8A8C9B72B39BE35DCE45EEE851DA11F00E14A4B4523654D693
E778FD87B> |-
/four <1C60D8A8C9B7B3D0B3A458F445018CF7485EF69D02876F8227679D68F
EA3F207BCCEC5C52A97C5DD90583818A04C37117BEE8A6CB6D2FBE7985D35907
6E8B7EE0E64A00DCBA6FA0B14340F8196CB1BD36510> |-
/W <1C60D8A8C9B6FF86A277350456246D302D14462C7A1DF490D46D9F53F7CD
17CB2116AE08550ED56A0B98AF1D0594A24169D72411D888BD414E944C5B9FF4
76C702F16039257C699B9CD567D2D7> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKT+HelveticaNeueLTStd-BlkCn /UGXAAA+HelveticaNeueLTStd-BlkCn findfont ct_VMDictPut
/PZSRKT+HelveticaNeueLTStd-BlkCn*1 
[45{/.notdef}rp /hyphen 6{/.notdef}rp /four 34{/.notdef}rp /W 168{/.notdef}rp]
PZSRKT+HelveticaNeueLTStd-BlkCn nf
PZSRKT+HelveticaNeueLTStd-BlkCn*1 [24 0 0 -24 0 0 ]msf
58.176 533.135 mo
(W-4)
[18.672 8.83191 0 ]xsh
set_def_flat
35.75 552.002 mo
115.45 552.002 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B620B7A43CC5158F274BD61416B8DF2CB03F76C4C846578FB7
14CAFE5419C03938205ED758851FFB113DD92CF140B5269E8D443121A865296E
3A62191A236976A3D30A2F8F5B95C5318C38D1E022A2C4DFE5DB9D85EFDAFE31
5EC8AA5EDC9E625DD24C6C4BD886509475AD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /.notdef /M 
/N /O /P /.notdef /R /S /T 2{/.notdef}rp 
/W /.notdef /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 47{/.notdef}rp /quotedblleft 
12{/.notdef}rp /bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [6 0 0 -6 0 0 ]msf
36 542.286 mo
(Department of the Treasury  )
[4.22397 3.22202 3.55801 3.22202 1.99796 1.89001 5.11798 3.22202 3.336 1.89001 1.668 3.44403 
1.77603 1.668 1.89001 3.336 3.22202 1.668 3.44403 1.99796 3.22202 3.22202 3 3.336 
1.99796 3 1.668 0 ]xsh
36 549.288 mo
(Internal Revenue Service )
[1.55402 3.336 1.89001 3.22202 1.99796 3.336 3.22202 1.332 1.668 4.10999 3.22202 3 
3.22202 3.336 3.336 3.22202 1.668 3.88797 3.22202 1.99796 3 1.332 3.22202 3.22202 
0 ]xsh
set_def_flat
114.95 551.999 mo
497.3 551.999 li
@
1 setflat
%ADOBeginSubsetFont: PBAAAA+ITCFranklinGothicStd-Demi AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKO+ITCFranklinGothicStd-Demi dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6754867396DFD8E00C9C92BF25E0DC83ADD25779F7A58A13A
29E52516011DEA48A67510DD43DFF00C080531E688FCA51B8760E5A9E895384F
407478DF172A8A26> |-
/C <1C60D8A8C9B649C72484D34300637F5121A06DC3398FA87782D60E20E35C
2E64B8A73022C1EB62DE9D6482F18ADEFF1C93270F8BBA494EE05DE700FDF3AF
4067A94E5ADC15B77F7D35C8F13400B1F50D17975AD81FE76BBC441BC7A56D62
E6> |-
/E <1C60D8A8C9B7F7BFE9CB0E6D09D8A198C330D7E34E77AF7D162DDA7B42C0
09696DD168E3B4FEA0CAE6FC6B8BE28E476CAA15D9F9821BC41C577954644BE0
03F1B9EB> |-
/a <1C60D8A8C9B79FB095E01E3CF52F3BBA236113C4342058FC3EF0FA6E0670
4B9D839DDF2C1D5F4E9303B05B387FC69B5CF1091425CCCF1B33D6C5277AED39
70E971023FE3AC463CAFDB7FCAE5A30E171276EF303C6A7B83AE91063FD30DFB
41EE0E573F6606F2AF9541A5B5486FC63ED250BA57511F61ED4469651AE52A09
92300721C62707ED5CDDCDCB369A31BF0677070D1BB14DFBB07F3EE56988D914
5CAD2FB72F71B12B22724771F189C5E54A104939C4E81718E90CD8415985E47C
B2B51C50FC82789C9AA15FDB368C824F41A773571E1ACA26C2485629A28BDD> |-
/c <1C60D8A8C9B79FB0B46235B0A5B398B3F055F67DDDCE8EBF7157C73A4481
3385EE3F38D55CFF6E0F47EEBEA2F6C4EA2E4510C04B45D26B8FAD7E8EFA9484
FB25FE1EA4C0A969DF377697B07E3204124577CBB9C38DC97AA319FB58B877> |-
/d <1C60D8A8C9B79FB0BE4E1E8C9CE38DD58DD6288CED47D652025C9B20B707
88612D77A8DE548D08068BFF1B7D23EA5AE5A2BB1E5218E4BC5C10EF9F2A65CF
C90F10515DF84FA5412BC309EBDC93D5134C0C7085A398A2AA50961771B476E6
78A4D7758CD761F2DC9842ECDB227C27EC114CA2EDE852B97683848D3B3ECE77
788526220C607612A2AF911FDC7E5541B678689BB4807A93EA12836FCA2B8B8B
5133F755FCEAEDCC649A663B852B93AFAEAB1F> |-
/e <1C60D8A8C9B79FB0B46168C1E1366591DD0060911EF35671C9DF673E426A
BA91FFE9E0FE475EBD62C64979A5998F5527A1C468B73DB43645A7B07F3ECD15
93002107FCB98642CC186C29D0841AF8FA283086BA6D4A402CE099EC90A7BE85
E9A99F3D3E1ABB3959791238> |-
/f <1C60D8A8C9B83E2DEEA260D3926AC03B865ED2D9634AEA8512352E0E444C
B899ED046670575B742BA08DD70B8DC764240486BAB0B87C32EF6F64B8951446
DC502BF403026C7A826626B722092AE43CC2648A09EBD33EFC15BF5702D86000
431A6AC8EFA6609518062AF9887D1161C926EEBAD2B09CAAF72C18BF9FFBE54A
FF05132AC49E0942229CED040F80C8B46F86EB> |-
/g <1C60D8A8C9B7EB086E9381FC9C586AF31483970F6A5BAB84E0DBB0435907
A75CC1617B1456712E5C12638DBBE83615BBCA57ABDA0B4EE1C3FE4FA8595B0C
EEA8ECFDBDE1D74E757CC62CA912276D872B1D37C264ABA18F30A3F1CDC25B56
9AD822F38AD4FD21910020F5F5D4BBA8F9B109FDBE2C5252754191B5CCDCE357
3E298A799919E587928DA514260C92F2ED3CA2DEE5F58C844695208CC8234423
24926BB9BB993D263310653B7889473250ACD351601DFBE957F5890502CE47F5
8FE06DB4B31A53EE86557FE0DF852BB6C8A87230BFA1022D7F19ABDEBA26ACF7
6572438F1B4D414F4467DB014546C23C685BF4938DB93B5B16D8179C92F0E0D0
2C3AF833792FA1822E011E47FB44C57FF3B6262F7EC4FE3CD3611044C69C4A48
315B0CBA51E16AF9FFC59197D9803BA021B323B81DA1FDFBCA8B47CEE770C067
4212FFFFEC7D5F82C15ABD8FCA811478F56981AE5C345F479B85850C696634BF
4AE0E0B65A993467B18C4C8A680ECBFF2B6AF887E430243B546516C71116EA24
538859A44108CAB7CB4EC1E582DD4DD5D7D4FDE055859E2BDB11922B06E2C389
DAE745FAFC0A645BD2A3B0369B00E366CE9D54B2DC67B8546C4A910579E5D2> |-
/h <1C60D8A8C9B79FB095E01E33151A0577B7B0F02F2D6EFDF40ACBA68BBC0B
EE3E278BF61C9752B11A36993AE1C5F3A6E23F0ED341CB059B718B226A63DD52
E37B9CEE41C58A95BDBA6671B4467B9D8372D54CF8DA8FE562DC65D8BDC86119
71FD98A80E> |-
/i <1C60D8A8C9B8666C9C44EA243B0286748FDB10A07D8CD284E28274660CB5
C43CFA221E9FEB447DB2FA3554C2A12454B34F2215C6D3> |-
/l <1C60D8A8C9B8666C9C44EA253B6734152A519B0D90343E96A8549C98176A
9218> |-
/n <1C60D8A8C9B79FB095E01E33151A0577F3A42DEDEFB69B59470CDCAB0D96
0EADCE0357E0E4694A11DC824C70615BC5690209170CB052DEEAEB2CF9F12C5C
C84A2FB1FB1D2B5C23E78A6F2A37365F301AF98745CA48DC992FC5C63D6BC762
DCB8D3DEAD310F606DDEFA6D5B8939> |-
/p <1C60D8A8C9B79FB0CEA6CD71C7D5FDDE1737AE6F42D1C03F357B3E7DD1AE
798AD4E1815793A87A16EB58930C62C9BC3E8DA104D71F8313311F0D13969494
8274C78A868D267C8AE3D5EB29E011C53077A887FE8448A1C99D4B5A79EEE49E
DB079582CE4CCAF7D9767F1280FC34EB8741534448800FABBB8C6382D12AD9A7
8964B247C13C5B178D3506A6894B4BBB380709706026CBE21DD5D40B767183D5
3ECAF49846E61D8CA7D02C5E591217C12983A97AFCE4CC34E51CC8E64E191892
B627278FD1873D> |-
/s <1C60D8A8C9B7A73DCF0CDD2557DC11D843729BD36AF7B586FC2C80B2DD8C
60D641A56D01A26EE40EF132EA0B27E51ECD0F1C42115219DCAB05311ED1E998
4785EE4E83766945510064AFEE4F63C7992D25F41BBADEC3D81B7378B57500B2
4D07FA95127AECE1981000FBC1E75B7399981F9F08AB748F3164A55827FE98B6
18> |-
/t <1C60D8A8C9B73F598636B734673D6F667CDC15F485E7150F972E35EEDA7A
DE6DE5DF61CA1145AFD4CE7E4A7AEED6ED55E27D9DC9F949341FB489BCF5D373
CFF6D04D8CA874CB346D2CD648EF9D2D8081E6B51F1EE35BEFAE8B5E37F1CD98
A2BA0A1E1F86566C4CAF09A8F934> |-
/w <1C60D8A8C9B61918354FF47E61E589D91E885608007C079DE1D4AECD07AB
23F156117618D8EF9A26BF5AA8C0B9284D84AFA0AA8CE555F8BBAADFA2C8D688
F66BFC2A45F068122DB29ACA697D> |-
/y <1C60D8A8C9B75BE51572FFA54AC15852323D711A62BEE33C486AEEDEBD7F
E1DE8E26546E21A6D733022B098CBF733DF8CF07BBF355C3185CB14871CCAC6E
9AB26371BBFA193B873C448F79C73011CAB0F3BDB417CFBBE09944429E365C61
05CEC0590F3877F3B8F9AD0016DC6C> |-
/quotesingle <1C60D8A8C9B83E2DB739FD658C7183A3703A177B10D9CC48DD
AD85F05F6C6866092B0B3333847C08DF5408D518F0C12B82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKO+ITCFranklinGothicStd-Demi /Encoding get
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
dup 169 /quotesingle put
pop
%ADOEndSubsetFont
/PZSRKO+ITCFranklinGothicStd-Demi*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /.notdef /four 12{/.notdef}rp /A /.notdef 
/C /.notdef /E /F 16{/.notdef}rp /W 9{/.notdef}rp /a 
/.notdef /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t 2{/.notdef}rp /w /.notdef /y 47{/.notdef}rp /quotesingle 
86{/.notdef}rp]
PZSRKO+ITCFranklinGothicStd-Demi nf
PZSRKO+ITCFranklinGothicStd-Demi*1 [14 0 0 -14 0 0 ]msf
161.382 525.603 mo
(Employee\251s Withholding Allowance Certificate)
[8.12003 11.4801 7.55991 3.63992 7.55991 6.71994 7.55991 7.55991 4.20004 7 4.20004 12.5999 
3.63992 5.32008 7.55988 7.55994 7.55988 3.63995 7.55988 3.63995 7.55988 7.83997 4.20007 8.95996 
3.63995 3.63989 7.55994 10.36 7.55994 7.55988 7.55994 7.55988 4.20007 9.24005 7.55988 4.75995 
5.32007 3.63995 4.20001 3.63995 7.55988 7.55994 5.32007 0 ]xsh
PZSRKS+UniversalStd-NewswithCommPi [6 0 0 -6 0 0 ]msf
136.97 538.1 mo
(\000a)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [5 0 0 -5 0 0 ]msf
142.97 538.1 mo
( )sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [5.5 0 0 -5.5 0 0 ]msf
144.36 538.1 mo
( )sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B845C8233CEACBA01AA3521650A1EAFE358A2C4AF7C59726DE
306E> |-
/R <1C60D8A8C9B6079F3517E07A620C16A5BE4108A83ED4226ED84952F24EE2
315F0B5BDF90527DB90E8B2A1133E506EEE1BAAB59780F28791C4A19D3747A28
BF7434F71400755B0A5C3F9596DF50769F966C7F26A248DA40BCA96678FB97DE
EA934D3FF49DDE20744C2F12D7488E931CBFA7A8F0> |-
/S <1C60D8A8C9B67CE74CEE4AFD25D4788E9CBAD00225F12162A3AB6572194D
45F6518F15C74ADA18D34F3C82D872738297D4D294A273D5D8C38CF4B00F49AC
B2D22BB1279D9B5DA873A47661F4824E1BDE3F68BE4F9DABEE20120AE1F8F215
18B21ABE1F88C68D7C82D11687C7FFD1CF55DD96A11B07828AECC574C7AC1C26
37EB51B0911810E8D37515D320E762438CA96FCB7C251C4327AE1992E43FFD2B
3AD28C33> |-
/Y <1C60D8A8C9B64EDFA3F30AEA61CA895B59AFD0FAEB966676E8B448BECF93
48DF91498D3BA257A2CE7779BECF3634C7A449C1D53B598509A540> |-
/q <1C60D8A8C9B7D8BE1A68BECA012E6F309A00C1AE535E718C41B0B5190BC5
22B45C5373D25FA53E41B6AA8DD07CECCEB18CC7FD8D2AE725D41A6DD2B75C59
F430B1A094B2EAC2F6B267960F2869FDD070355183CA9592B58973C372E7E245
A8FFB5D66113F65736CFBCC26A886E7DF47649B41730D4FCAED9D9B32FDAFDC3
4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 73 /I put
dup 82 /R put
dup 83 /S put
dup 89 /Y put
dup 113 /q put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash 4{/.notdef}rp /four 
12{/.notdef}rp /A /B /C /D /E /F /G 
/H /I /J /K /.notdef /M /N /.notdef 
/P /.notdef /R /S /T 2{/.notdef}rp /W /.notdef 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
145.889 539.6 mo
(Whether you are entitled to claim a certain number of allowances or exemption from withholding is)
[6.608 4.15102 4.01804 2.46404 4.15102 4.01804 2.72305 1.946 3.63298 4.27695 4.15102 1.946 
4.01804 2.72305 4.01804 1.946 4.01804 4.15102 2.46404 1.80597 2.46404 1.80597 4.01804 4.27695 
1.946 2.46404 4.27695 1.946 4.01804 1.80597 4.01804 1.80597 6.34204 1.94601 4.01801 1.94601 
4.01804 4.01804 2.72305 2.46405 4.01801 1.80597 4.15103 1.94601 4.151 4.151 6.34204 4.27698 
4.01801 2.72308 1.94598 4.27695 2.33096 1.94598 4.01804 1.80597 1.80597 4.27695 5.69797 4.01804 
4.151 4.01807 4.01801 3.75903 1.94598 4.27698 2.72302 1.94601 4.01804 3.75903 4.01801 6.34204 
4.27698 2.46402 1.80597 4.27695 4.15103 1.94598 2.33093 2.72308 4.27692 6.34204 1.94601 5.69797 
1.80597 2.46405 4.151 4.151 4.27698 1.80597 4.27692 1.80597 4.15103 4.27695 1.94598 1.80597 
0 ]xsh
%ADOBeginSubsetFont: MZQAAA+UniversalStd-NewswithCommPi Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MZQAAA+UniversalStd-NewswithCommPi def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1995, 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Universal is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-7 -227 989 764} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0 757 757] def
/OtherBlues [-227 -227] def
/StdHW [48] def
/StdVW [48] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/space <1C60D8A8C9B8524C50> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKU+UniversalStd-NewswithCommPi /MZQAAA+UniversalStd-NewswithCommPi findfont ct_VMDictPut
/PZSRKU+UniversalStd-NewswithCommPi*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
PZSRKU+UniversalStd-NewswithCommPi nf
PZSRKU+UniversalStd-NewswithCommPi*1 [5.46 0 0 -6 0 0 ]msf
475.03 538.1 mo
( )sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
140.925 548 mo
(subject to review by the IRS. Your employer may be required to send a copy of this form to the IRS. )
[3.75902 4.15102 4.27695 1.946 4.01804 4.01804 2.46404 1.946 2.46404 4.27695 1.946 2.72305 
4.01804 3.64003 1.80597 4.01804 5.69797 1.946 4.27695 3.63298 1.946 2.46404 4.15102 4.01804 
1.946 2.06499 5.054 4.54301 1.946 1.946 4.66905 4.27695 4.15102 2.72305 1.946 4.01805 
6.34204 4.27692 1.80597 4.27698 3.63297 4.01804 2.72305 1.94601 6.34204 4.01801 3.633 1.94598 
4.27698 4.01801 1.94601 2.72305 4.01804 4.27695 4.151 1.80597 2.72308 4.01801 4.27698 1.94598 
2.46405 4.27692 1.94601 3.759 4.01807 4.151 4.27695 1.94601 4.01801 1.94601 4.01804 4.27695 
4.27695 3.633 1.94598 4.27692 2.33099 1.94598 2.46405 4.151 1.80597 3.75903 1.94598 2.33093 
4.27698 2.72302 6.34204 1.94598 2.46405 4.27698 1.94598 2.46405 4.151 4.01801 1.94604 2.06494 
5.05402 4.54303 1.94598 0 ]xsh
set_def_flat
496.8 515.749 mo
496.8 528.248 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
503.91 521.116 mo
(OMB No. 1545-2159)
[5.31998 6.09698 4.79498 1.94604 5.05396 4.01807 1.94598 1.94598 3.89203 3.89197 3.89203 3.89197 
2.72308 3.89197 3.89203 3.89197 0 ]xsh
set_def_flat
496.3 552.095 mo
576.25 552.095 li
@
1 setflat
set_def_flat
496.8 527.751 mo
496.8 552.595 li
@
1 setflat
%ADOBeginSubsetFont: ELRBAA+HelveticaNeueLTStd-BdOu Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /ELRBAA+HelveticaNeueLTStd-BdOu def
/FontInfo 7 dict dup begin
/Notice (Copyright 1991, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
def
/FontBBox {-149 -270 1353 992} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 714 730 524 538 698 708] def
/OtherBlues [267 272 368 376 -184 -176] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [22] def
/StdVW [23] def
/StemSnapH [18 22 114 124 130 136 142 148 154 170] def
/StemSnapV [18 23 155 166 170 182] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/zero <1C60D8A8C9B66DDCCA238787864821F974E1C52A8950B8A3AC8CA0B75
1EA4E1BD95F3A6077B9CE7024C162D1BB525E17BB9E034A1137971FD28F883D2
2E43B05BC26ADA1245193A3F6CD1B647E4DB51D751D2188581432419B1EF767D
56B8DBBB2D71F169CA79CA27333DC8F512ABC5C91A21D2094050B7AA9F0C0FEF
B7ABA02A990EB3A797E298AEEBE945FEFF3641B0D548B9245F028B37A2BDE0E7
80DEC30CF9EA3EAA5553025> |-
/two <1C60D8A8C9B66DDCC0D369F4B5FBB6A973EC00A05AE1095C15154C0F2B
89CF7FB9274A6C289E9B261B5E8F3DB47DC566DF5F99870E1CBFAE71157A9EE6
90F2B8230994420C03BC556A8A4A09EB3F57A04E947D735B635C07D3C83A063D
6345918531A06D269E78F0F5CA388E4C00B68A2C12FDC86A06C293494F3B4F13
7600DA055F7CCADE4D0A62C2BC767D9DA5FF342D7DF3D461C59B80337ED72B2F
5C8E90106E24CD9F0EEE1F8640C5C7077E07F76D5134B452E2448AE9DC1944D8
24AF3E7E10EC7FA01AD1BE3C8677AD9BD234018F345195AB3F49539AF75C8336
992A7069F01EC05DB08C11D0ED07AC8091ADA52066C7D51640B3CD30A8B3E8BE
E9E2879D95BC28B555DD7DBB9B7E5CE5B177073BD9BDCA88779C4515687E2C18
169564260D9C6520DAE2681ABBF6B3FAE13C905B64FDB4429B44008F18D204FC
441C9A0BFCDD79A62F38827CCB61FDFF9B0BF3B7580727DB1105B95CE379D6ED
662F4CF889D15BE32C1DAE4D59D162DD88D05BFE2547A973740495BFE462> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKV+HelveticaNeueLTStd-BdOu /ELRBAA+HelveticaNeueLTStd-BdOu findfont ct_VMDictPut
/PZSRKV+HelveticaNeueLTStd-BdOu*1 
[48{/.notdef}rp /zero /.notdef /two 205{/.notdef}rp]
PZSRKV+HelveticaNeueLTStd-BdOu nf
PZSRKV+HelveticaNeueLTStd-BdOu*1 [20 0 0 -21 0 0 ]msf
510.4 543.995 mo
(20)
[12.64 0 ]xsh
%ADOBeginSubsetFont: AXNBAA+HelveticaNeueLTStd-Blk Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /AXNBAA+HelveticaNeueLTStd-Blk def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Black) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {-165 -232 1101 953} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 519 532 696 704] def
/OtherBlues [274 282 -181 -168] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [144] def
/StdVW [198] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/one <1C60D8A8C9B65130168DBCD9C537E72C6F18F8C6F5F609DBBAB2A8AA46
DE3812173BB774E8FEBA3E5D5F496D9C10A603F155AC15A2> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKW+HelveticaNeueLTStd-Blk /AXNBAA+HelveticaNeueLTStd-Blk findfont ct_VMDictPut
/PZSRKW+HelveticaNeueLTStd-Blk*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
PZSRKW+HelveticaNeueLTStd-Blk nf
PZSRKW+HelveticaNeueLTStd-Blk*1 [20 0 0 -21 0 0 ]msf
535.68 543.995 mo
(11)
[13.36 0 ]xsh
set_def_flat
.5 lw
35.75 576 mo
216.25 576 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF327C10274A04E5FCB2D9895617BC7F34D9E114D9FCD9
D31908F21A140D13E77FA0CC46276F81D2C850A798D540> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /.notdef /one 
2{/.notdef}rp /four 12{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /J /K /.notdef /M 
/N /.notdef /P /.notdef /R /S /T 2{/.notdef}rp 
/W /.notdef /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
46 558.997 mo
(1        )
[3.892 1.946 1.946 1.946 1.946 1.946 1.946 1.946 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
65.46 558.997 mo
(Type or print your first name and middle initial.)
[4.01804 3.5 4.15102 3.75902 1.946 4.01804 2.33095 1.946 4.15102 2.33095 1.554 3.892 
2.20502 1.946 3.5 4.01804 3.892 2.33095 1.946 2.07204 1.554 2.33095 3.5 2.20502 
1.946 3.892 3.75902 5.97098 3.75902 1.946 3.75902 3.892 4.15102 1.946 5.97098 1.554 
4.15102 4.15102 1.554 3.75902 1.946 1.554 3.892 1.554 2.20502 1.554 3.75902 1.554 
0 ]xsh
set_def_flat
215.75 576 mo
439.45 576 li
@
1 setflat
set_def_flat
216 551.749 mo
216 576.25 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B7EF32574B694376B229839999C52AD126014A4E82E3EF1941
32D9C5D9BA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 76 /L put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /L /M 
/N /O /P /.notdef /R /S /T 2{/.notdef}rp 
/W /.notdef /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 47{/.notdef}rp /quotedblleft 
12{/.notdef}rp /bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
223 558.997 mo
(Last name)
[3.892 3.75902 3.5 2.20502 1.946 3.892 3.75902 5.97098 0 ]xsh
set_def_flat
35.75 600.001 mo
309.85 600.001 li
@
1 setflat
set_def_flat
309.6 575.75 mo
309.6 600.251 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
65 582.998 mo
(Home address \(number and street or rural route\))
[5.054 4.01804 5.97098 3.75902 1.946 3.75902 4.15102 4.15102 2.33095 3.75902 3.5 3.5 
1.946 1.81302 3.892 3.892 5.97098 4.15102 3.75902 2.33095 1.946 3.75902 3.892 4.15102 
1.946 3.5 2.20502 2.33095 3.75902 3.75902 2.20502 1.946 4.01804 2.33095 1.946 2.33095 
3.892 2.33095 3.75902 1.554 1.946 2.33095 4.01804 3.892 2.20502 3.75902 0 ]xsh
set_def_flat
309.6 599.751 mo
309.6 624.252 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Z <1C60D8A8C9B7D8BE6A0467B51C991AEB134B704A878BDCD80B551E4B77D7
D5EB31E18D9011771BB071665213BA67631AB12771> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 90 /Z put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /L /M 
/N /O /P /.notdef /R /S /T 2{/.notdef}rp 
/W /.notdef /Y /Z 6{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 47{/.notdef}rp 
/quotedblleft 12{/.notdef}rp /bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
65 606.999 mo
(City or town, state, and ZIP code)
[5.054 1.554 2.20502 3.5 1.946 4.01804 2.33095 1.946 2.20502 4.01804 5.30597 3.892 
1.946 1.946 3.5 2.20502 3.75902 2.20502 3.75902 1.946 1.946 3.75902 3.892 4.15102 
1.946 4.27695 1.81302 4.53596 1.946 3.75902 4.01804 4.15102 0 ]xsh
set_def_flat
438.95 576 mo
576.25 576 li
@
1 setflat
set_def_flat
439.2 551.749 mo
439.2 576.25 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF325767F2170BB2E147AE30CDCDCD8345D5F0FD0C9311
672852791EE54A7202D78E2180B10262EF9A254BFE10B9C6FCF355FEBE2FBEC1
A088105AF7394DBC2821BEBCAE54DB4BB6238F0778F445CE42EEB8D38B1E0BF3
A92A96024DB24C> |-
/three <1C60D8A8C9B7EF32A1CB48DEA511732BD6FFE1D4F60543CB0C044FA3
ADAD24E62F2164F6A0B9A9B93202DD96D9532FF1CFF13140A48E10B88EC6B175
BF7530781BE7E79FEDB4C4916101DC4BFD530021619A3DA4EC42F0B87F77DAE8
B0B6779E8ABFAA43C6F0E02FD325B778EC383BB7A03835EB54BA23F3897EF27B
42B8DDA5F7B609EF200E61F97FBB623A51BD7429F80BC5FD5DCD80EFDD9E3634
220FE300E6C11C959AFDDF140D56FB792814568A313E3B4A7513136DDD6095F6
ACF2D9B24725D0A99CE841A4D8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 50 /two put
dup 51 /three put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen /period /slash /.notdef /one 
/two /three /four 12{/.notdef}rp /A /B /C /D 
/E /F /G /H /I /J /K /.notdef 
/M /N /.notdef /P /.notdef /R /S /T 
2{/.notdef}rp /W /.notdef /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
444.2 558.997 mo
(2     Your social security number)
[3.892 1.94601 1.94598 1.94598 1.94601 1.94601 4.66904 4.27695 4.151 2.72308 1.94598 3.75903 
4.27692 4.01807 1.80597 4.01801 1.80597 1.94601 3.759 4.01807 4.01801 4.15106 2.72302 1.80597 
2.46405 3.63293 1.94604 4.151 4.151 6.34204 4.27698 4.01801 0 ]xsh
314.854 585.996 mo
(3)sh
set_def_flat
324 585.999 mo
332 585.999 li
332 577.999 li
324 577.999 li
cp
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
338.4 584.997 mo
(Single)
[4.53598 1.55399 3.892 4.01804 1.55399 0 ]xsh
set_def_flat
367.2 585.999 mo
375.2 585.999 li
375.2 577.999 li
367.2 577.999 li
cp
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
381.6 584.997 mo
(Married)
[6.09702 3.75903 2.33093 2.33093 1.55402 3.75903 0 ]xsh
set_def_flat
410.4 585.999 mo
418.4 585.999 li
418.4 577.999 li
410.4 577.999 li
cp
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
424.8 584.997 mo
(Married, but withhold at higher Single rate.)
[6.09702 3.759 2.33096 2.33096 1.55399 3.759 4.15103 1.94601 1.94598 4.151 3.89203 2.20502 
1.94598 5.30597 1.55402 2.20502 3.89197 3.89203 4.01801 1.55402 4.151 1.94601 3.759 2.20502 
1.94601 3.892 1.55402 4.01801 3.89203 3.75903 2.33093 1.94598 4.53595 1.55402 3.89203 4.01801 
1.55402 3.75903 1.94598 2.33093 3.75903 2.20502 3.75903 0 ]xsh
set_def_flat
309.35 599.998 mo
576.25 599.998 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B854D088EA530B2FDB28EC3B4FF9D9CD0146E6EE424C90
E23A870E2CF366A85A8E1F74ABA0A2CD> |-
/zero <1C60D8A8C9B7EF32A1CB48DEAA21709CC50DCA8C1EC1ABD4E7EB557E2
CDD0F6DE60B49FACB4CB8874F51128AFB43D4F5EA072546CDF8C15C60681D530
A7A36D335C35F801FAD4327B2D61364B3F8A9BC23F682E0555A2BB5EF89BDF56
928A96D> |-
/seven <1C60D8A8C9B7EF327C10274A9264860397BF952BA7D3030BFE9C3B1D
4BFE5242D1CEDFEB6304F63158FA977519E978402E46A73F65E51FFD22E1A951
94A756203108E8980C72A1A89ECBD078> |-
/eight <1C60D8A8C9B7EF32A1CA72D48D3E1CFAD96DD45360960870693B73CB
1EC3A37E628A512EA2E4E0BB05A59BFA17BD2A9E880DE0AC3A7B81E9DE79266C
BB7DD46D07B2274B1CEA48F6F2E67EFF789110CB89D849FF451F492DA47C544D
9C462173D3EFB087E05C850EDAA1B635C1678B46AB4BAB3F61B139DCCFF6F3E4
9374F054E554BB3EAC459709A98A1E2E857549AF4E207F50FB300D649D360BFD
80E56EA06B55CDF62C89BDDFE038E986122D539D19391480FF05493168010C71
2D79290A1CD092273A1D05A488BA16A0893ECD4B74AA612266F7C436E6A83813
2E45E65944EA37FEBCF75A1F1B86572D7EEAD794153C0D1E42EDE084969AA27B
78DC9BE31468A3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 44 /comma put
dup 48 /zero put
dup 55 /seven put
dup 56 /eight put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four 2{/.notdef}rp /seven /eight 8{/.notdef}rp 
/A /B /C /D /E /F /G /H 
/I /J /K /.notdef /M /N /.notdef /P 
/.notdef /R /S /T 2{/.notdef}rp /W /.notdef /Y 
7{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [6.02 0 0 -7 0 0 ]msf
314.6 596.996 mo
(Note.  )
[4.46082 3.67816 2.11908 3.45551 1.67355 1.67355 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [6.02 0 0 -7 0 0 ]msf
333.334 596.996 mo
(If married, but legally separated, or spouse is a nonresident alien, check the \252Single\272 box.)
[1.5592 1.78195 1.67355 5.13504 3.23276 2.00461 2.00461 1.33646 3.23276 3.56985 1.67358 1.67355 
3.56985 3.34714 1.8963 1.67355 1.33646 3.23276 3.45551 3.23276 1.33643 1.33646 3.01001 1.67355 
3.01001 3.23273 3.56989 3.23276 2.00461 3.23276 1.89633 3.23273 3.56989 1.67355 1.67355 3.45554 
2.00461 1.67355 3.01001 3.56985 3.45551 3.34714 3.01001 3.23276 1.67355 1.33643 3.01001 1.67355 
3.23276 1.67355 3.34711 3.45554 3.34711 2.00461 3.23279 3.00998 1.33646 3.56985 3.23276 3.34711 
1.89633 1.67355 3.23276 1.33646 1.33643 3.23276 3.34714 1.67352 1.67358 3.23273 3.34711 3.23279 
3.23279 3.12433 1.67352 1.89636 3.34711 3.23273 1.67358 2.56451 3.90094 1.33643 3.34711 3.45551 
1.33643 3.23279 2.56445 1.67358 3.56989 3.45551 3.11841 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
314.854 609.998 mo
(4)sh
324.003 609.599 mo
(If your last name differs from that shown on your social security card, )
[2.065 2.33093 1.94598 3.633 4.27695 4.15103 2.72302 1.94601 1.80597 4.01804 3.75903 2.46402 
1.94601 4.151 4.01804 6.34204 4.01804 1.94598 4.27698 1.80597 2.33093 2.33093 4.01807 2.72302 
3.75903 1.94598 2.33096 2.72305 4.27695 6.34204 1.94601 2.46402 4.15103 4.01801 2.46405 1.94598 
3.75903 4.151 4.27698 5.69794 4.15103 1.94601 4.27692 4.15103 1.94601 3.63297 4.27695 4.151 
2.72308 1.94598 3.75903 4.27692 4.01807 1.80597 4.01801 1.80597 1.94601 3.759 4.01807 4.01801 
4.151 2.72308 1.80597 2.46405 3.633 1.94598 4.01801 4.01807 2.72302 4.27698 1.94598 0 
]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7.21 0 0 -7 0 0 ]msf
324 620.597 mo
(check here. You must call 1-800-772-1213 for a replacement card.  )
[4.13858 4.27554 4.13858 4.13858 4.13858 2.00436 4.27554 4.13858 2.80475 4.13858 2.00436 2.00439 
4.80911 4.40527 4.27554 2.00436 6.53232 4.27554 3.8718 2.53796 2.00436 4.13858 4.13858 1.86014 
1.86017 2.00436 4.00876 2.93445 4.00876 4.00876 4.00876 2.93445 4.00876 4.00876 4.00876 2.93445 
4.00879 4.00873 4.00879 4.00873 2.00439 2.40088 4.40524 2.80475 2.00436 4.13861 2.00436 2.80472 
4.13861 4.40524 1.86014 4.13861 4.13855 4.13861 6.53229 4.13855 4.27557 2.53796 2.00439 4.13855 
4.13855 2.80475 4.40527 2.00439 2.00433 0 ]xsh
PZSRKS+UniversalStd-NewswithCommPi [6 0 0 -6 0 0 ]msf
554.188 619.097 mo
(\000a)sh
set_def_flat
568 621.999 mo
576 621.999 li
576 613.999 li
568 613.999 li
cp
@
2 lc
36 623.999 mo
576 623.999 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A1CB48DEAACDCE1E5E912AFA02E3D131937ECEE40
F6B86A8E08F7B68783F01F5ABFB17625300FD4DF0E5FFCC6C57DBBFD22A1C348
B58600BE82DF50DC9F3741ACF0CC8CB768958C774B7AD44AE3E9A56A8A6C3930
4BDF34065640DF71D190F6290E4FB42EC12772DCF8297> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /.notdef /seven /eight 
8{/.notdef}rp /A /B /C /D /E /F /G 
/H /I /J /K /.notdef /M /N /.notdef 
/P /.notdef /R /S /T 2{/.notdef}rp /W /.notdef 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 633.567 mo
(5)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 633.567 mo
(Total number of allowances you are claiming \(from line )
[4.87904 4.87904 2.67752 4.56452 1.887 2.363 4.726 4.726 7.25047 5.04052 4.56452 2.83044 
2.363 4.87904 2.51604 2.363 4.56452 1.88699 1.88701 4.87904 6.44296 4.56451 4.72601 4.56451 
4.56451 4.25 2.36301 4.25 4.87904 4.726 2.36301 4.56451 2.83043 4.56453 2.36299 4.56453 
1.88701 4.56451 1.88699 7.25049 1.88699 4.726 4.87904 2.36301 2.20151 2.51605 2.83044 4.87903 
7.25047 2.36301 1.88699 1.88702 4.72598 4.56454 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
274.018 633.567 mo
(H )
[6.29846 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
282.68 633.567 mo
(above )
[4.56451 5.04053 4.87906 4.25 4.56451 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
308.341 633.567 mo
(or )
[5.19342 3.30658 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
319.204 633.567 mo
(from the applicable worksheet on page 2\))
[2.51605 2.83041 4.87906 7.25046 2.36301 2.67752 4.72601 4.56451 2.36301 4.56451 5.04053 5.0405 
1.88702 1.88699 4.56451 4.56454 5.0405 1.88699 4.56454 2.36301 6.44293 4.87906 2.83044 4.41147 
4.25 4.72601 4.56451 4.56451 2.67752 2.36301 4.87903 4.72601 2.36298 5.04053 4.56451 4.87906 
4.56451 2.36301 4.72601 0 ]xsh
set_def_flat
0 lc
496.55 635.998 mo
511.45 635.998 li
@
1 setflat
set_def_flat
496.8 623.749 mo
496.8 636.248 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
501.637 633.567 mo
(5)sh
set_def_flat
510.95 635.998 mo
576.25 635.998 li
@
1 setflat
set_def_flat
511.2 623.749 mo
511.2 636.248 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF32A1CB48DEA53F45D09C37EA7450C2F1B0D3E1B607E7
A537D549203C57E2E1EFC3B6952D280A26432F99C301163CFD7158B19DA216F7
04011F1A20827116C3572F8747E6425B6A8B7EED28F4D498AF3E6DD33C8DB47A
091F041A68E43633A02809DF3A4B1CF41CD3DAC145A277343107438D7D3AF164
6D4C11F75535DBB2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
8{/.notdef}rp /A /B /C /D /E /F /G 
/H /I /J /K /.notdef /M /N /.notdef 
/P /.notdef /R /S /T 2{/.notdef}rp /W /.notdef 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 645.569 mo
(6)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 645.569 mo
(Additional amount, if any, you want withheld from each paycheck ..............)
[5.50796 5.04052 5.04052 1.887 2.67752 1.887 4.87904 4.726 4.56452 1.887 2.363 4.56452 
7.25047 4.87904 4.726 4.72601 2.67752 2.36299 2.36299 1.88701 2.51604 2.36301 4.56451 4.72601 
4.25 2.36299 2.36299 4.25 4.87906 4.72598 2.36301 6.44296 4.56451 4.726 2.67752 2.36301 
6.44296 1.88699 2.67752 4.72601 4.72598 4.56453 1.88701 5.04051 2.36299 2.51605 2.83044 4.87903 
7.25049 2.36299 4.56451 4.56451 4.56451 4.72601 2.36301 5.0405 4.56454 4.25 4.56454 4.72595 
4.56454 4.56454 4.41144 11.543 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 0 ]xsh
set_def_flat
496.55 648 mo
511.45 648 li
@
1 setflat
set_def_flat
496.8 635.751 mo
496.8 648.25 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
501.637 645.569 mo
(6)sh
set_def_flat
511.2 635.751 mo
511.2 648.25 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
513.188 644.426 mo
($)sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 657.568 mo
(7)sh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 657.568 mo
(I claim exemption from withholding for 2011, and I certify that I meet )
[2.20152 2.363 4.56452 1.887 4.56452 1.887 7.25047 2.363 4.56452 4.40305 4.56452 7.25047 
5.04052 2.67752 1.887 4.87904 4.726 2.36301 2.51604 2.83043 4.87906 7.25046 2.36301 6.44296 
1.88699 2.67752 4.72601 4.72598 4.87906 1.88699 5.04053 1.88699 4.726 4.87904 2.36299 2.51605 
4.87904 2.83043 2.36301 4.726 4.726 4.726 4.726 2.36301 2.36299 4.56453 4.72598 5.04053 
2.36301 2.20151 2.36302 4.56451 4.56451 2.83044 2.67749 1.88702 2.51605 4.25 2.36298 2.67755 
4.72598 4.56454 2.67749 2.36301 2.20151 2.36304 7.25043 4.56454 4.56454 2.67749 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
326.31 657.568 mo
(both )
[5.19342 5.19345 2.99203 5.04053 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
347.092 657.568 mo
(of the following conditions for exemption.)
[4.87906 2.51602 2.36301 2.67752 4.72598 4.56454 2.36301 2.51602 4.87906 1.88699 1.88699 4.87906 
6.44296 1.88699 4.72598 4.87906 2.36301 4.56451 4.87903 4.72601 5.04053 1.88699 2.67752 1.88699 
4.87906 4.72598 4.25 2.36301 2.51605 4.87903 2.83044 2.36301 4.56451 4.40305 4.56451 7.25049 
5.04053 2.67749 1.88702 4.87903 4.72601 0 ]xsh
511.2 684 mo
576 684 li
576 648 li
511.2 648 li
cp
.240146 .191379 .195224 0 cmyk
f
set_def_flat
510.95 648 mo
576.25 648 li
.75021 .679683 .670222 .90164 cmyk
@
1 setflat
set_def_flat
510.95 684 mo
576.25 684 li
@
1 setflat
set_def_flat
511.2 647.75 mo
511.2 684.25 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.8 669.567 mo
(\267 Last year I had a right to a refund of )
[4.25 2.363 4.726 4.56452 4.25 2.67752 2.363 4.25 4.56452 4.56452 2.83044 2.363 
2.20152 2.363 4.726 4.56452 5.04052 2.36299 4.56453 2.36299 2.83044 1.88699 4.87906 4.72598 
2.67752 2.36301 2.67752 4.87904 2.36299 4.56453 2.36299 2.83044 4.56451 2.51605 4.726 4.726 
5.04051 2.36301 4.87904 2.51604 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
209.487 669.567 mo
(all )
[4.87904 2.19296 2.19296 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
221.115 669.567 mo
(federal income tax withheld because I had )
[2.51605 4.56451 5.04053 4.56451 2.83044 4.56451 1.88699 2.36301 1.88699 4.72601 4.56451 4.87903 
7.25049 4.56451 2.36301 2.67752 4.56451 4.40305 2.36301 6.44296 1.88699 2.67752 4.72601 4.72598 
4.56451 1.88702 5.04053 2.36298 5.04053 4.56451 4.56451 4.56454 4.72598 4.25 4.56451 2.36301 
2.20154 2.36301 4.72598 4.56451 5.04053 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
383.89 669.567 mo
(no )
[5.04053 5.19342 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
396.487 669.567 mo
(tax liability )
[2.67752 4.56451 4.40305 2.36301 1.88699 1.88699 4.56454 5.0405 1.88702 1.88699 1.88699 2.67752 
4.25 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
438.826 669.567 mo
(and)
[4.87903 5.04053 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.8 681.569 mo
(\267 This year I expect a refund of )
[4.25 2.363 4.87904 4.726 1.887 4.25 2.363 4.25 4.56452 4.56452 2.83044 2.363 
2.20152 2.363 4.56452 4.40305 5.04052 4.56453 4.56451 2.67752 2.36301 4.56451 2.36301 2.83043 
4.56453 2.51604 4.726 4.726 5.04051 2.36301 4.87904 2.51604 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
184.285 681.569 mo
(all )
[4.87904 2.19296 2.19296 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
195.913 681.569 mo
(federal income tax withheld because I expect to have )
[2.51605 4.56451 5.04053 4.56451 2.83044 4.56451 1.88699 2.36301 1.88699 4.72601 4.56451 4.87904 
7.25047 4.56451 2.36301 2.67752 4.56451 4.40305 2.36301 6.44296 1.88699 2.67752 4.72601 4.72598 
4.56454 1.88699 5.0405 2.36301 5.04053 4.56451 4.56454 4.56451 4.72598 4.25 4.56454 2.36298 
2.20154 2.36298 4.56454 4.40305 5.04053 4.56451 4.56451 2.67752 2.36301 2.67752 4.87903 2.36301 
4.72601 4.56451 4.25 4.56451 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
400.568 681.569 mo
(no )
[5.04053 5.19342 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
413.165 681.569 mo
(tax liability.)
[2.67752 4.56451 4.40305 2.36301 1.88699 1.88702 4.56451 5.04053 1.88699 1.88699 1.88699 2.67752 
4.25 0 ]xsh
64.8 692.568 mo
(If you meet both conditions, write \252Exempt\272 here ............... )
[2.20152 2.51604 2.363 4.25 4.87904 4.726 2.363 7.25047 4.56452 4.56452 2.67752 2.363 
5.04052 4.87904 2.67752 4.726 2.363 4.56453 4.87903 4.72601 5.04051 1.88701 2.67752 1.88699 
4.87904 4.726 4.25 2.36301 2.36299 6.44296 2.83043 1.88701 2.67752 4.56453 2.36299 3.62096 
5.19344 4.40305 4.56451 7.25049 5.04051 2.67752 3.62096 2.36301 4.72598 4.56453 2.83043 4.56453 
2.36299 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 4.80249 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7.735 0 0 -8.5 0 0 ]msf
427.163 692.568 mo
( )sh
PZSRKS+UniversalStd-NewswithCommPi [6 0 0 -6 0 0 ]msf
429.314 691.068 mo
(\000a)sh
set_def_flat
438.95 684 mo
453.85 684 li
@
1 setflat
set_def_flat
439.2 683.75 mo
439.2 696.249 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
444.037 693.568 mo
(7)sh
set_def_flat
453.35 684 mo
576.25 684 li
@
1 setflat
set_def_flat
453.6 683.75 mo
453.6 696.249 li
@
1 setflat
set_def_flat
35.75 695.999 mo
576.25 695.999 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/U <1C60D8A8C9B6079FEF8760F980080AB19BF81187DA4561E6D60C3DD3289A
683B1CF9958FA20D60E0BD7BFA0F7894018155A0ED47DA64CDC551FBFEB212C2
7851CA161A030D233B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 85 /U put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /L /M 
/N /O /P /.notdef /R /S /T /U 
/.notdef /W /.notdef /Y /Z 6{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 12{/.notdef}rp /bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
36 703.524 mo
(Under penalties of perjury, I declare that I have examined this certificate and to the best of my knowledge and belief, it is t)
[5.054 3.892 4.15102 3.75902 2.33095 1.946 4.15102 3.75902 3.892 3.75902 1.554 2.20502 
1.554 3.75902 3.5 1.946 4.01804 2.07204 1.946 4.15102 3.75902 2.33095 1.554 3.892 
2.33095 3.5 1.946 1.946 1.81302 1.946 4.15102 3.75902 3.75902 1.554 3.75902 2.33095 
3.75902 1.946 2.20502 3.892 3.75902 2.20502 1.946 1.81302 1.946 3.892 3.75902 3.5 
3.75902 1.946 3.75902 3.62604 3.75902 5.97098 1.554 3.892 3.75902 4.15102 1.946 2.20502 
3.892 1.554 3.5 1.946 3.75902 3.75902 2.33095 2.20502 1.554 2.07204 1.554 3.75902 
3.75902 2.20502 3.759 1.94601 3.759 3.89203 4.151 1.94598 2.20502 4.01807 1.94598 2.20502 
3.892 3.759 1.94601 4.15103 3.759 3.5 2.20502 1.94601 4.01801 2.07205 1.94601 5.97095 
3.5 1.94601 3.63297 3.89203 4.01801 5.30597 1.55402 3.75903 4.151 4.01804 3.759 1.94601 
3.759 3.89203 4.151 1.94598 4.15103 3.759 1.55402 1.55402 3.759 2.07205 1.94598 1.94598 
1.55402 2.20502 1.94598 1.55402 3.5 1.94598 0 ]xsh
416.402 703.524 mo
(rue, correct, and complete.)
[2.33096 3.892 3.75903 1.94598 1.94598 3.75903 4.01804 2.33096 2.33093 3.75903 3.759 2.20502 
1.94601 1.94598 3.75903 3.89197 4.15103 1.94601 3.759 4.01804 5.97098 4.15103 1.55399 3.759 
2.20502 3.75903 0 ]xsh
set_def_flat
35.75 732.002 mo
439.45 732.002 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quoteright <1C60D8A8C9B854D0FB1C49D1C38A98D375651FE73D5295062C8
63693290D4D8D452150C0EA99EEA8815EDC6AAFECD8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 39 /quoteright put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 4{/.notdef}rp /comma /hyphen /period 
/slash /zero /one /two /three /four /five /six 
/seven /eight 8{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /J /K /.notdef /M 
/N /.notdef /P /.notdef /R /S /T 2{/.notdef}rp 
/W /.notdef /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
36 719.714 mo
(Employee's signature  )
[5.18396 7.24805 4.88794 2.06396 4.88794 4.15198 4.59204 4.59204 2.224 4.29602 2.224 4.29602 
2.06396 4.88794 4.74402 4.59204 2.81604 4.74402 3.11206 4.59204 2.224 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [8 0 0 -8 0 0 ]msf
36 728.714 mo
(\(This form is not valid unless you sign it.\)  )
[2.07202 4.59204 4.448 1.776 4 2.224 2.36804 4.59204 2.66394 6.82397 2.224 1.776 
4 2.224 4.448 4.59204 2.52002 2.224 4 4.29602 1.776 1.776 4.74402 2.224 
4.448 4.448 1.776 4.29602 4 4 2.224 4 4.59204 4.448 2.224 4 
1.776 4.59204 4.448 2.224 1.776 2.52002 2.224 2.07202 2.224 0 ]xsh
PZSRKS+UniversalStd-NewswithCommPi [5 0 0 -5 0 0 ]msf
184.918 727.714 mo
(\000a)sh
set_def_flat
438.95 731.999 mo
576.25 731.999 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
444.2 727.711 mo
(Date )
[5.92798 4.59204 2.81604 4.59204 0 ]xsh
PZSRKS+UniversalStd-NewswithCommPi [5 0 0 -5 0 0 ]msf
464.352 726.711 mo
(\000a)sh
PZSRKP+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
46 737.997 mo
(8        )
[3.892 1.946 1.946 1.946 1.946 1.946 1.946 1.946 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
65.46 737.997 mo
(Employer's name and address \(Employer: Complete lines 8 and 10 only if sending to the IRS.\))
[4.27695 5.97098 4.15102 1.554 4.01804 3.5 3.75902 2.33095 1.946 3.5 1.946 3.892 
3.75902 5.97098 3.75902 1.946 3.75902 3.892 4.15102 1.946 3.75902 4.15102 4.15102 2.33095 
3.75902 3.5 3.5 1.946 1.81302 4.27695 5.97098 4.15102 1.554 4.01804 3.5 3.75902 
2.33095 1.946 1.946 5.054 4.01804 5.97098 4.15102 1.554 3.75902 2.20502 3.75902 1.946 
1.554 1.554 3.892 3.75902 3.5 1.946 3.892 1.946 3.75902 3.892 4.15103 1.94598 
3.892 3.892 1.94598 4.01807 3.89197 1.55402 3.5 1.94598 1.55402 2.07202 1.94601 3.5 
3.759 3.89203 4.151 1.55402 3.89197 4.01807 1.94598 2.20502 4.01804 1.94598 2.20502 3.89203 
3.759 1.94601 1.81299 4.79498 4.53598 1.94601 0 ]xsh
set_def_flat
367.2 731.749 mo
367.2 756.25 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKP+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A1CA72D420198944AE95BBEAA3C89FD8DA2166305
9E8274DDDCE01650F40F0ECF3D83AFD6E026BD9E452F139EFED07E9F9DA17A3E
67700BCE553F70F601F877A0F791359A4DF49E5F223EB0521708A3F7BEE2E869
8A7B30EFD68BAC4EDAFA6A378542D9D6A161B8D142C8BFF1E18425A8DECDAAA6
62A008F1649CE67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKP+HelveticaNeueLTStd-Bd /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/PZSRKP+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 6{/.notdef}rp /quoteright 4{/.notdef}rp /comma /hyphen /period 
/slash /zero /one /two /three /four /five /six 
/seven /eight /nine 7{/.notdef}rp /A /B /C /D 
/E /F /G /H /I /J /K /.notdef 
/M /N /.notdef /P /.notdef /R /S /T 
2{/.notdef}rp /W /.notdef /Y 7{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
PZSRKP+HelveticaNeueLTStd-Bd nf
PZSRKP+HelveticaNeueLTStd-Bd*1 [5.95 0 0 -7 0 0 ]msf
372.2 737.997 mo
(9  )
[3.3082 1.65411 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [5.95 0 0 -7 0 0 ]msf
378.816 737.997 mo
(Office code \(optional\))
[4.52197 1.76123 1.76123 1.32089 3.19516 3.19516 1.65411 3.19516 3.41534 3.52835 3.19516 1.65411 
1.54108 3.41531 3.52835 1.87427 1.32092 3.41531 3.3082 3.19516 1.32092 0 ]xsh
set_def_flat
439.2 731.749 mo
439.2 756.25 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [6.72 0 0 -7 0 0 ]msf
444.2 737.997 mo
(10     )
[3.73633 3.7363 1.86816 1.86816 1.86816 1.86816 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [6.72 0 0 -7 0 0 ]msf
461.013 737.997 mo
(Employer identification number \(EIN\))
[4.10587 5.73215 3.98495 1.49185 3.85733 3.35999 3.60867 2.2377 1.86816 1.49182 3.98499 3.60864 
3.73633 2.11682 1.49185 1.98914 1.49185 3.60864 3.60864 2.11682 1.49188 3.8573 3.73633 1.86816 
3.73633 3.73627 5.73218 3.98492 3.6087 2.23767 1.86816 1.74054 4.10583 1.74048 4.85187 0 
]xsh
set_def_flat
1 lw
35.75 756 mo
288.25 756 li
@
1 setflat
PZSRKP+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
36 765.711 mo
(For Privacy Act and Paperwork Reduction Act Notice, see page 2.)
[4.74402 4.88794 3.11206 2.224 5.33606 3.11206 2.06396 4.16003 4.59204 4.59204 4.15198 2.224 
5.47998 4.59204 2.81604 2.224 4.59204 4.74402 4.88794 2.224 5.33606 4.59204 4.88794 4.59204 
3.11206 6.51196 4.88794 3.11206 4.59204 2.224 5.776 4.59204 4.88794 4.74402 4.59204 2.81604 
2.06396 4.88794 4.74402 2.224 5.47998 4.59204 2.81604 2.224 5.92798 4.88794 2.81604 2.06396 
4.59204 4.59204 2.224 2.224 4.29602 4.59204 4.59204 2.224 4.88794 4.59204 4.88794 4.59204 
2.224 4.448 0 ]xsh
set_def_flat
287.75 756 mo
511.45 756 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKQ+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Q <1C60D8A8C9B6ED05BC92232873628B82A634825937C4D79B380B1E0ACAD9
AA23C18BE005DCFA1F8F7AB6B67DA7B91908470139E591CDB5934C480A979676
16CFD81DD623ECE9FC71012DD41138475340F179DB3E2E6EAB3A8D003DC05CF1
E92CD343D4F72E223CEB6C4A594D5D7258D60A636BE68578B36AEFEA5705004B
DF1C9B39DE3FC703321E8039E605450D5B278345E9AEE626FE9227C2E95D0E07
E1DF689EF44BBAE7B6085063B8865E4795> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKQ+HelveticaNeueLTStd-Roman /Encoding get
dup 81 /Q put
pop
%ADOEndSubsetFont
/PZSRKQ+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent /.notdef /quoteright /parenleft 
/parenright 2{/.notdef}rp /comma /hyphen /period /slash /zero /one 
/two /three /four /five /six /seven /eight /nine 
/colon /semicolon 5{/.notdef}rp /A /B /C /D /E 
/F /G /H /I /.notdef /K /L /M 
/N /O /P /Q /R /S /T /U 
/.notdef /W /.notdef /Y /Z 6{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 12{/.notdef}rp /bullet 2{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKQ+HelveticaNeueLTStd-Roman nf
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
373.273 765.997 mo
(Cat. No. 10220Q)
[5.05402 3.759 2.20502 1.94601 1.94598 5.05402 4.01801 1.94601 1.94601 3.89197 3.89203 3.89197 
3.89203 3.89197 0 ]xsh
set_def_flat
510.95 756 mo
576.25 756 li
@
1 setflat
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
517.507 765.139 mo
(Form )
[4.01801 4.01807 2.33093 5.97101 0 ]xsh
PZSRKP+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
535.79 765.139 mo
(W-4)
[9.44 4.06995 0 ]xsh
PZSRKQ+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
554.86 765.139 mo
( \(2011\) )
[1.94598 1.81305 3.89197 3.89203 3.89197 3.89203 1.81299 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/PZSRKU+UniversalStd-NewswithCommPi*1 uf
/PZSRKU+UniversalStd-NewswithCommPi uf
/MZQAAA+UniversalStd-NewswithCommPi uf
/PZSRKT+HelveticaNeueLTStd-BlkCn*1 uf
/PZSRKT+HelveticaNeueLTStd-BlkCn uf
/UGXAAA+HelveticaNeueLTStd-BlkCn uf
/PZSRKW+HelveticaNeueLTStd-Blk*1 uf
/PZSRKW+HelveticaNeueLTStd-Blk uf
/AXNBAA+HelveticaNeueLTStd-Blk uf
/PZSRKV+HelveticaNeueLTStd-BdOu*1 uf
/PZSRKV+HelveticaNeueLTStd-BdOu uf
/ELRBAA+HelveticaNeueLTStd-BdOu uf
/PZSRKS+UniversalStd-NewswithCommPi-Identity-H uf
/PZSRKS+UniversalStd-NewswithCommPi /CIDFont ur
/PZSRKR+TimesLTStd-Roman*1 uf
/PZSRKR+TimesLTStd-Roman uf
/GFNBAA+TimesLTStd-Roman uf
/PZSRKQ+HelveticaNeueLTStd-Roman*1 uf
/PZSRKQ+HelveticaNeueLTStd-Roman uf
/QJJAAA+HelveticaNeueLTStd-Roman uf
/PZSRKP+HelveticaNeueLTStd-Bd*1 uf
/PZSRKP+HelveticaNeueLTStd-Bd uf
/HIBBAA+HelveticaNeueLTStd-Bd uf
/PZSRKO+ITCFranklinGothicStd-Demi*1 uf
/PZSRKO+ITCFranklinGothicStd-Demi uf
/PBAAAA+ITCFranklinGothicStd-Demi uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 2 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -791.968 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 791.968 li
611.976 791.968 li
611.976 0 li
cp
clp
[1 0 0 1 0 0 ]ct
set_def_flat
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
35.75 47.999 mo
540.25 47.999 li
false sop
/1 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+HelveticaNeueLTStd-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 , 2003Adobe Systems Incorporated. All Rights Reserved. Helvetica is a Trademark of Heidelberger Druckmaschinen AG exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 70 /F put
dup 87 /W put
dup 109 /m put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-166 -214 1076 952} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 529] def
/OtherBlues [273 280 380 387 -210 -198] def
/StdHW [75] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
14 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B869C16E50087FBABDE3CE9254D1765A74B8B9272D
914398AE33F8B2966754C363726A17F4C09731D8C9EE470734AD4F2399A2ADD2
4C927825E107E863D288> |-
/parenright <1C60D8A8C9B869C16E50087FBABDE3CEDFC6D5C37E30FEB4587
7D71FCEF9FE36F031ADA85A1EFF7D43F1A8A077177AA69C5F8B6A1A05A9B12A9
61B0CCD6C95BE9AA7A526> |-
/hyphen <1C60D8A8C9B7361F0233AF69090D8ECAE31A9DE2627FA300EAB5349
9411C> |-
/zero <1C60D8A8C9B7EF32A30FDF4F8ED4A615320DD4E567DE9680C3BFF51BC
733D5C1C28AA1821AE9B518D330D74510FA4B3D6E6957F6CE779DD29DC0F9188
71FC9DEDF1A33F3D999BD00F960001DD2FE7C347519EF56080F62061AB3D6A3> |-
/one <1C60D8A8C9B7EF327C10274ACE3AF096CC06ECC6A1FDB54F82BF82AF46
240A5247573E9E02A79668EFDE205282> |-
/two <1C60D8A8C9B7EF32574661BA14F3CD118D98149F1C079B1FA7CC393BA1
A8542F01925726313A147539BD7098A31AE3BC8326DFFC67329A3FB440CD9927
B22413EC96BA55FACDA5BD1056A86706B6A6930A53C7F2B4938AFFA68B72A3A8
055AFA> |-
/four <1C60D8A8C9B7EF327C1027456C3D115195F0F1719A1D162CE6D9964C5
8D4B1B14779722028390C0C3EA9CF1184B91A36FE2082F7F8EF539EE699B014F
DAE00640E18> |-
/F <1C60D8A8C9B7FD84CD08F29CEBD0F7D55E27F85F482A186E366330702034
295D81E1D480988E3591EE38DEE4E9102A87277E> |-
/W <1C60D8A8C9B5A05A5EEA8D4BA030323AFF818CE298E62ABCEE7D55C2A605
37F4C1E9CAB220282DAF4415BD3C91D779F9F8FB2A87253AF210E54E4B65F7A2
386544FC66978AABC17035352994947380798374ADC96224392EE948EEA51207
0F4A2605B3055769C4E1E9> |-
/m <1C60D8A8C9B6889A971AB98656F773653371BD773BC570B6FAE176F22F63
8A875B0CAAA9CFF63B8D6C26933260A812EBDD60DCEF6810DA777A6FA4F67FCA
97985DC9EFFEA007CBA62676D4A7F1B147B7CAABCD3CD6392CAE5AAF7BF05049
79300E35C4C7753DE970BCB308AEB758224E414F25338139A191DE> |-
/o <1C60D8A8C9B7FD841262BACCF9BE9CBF3B3457AB27787C73E0674F33EA4B
8692DC269761987488F4EB83E73305EFC34C60CB9046C7444019208F46CD0804
4D254DA27A31487E897021112EC48FD0DDE352849E1627ED83> |-
/r <1C60D8A8C9B81F2C6DADD0308D9839297A9FF792A3445615C4DAF30AFF52
E0268D4A39A8F052DB6727DC104CFF4A6AA2C112B0947446CD904C0615153B9D> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman /QJJAAA+HelveticaNeueLTStd-Roman findfont ct_VMDictPut
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /.notdef /four 17{/.notdef}rp /F 16{/.notdef}rp 
/W 21{/.notdef}rp /m /.notdef /o 2{/.notdef}rp /r 141{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
36 43.557 mo
(Form W-4 \(2011\))
[4.01804 4.01804 2.33095 5.97098 1.946 6.48196 2.72305 3.892 1.946 1.81302 3.892 3.892 
3.892 3.892 0 ]xsh
set_def_flat
539.75 47.999 mo
576.25 47.999 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B67DB5DFC07A33817ED0FE66A0A180DEBB0D8B0645A556A3F2
00FCC87D9D3931583CD651B820A4CECCA014724B4871C94B460799B849FD481E
29400AAF99CF3E3AA0C6C9AA8EF3A33981> |-
/a <1C60D8A8C9B782565A0F44FF3FF79D86A76E31D55C5CB721C885F9335614
134A94F1FA53B3C66614E6FCA74364946171FBE952C85E60266CBABC0F2D44BF
A489025D0AC535F7C1EC804032978FD9E28F98B22A3E30C9083D03A8D5953492
E9812C1E9FDAF87879CE9397A1FDC4429EC29575D6EC9ADE81623CFEEE73D60B
4C7C97D4AE8D83DD083677504BA1549E21A426A247480E37E1B6B68523D9C3EC
7E61050EED80D80AAA6CC51CB253201E49> |-
/e <1C60D8A8C9B782565A0F44F0302B83DEA18A9E45B5689F7EAB30463ECA57
32F60F41D03338E7E22B5322EC6372E5769F0C8388130702227553FBF766496F
FEAA5C51915E26BDDED417C3E122BD2FF21DAFB03A61DE680B21981F408B682D
FDFA76FAFE7DE8658863F5563E96> |-
/g <1C60D8A8C9B7FD84964396C929E2B9A02A33EABD1403FBCC31D68AEEA71E
7280B0C83081F9BBA9C90B32CC38468A06220B26B45CD586DB17DB35B9EF0628
73CE9BBDF45B950FA66A7E74A92D7D3A50DE6A0D7499CDCA2C84C4A0F000CCDA
4B9CF677DC868E21AEE72D6A2FAFC34B0280A0D4A0D915780E7DC67D5759332C
64BC3A2321D235EFB6776673C24896FFE1EA901F4FD91089C35D3543620E9A39
29B3AD9B94D4A46DE57D46D140F744A64E7589EE38FC76E34DF4367FA131D377
44A1A9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 80 /P put
dup 97 /a put
dup 101 /e put
dup 103 /g put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp 
/zero /one /two /.notdef /four 17{/.notdef}rp /F 9{/.notdef}rp 
/P 6{/.notdef}rp /W 9{/.notdef}rp /a 3{/.notdef}rp /e /.notdef 
/g 5{/.notdef}rp /m /.notdef /o 2{/.notdef}rp /r 141{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
552.422 44.139 mo
(Page )
[4.53595 3.75903 4.01801 3.75903 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeueLTStd-Bd def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 50 /two put
def
/FontBBox {-166 -218 1078 975} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 531 700 700] def
/OtherBlues [264 273 375 384 -196 -182] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [107] def
/StdVW [142] def
/StemSnapH [107 117] def
/StemSnapV [142 157] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/two <1C60D8A8C9B7EF325767F2170BB2E147AE30CDCDCD8345D5F0FD0C9311
672852791EE54A7202D78E2180B10262EF9A254BFE10B9C6FCF355FEBE2FBEC1
A088105AF7394DBC2821BEBCAE54DB4BB6238F0778F445CE42EEB8D38B1E0BF3
A92A96024DB24C> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd /HIBBAA+HelveticaNeueLTStd-Bd findfont ct_VMDictPut
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 205{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
570.44 44.139 mo
(2 )
[5.56 0 ]xsh
set_def_flat
35.5 263.999 mo
576.5 263.999 li
@
1 setflat
set_def_flat
576 47.749 mo
576 264.499 li
@
1 setflat
set_def_flat
36 47.749 mo
36 264.499 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B620B7A43CC51579C8D121C58BBE933C07AB94D996447A678F
4949EA32ACEE213F8A4439C799E8BE68DF3C6CD527046F55ABAEC874FA31DFA2
2A9238967C> |-
/D <1C60D8A8C9B6184AC728F715EA440622B8039708F04AF96E41DE1A58EA80
BC41BEB10657585AC4DC6E49D03D22B772630F66660AABD8DB8908344D75CE98
0D442B8743124A0CBA0CF6B5F1E69DB7> |-
/W <1C60D8A8C9B5D6EF151AEEAFF39173A33992E189C68C471D9950A53D4E59
D88E4166F1595027C135A9F6E3BEF48A28E61A0C53D489FF306FB6BCD2121835
132533F2FFF05AF370A99788CA9B3F84C5583038> |-
/a <1C60D8A8C9B7FD8410FD83276644B2A5A145ABED7C11EFF2618D3F4B35A6
1A6CC9DD931C491E897914BD93A78806892424EBDC0871149941A1A103D8C2B9
306C436DC23BF7418C427862B2763A715FA96A586BC34323634174300E5B2747
2816CBC153D6018FD893AF6FE2811879F16309C512519543903FF7AE6C37BE0F
F561F159DE53EEDA39B720F5D0B1649F0894AE1F9908DEBA16663BA738> |-
/c <1C60D8A8C9B7FD8410E1EFEAD08A079AEEBA5F2AA1068B5D1B248B7051B8
110EBF4C5B1493AD5ADEA84C25CAD930238BD3AC0F2262A93D2A55ABFB97680D
A126E4F186E18DD983AA769D8C6D1D9BAD339A7B8E1EE02D0FD2> |-
/d <1C60D8A8C9B7D8BE6A378724B759608062B4376DD8C2B27C37AE3D584C98
1DEBB72D38A97CE09220DD22D4BD95D5C7A13939943248357E93C5DB232B25EA
170BBBE531B90D44E7E77F37AB35E1BA9174C74D0C453DE5A048F665FDB3EFBA
06E4D83512EE55C7995E8D746C43686B2EB890C02D2DE5B4F650E124EF8493A7> |-
/e <1C60D8A8C9B7FD8410E1EFE59764D0AC9E879756152A1DD4802F5562912C
BF475362BD26F5B8652E7F5234AC8A293F4976FDE356CD1F67B94D390DA42D68
63927587611E87759056EEF34E9C0464162DB6A2B6A4CFC070FCD6E465C68095
EBA999FEFA> |-
/h <1C60D8A8C9B7CA647DE1C48038F5C1DA9591E24E59C58DD902E05BAB0AE9
80AF02104267E28BF7BBDB7462497B590F1BE94017F5BE1A33436ED7849F8533
591CEAA0458B7EBAD2FF6BD5B342F503116A> |-
/i <1C60D8A8C9B868F3ECECA4B25ECB91DCC989E8B91A8521428F7B060BDE6A
CB4AF79EB6B4BF466FA2E051CC0ACB134CF5A031D93E> |-
/j <1C60D8A8C9B854D0F827390C6146F10018D9BDD7D037014085EFD563F31D
D8B270A09B664AF62A90D47759344EE539DB605210B9F20700245A8AE72831C4
0A40341FDAFC4A08CB579F5FA1C65735F971BB> |-
/k <1C60D8A8C9B7FD84CD08F2937763F9E9719DC6BB9BA5DD9C68540AA0D86F
EF92F3A840D36B3BD9E2E05204C837DDDDF81301DC714EA9995BDC2A7DA84F19
A6C96B76DB28> |-
/m <1C60D8A8C9B58C3B2BFC243B852BA8B3174E2AB78F4DEB9BE317BE008E43
29A8032BCE4C204FF69C6E6F454C3856D26592D64E1E5D821C77DDD2B7FC06E6
B8233D66B63E1EA4DF5098744E29A54BE883ACB61F1A0FD8C989ECF30FD338C4
2CCD806093D79789BBE826456C39708194E6084CB869673F118BA6C87B0B40D7
34EBED5C23D2B70F> |-
/n <1C60D8A8C9B7CA647DE1C48038F5C1DAADDE07D80BB85FFF26033090E1E7
A49EB8196C9CD89C3274D2A79E2B15092AA1EBAEC7B164076DD5B285C88BDEA9
D2E0D43834ED95BE83B4E099FB9731787C4ABDF2B70DA1A6FF60F09FB6F761> |-
/o <1C60D8A8C9B7D8BE9CC7CDFCDBD8490BBD923B76E31CAF311C220AC2D63B
3AAA206FE895019E9EED8463BA7DE21064C063A878151F26C5E7BE883CF15C84
DEE66F706A44C82F703603DF963C3CB4866F976872F39AA2> |-
/r <1C60D8A8C9B7361F55E947F9D093B9517C27B9EF65BDB71CA8C1A8AA2AE7
0F17E5A2B765431F4498C8D35EC59177A332D58E3DD0C38307B7D6F7E8C0E9C4
E750D9A965F222BC3558D63EF0C8ABC7CC7D500E112FFFC7D0C1520D9C0518DE
B37DDB3DB02D7E290083A9196DE92698E1D92ADDC75F161776C0> |-
/s <1C60D8A8C9B7825658D68635CD4D00789EA325E4C2629FA3CA1494A62394
9831EB8676A56B0A10C758F7C7FD43F01EAC5A2DB0FE26D19D8DA3248E7042E9
A965A0C45BB428CBEBB3CC16477F8D234C2E5DA7F2E92C566F1BAF57545CC86E
D09FC507687FE644F5D98AD4CE248576BB1CDE3DB9410139991C> |-
/t <1C60D8A8C9B80A3FF00F87B10EEDA4C3E970DF679E1D082F67BAF82A4E54
69F93D34ACB1C5BF554E5B1092198D2B741E95F833764B436467EB3E914295F5
09D2DA26FC8F4B8E45FE1EF79A8FDB20> |-
/u <1C60D8A8C9B7CA64A027E3950C0376940960940AC4DF6E8A8A45CDACBD71
251D213F826FE738B4A8CB9047DFE8C5B9176AF41ED76B58B780F86B35C554D5
86EBBD3A194C1383769ACE9D19EC0B3C46562E8E2B6AB6E76095279C13ED150C
E0C0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 65 /A put
dup 68 /D put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 14{/.notdef}rp /A 2{/.notdef}rp /D 
18{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e 
2{/.notdef}rp /h /i /j /k /.notdef /m /n 
/o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
209.892 58.139 mo
(Deductions and Adjustments Worksheet)
[7.40997 5.74005 6.10992 5.93002 5.74005 3.52005 2.57996 6.10992 5.93002 5.37003 2.78 5.74005 
5.93002 6.10992 2.78 6.84998 6.10992 2.78 5.93002 5.37003 3.52005 9.06006 5.74005 5.93002 
3.52005 5.37003 2.78 9.44 6.10992 3.89008 5.74005 5.37003 5.93002 5.74005 5.74005 0 
]xsh
set_def_flat
35.75 60.001 mo
576.25 60.001 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D088EA530B20E3B0DEE3CA00DEF27483AD4E92322
9DB> |-
/one <1C60D8A8C9B7EF327C10274A04E5FCB2D9895617BC7F34D9E114D9FCD9
D31908F21A140D13E77FA0CC46276F81D2C850A798D540> |-
/N <1C60D8A8C9B6184AECC26C51215199BB99023F3D7D4A172ED01B7B8B7B36
300294556101613158F5EA09C4A48339F2AB4D70B72F9EB7B2E16B4ACD0E316E
BA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 46 /period put
dup 49 /one put
dup 78 /N put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two 14{/.notdef}rp 
/A 2{/.notdef}rp /D 9{/.notdef}rp /N 8{/.notdef}rp /W 9{/.notdef}rp 
/a /.notdef /c /d /e 2{/.notdef}rp /h /i 
/j /k /.notdef /m /n /o 2{/.notdef}rp /r 
/s /t /u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
41 69.569 mo
(Note. )
[6.29848 5.19344 2.99204 4.87904 2.363 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/percent <1C60D8A8C9B5EE31851049BF0BB9A0DFA2628895F342086139693E
89967D139C0FA85159A682543AECFDF0AD72B359730851EE52497B940978FA94
7E87346FB2305063F3999D13AD874282DFC9CEFE61C28C2894D9F6B015C1D171
19255F3617B445D17DF419264B14604DDC94760BA4C7344753EF9E67B71976B9
66F0E47CA940478F520F1AC18578F8DF6ACAD0F7BB887E229721A6B72DDC737A
8102816415464287C358D106C102178BE7ACBAF1376C7782CAAEC8EECD55FAC7
63E45572FDA4726E31847CE9D1813835178059978F9FE731BCFC66591CC1> |-
/comma <1C60D8A8C9B854D088EA7EB6675C5EA96A8A91573407E6DCF13FBB96
B02EF3507E2B385EAEB354BFDC197F> |-
/period <1C60D8A8C9B854D088EA7EB6675C5EA96A8AA06A11CFB5862004787
8C4> |-
/five <1C60D8A8C9B7EF32A30FDF4EAEE3CEFCE7253DB6D0CE95F7FD971731C
8896CC7C6A3E31C0472E216681719B0CA5E217D5CE08BE67FCBDAFBB3E804F65
949D5FD0135DA3A3EDA11C134951DECEF875C8A9DDC28CF9555632507FDBED95
769773AE317069BB15DF166FB71E50BE96C1A> |-
/seven <1C60D8A8C9B7EF327C10274AA393C495FBA7DD6CA9C26879A8C99113
3A431CAEF35AFDE90AE46DF180C24B1B0F7782CFC6B9416F6C44E7EAE057FF19> |-
/E <1C60D8A8C9B7D8BE6A0467BB33B79637C4DC4ECCF8EB661C426DFBB3E2A6
642D5225E7573C948A918EDA893C4A7BFAB89B89C7578231FE3C> |-
/T <1C60D8A8C9B7FD84CD08F29211E1CE435942E6F7E1D0885BDC50D0FDB2F5
1B8F7DF6955631DCE1888CDE> |-
/U <1C60D8A8C9B6079FEF8760F980080AB19BF81187DA4561E6D60C3DD3289A
683B1CF9958FA20D60E0BD7BFA0F7894018155A0ED47DA64CDC551FBFEB212C2
7851CA161A030D233B> |-
/b <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1D8873ADC85A667E2EB557EA
79394AAF7B956A9747ABE804ECE3B9072797BEE49B46E87994AAA4027D041AE4
4EBF36291B3DFE5EC17034768573410428CE4CCD9FB3C03208D54E0909EA9ABF
D500D237F2BEDB7B848215C6049C1DAD013579B1E3124A1BA033DD833AC31172
A54A776B570E4400B8E9C7615D581E567874C544> |-
/c <1C60D8A8C9B782565A0F44FF3FF79D86A76E314A50283B7BF36B7D7827B1
E40B28772D8C396314E5C7227F8B86505F9D1F1D0D048E01A343E0AFA701795B
509767B97C38DF595755267C314BBE63A0876B669F949368EF> |-
/d <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1DE92E8F99455DE774011C7C
8026D7870A16B0504916579F11B86525DE399B8C2E127DB7D84660C489FBAFC2
DFB0B10A8F81850C633230D8A7844E5ABFF78A3A4ADAA6077D7F04FF120B2E57
3AF0E95F4E436FA30A1085EC023458432330913B43947565E7CC83B65DBFBF24
BDDE43578CA23C03E3714F4C37C5FB02788FDF96> |-
/f <1C60D8A8C9B8425736C8FDF0CEB5D9BE550FA9AD58C956A28E666EDBEB89
152755BF252321D927292D3909BB94247F244D06D4AF60DDC22B1565F7F3092F
DDDA80A08DEAD1A8CD98E24B92B2C610569EBE022C4E43514D6416E2C489C9F6
E52F785F3187C73A8285E6> |-
/h <1C60D8A8C9B7EF327C10274A04C52E1BAEF569DB515D2F1C46FA94F3823B
63DF43C80E4A27869D57C25F45912780382F20F8954A1409FF26187780CCAF4A
25B5415DC44590E5B774D5E2> |-
/i <1C60D8A8C9B88C082599D5E950391FCAB66B5B2D29D35D1A155318D65C84
E2D11A9D4B383DBB8DC386425ABD> |-
/j <1C60D8A8C9B88C087EE9D200C61E879DE16CACCECB671B6D00FDBC0F539D
BAC132DC2D8688E22B8B4EF8CF460BBB022BD4AB2528A69445B10010A07E8FD7
D702CC6E3859EEBF72> |-
/k <1C60D8A8C9B7B4A1684D51778B5AC2DDA0B4C9193BEBD0B5656EE07B247C
10AB0752D2160DAC67C41E0547FC6A8354319E3D190614FFEE6A9ED5184262E1
6B48FE> |-
/l <1C60D8A8C9B88C082599D5E8A418F1DC641F88208BE042DF9BCA86A0D7> |-
/n <1C60D8A8C9B7EF327C10274A04C52E29DA6D62ED663BE08D4147C757D157
2AAEC36FBDA205EF77A6BF17B1378D1B59FE8440ADB18679F2047B393BE59039
38CF15B254B22F3703B85AF9951491059C09CDC36AD28B> |-
/p <1C60D8A8C9B7CA642635ED2640AFBBBDBA4375533E709967C6E296806A7C
635D92119D43C6165458C32D45B1674504E28CEEB57403E5FC3338F12154F663
9BBEB3ABAA0FBF5F5BAC570B541C114FD05865579917B7F577DD134557FE6510
DFABED396AE948813797B5347214849467A4A576FC982FC15279789B572D5232> |-
/q <1C60D8A8C9B7CA642635ED2640AFBBBDBA5F09C4994548DD22A46FBAD385
C0E63A77AB1BC0F330E967F00E19AE4E3D67C007C22544D0951AB2C76CBC6B8F
E1760E1E329AA2BA6F1ADAEFF62257AEB847343B3C846CE246814EF5AA57B55F
76140BB090BC773050175934AF0C8AC770FBA4604CA7D7583D21907849946018> |-
/s <1C60D8A8C9B7A73D31AAF751C5A5B130CD0602349DE09AC3B860DCD5BB18
11067B12FB402FFC4709FFC64DD39C776EEB5C7479236BF2DE22B00ABAECEE6D
35A47B13712DE5CB3DAC8D23D074B1070B78A3DBD3750B25335426F01A449656
DED1708AF81CDD35AF3928DF308D46C2691203B3FF9CFC1E0356C6919EEBF134
5D64C5A81341C58AC7CC8E5F0C4783EA3643> |-
/t <1C60D8A8C9B831A9FFE9D7A47E1DCC5E5C070901296475C163353217BEFB
B4E6ABF1EA9649F0E58A9C73F33EAD0E62C588043313C609E3339C82B94F6E79
FE97> |-
/u <1C60D8A8C9B7EF32A30FDF4E2BE49BA4832F6985DE18054E8E86E4208CDC
E1F47B7BD726AD81F7F51E58E5548808D32C107458071DFC8F6BA26CE9FD4F10
CB30FA991486AE90159DD25F6CEEDC5DA493F8910807711CB1D3> |-
/w <1C60D8A8C9B6EB66AF9822D87D440E94538CD16812303E41CAE2BA0183A7
AE4A8F85C50931035B776CE9F9DFA35998C95A26071436FFCF63A1764BDF5CD0
E70643A3BA1551F587C3AEF45C9304D05CFA90A69173AD4F11> |-
/x <1C60D8A8C9B7B5772438E75F34900C948B0E861DDAB2E4A5061170B13319
E952D9C628F38076E53551006609BF145BDD5ED851B65867EDF93204B0BE6395
262325F8A0D91120072DB3C4731A3C38C4617A610874340FBB2CEC> |-
/y <1C60D8A8C9B7A73DB58F19AA62180711A3724FAC71C25BC7E17CEACB417B
686DB19C3144A2B6A6DB5B5069D19ABFDA9E84E99A7BD0DAD9457EADE78D8103
4EC7A09C029AFE93D2533FF3CFFADBA603811CAD163551E275BF1DB6B53806CD
85DAD72989322D558AA86C986245CE> |-
/z <1C60D8A8C9B75BE5656FDF07D83A5FDE8B4B1DDC95280943DF78465A42AF
DC5A20EF535393B42BF6387FCC1C5198E213231858> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 37 /percent put
dup 44 /comma put
dup 46 /period put
dup 53 /five put
dup 55 /seven put
dup 69 /E put
dup 84 /T put
dup 85 /U put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen /period /.notdef /zero /one /two /.notdef 
/four /five /.notdef /seven 13{/.notdef}rp /E /F 9{/.notdef}rp 
/P 3{/.notdef}rp /T /U /.notdef /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /.notdef /w /x /y 
/z 133{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
65.089 69.569 mo
(Use this worksheet )
[6.137 4.25 4.56452 2.363 2.67752 4.726 1.887 4.25 2.363 6.44296 4.87904 2.83044 
4.41148 4.25 4.726 4.56451 4.56453 2.67752 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeueLTStd-It Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+HelveticaNeueLTStd-It def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle -12 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 121 /y put
def
/FontBBox {-166 -214 1106 957} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 529] def
/OtherBlues [273 280 380 387 -210 -198] def
/StdHW [75] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/l <1C60D8A8C9B88C082599D5E8A418F18A92C1459DFFC7DC29D99F21BE9B16
FA1C> |-
/n <1C60D8A8C9B7EF327C10274A04C52E1A12FD857CBFE3692A5A0514C6668C
82AC24E3E6159E4941084D6F1E3B5885BA4CB7BF2FE95361494CE9FB46F58219
9E45F5CE73121CA6DD39B9EC9F1B504216B109BDD7328C113A7A06D444459421
74B6CB025DF9295D1A95> |-
/o <1C60D8A8C9B7FD841262BACCF9BE9C8C5EAEEBA180B495E013C0B076B221
17AD0450100C500C8873CD145F29E441E81B726B86A7448234E851457E1C45A9
E04B21F0DCDADB89A5BB1E3DB3D7ADE2B2DBE921C55CDEE959> |-
/y <1C60D8A8C9B75A17C36EA6B0CD94EE289765B1344420194032F20F96884E
C7BB377F2C1174A9E82843D52FD206F6F61EABC5AFB67923788397FCD5FF6A0E
BF037604165A207053AE1C079D67BB65A5DE0907897B5FE1834BB3CE80AA78B8
C9387009AD44E91EC1879FAA7CA572F7C9118B2F173733> |-
/.notdef <1C60D8A8C9B7E02AD62BDC6BCECA18F239E62C59778385A359AC92
733912297A61C9605BB09769B36D23A6D6FC9E5E7366D520407F058325241FDD
E540502D5F6A28C3C455C6B77951991C7C0E75B79CDF06B688ADE1D1> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRKZ+HelveticaNeueLTStd-It /PBAAAA+HelveticaNeueLTStd-It findfont ct_VMDictPut
/PZSRKZ+HelveticaNeueLTStd-It*1 
[32{/.notdef}rp /space 75{/.notdef}rp /l /.notdef /n /o 9{/.notdef}rp 
/y 134{/.notdef}rp]
PZSRKZ+HelveticaNeueLTStd-It nf
PZSRKZ+HelveticaNeueLTStd-It*1 [8.5 0 0 -8.5 0 0 ]msf
140.017 69.569 mo
(only )
[4.87904 4.726 1.88699 4.08853 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
157.96 69.569 mo
(if you plan to itemize deductions or claim certain credits or adjustments to income.)
[1.88699 2.51605 2.36301 4.25 4.87903 4.72601 2.36299 5.04051 1.88701 4.56453 4.72598 2.36301 
2.67752 4.87904 2.36299 1.88701 2.67752 4.56453 7.25046 1.88701 4.07997 4.56451 2.36301 5.04051 
4.56453 5.04051 4.726 4.56451 2.67752 1.88699 4.87906 4.72598 4.25 2.36301 4.87906 2.83044 
2.36298 4.56451 1.88702 4.56451 1.88699 7.25049 2.36301 4.56451 4.56451 2.83044 2.67752 4.56451 
1.88699 4.72601 2.36298 4.56454 2.83041 4.56454 5.0405 1.88702 2.67752 4.25 2.36301 4.87903 
2.83044 2.36298 4.56454 5.0405 1.88702 4.72598 4.25 2.67752 7.25049 4.56451 4.72601 2.67749 
4.25 2.36301 2.67752 4.87906 2.36301 1.88699 4.72598 4.56451 4.87906 7.25046 4.56454 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.675 86.8156 mo
(1)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.8 87.0621 mo
(Enter an estimate of your 2011 itemized deductions. These include qualifying home mortgage interest, )
[5.19344 4.726 2.67752 4.56452 2.83044 3.587 4.56452 4.726 3.58701 4.56451 4.25 2.67752 
1.88701 7.25047 4.56451 2.67752 4.56451 3.58701 4.87906 2.51604 3.58699 4.25 4.87906 4.72598 
2.83044 3.58701 4.72598 4.72601 4.72598 4.72601 3.58699 1.88701 2.67752 4.56451 7.25047 1.88701 
4.07996 4.56453 5.04051 3.58699 5.04053 4.56451 5.04053 4.726 4.56451 2.67752 1.88701 4.87904 
4.72601 4.25 2.36298 3.58698 4.87906 4.72598 4.56454 4.25 4.56451 3.58701 1.88699 4.72598 
4.56451 1.88702 4.72601 5.04053 4.56451 3.58698 5.04053 4.72595 4.56451 1.88702 1.88702 2.51605 
4.25 1.88696 4.72601 4.87903 3.58704 4.72595 4.87909 7.25043 4.56458 3.58698 7.25049 4.87903 
2.83044 2.67749 4.87909 4.56451 4.87903 4.56451 3.58704 1.88696 4.72601 2.67755 4.56451 2.83044 
4.56451 4.25 2.67749 2.36304 0 ]xsh
64.834 96.0636 mo
(charitable contributions, state and local taxes, medical expenses in excess of 7.5% of your income, and )
[4.56452 4.726 4.56452 2.83044 1.887 2.67752 4.56452 5.04052 1.887 4.56452 2.958 4.56452 
4.87904 4.726 2.67752 2.83044 1.887 5.04053 4.72598 2.67752 1.88701 4.87904 4.726 4.25 
2.36299 2.95801 4.25 2.67752 4.56451 2.67752 4.56451 2.95801 4.56451 4.726 5.04053 2.95799 
1.88701 4.87903 4.56453 4.56453 1.88699 2.95799 2.67752 4.56453 4.40305 4.56451 4.25 2.36301 
2.95799 7.25047 4.5645 5.04053 1.88702 4.56451 4.56451 1.88702 2.95798 4.56454 4.40302 5.04053 
4.56451 4.72601 4.25 4.56451 4.25 2.95801 1.88699 4.72598 2.95801 4.56451 4.40308 4.56451 
4.56451 4.25 4.25 2.95801 4.87903 2.51605 2.95801 4.72595 2.36304 4.72601 8.5 2.95795 
4.87909 2.51599 2.95801 4.25 4.87909 4.72595 2.83044 2.95801 1.88702 4.72595 4.56451 4.87909 
7.25043 4.56458 2.36298 2.95801 4.56451 4.72601 5.04053 0 ]xsh
64.783 105.065 mo
(miscellaneous deductions .........................)
[7.25047 1.887 4.25 4.56452 4.56452 1.887 1.887 4.56452 4.726 4.56452 4.87904 4.726 
4.25 2.363 5.04052 4.56453 5.04051 4.726 4.56451 2.67752 1.88701 4.87904 4.726 4.25 
4.47949 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.904 105.567 mo
(1)sh
set_def_flat
.5 lw
503.75 108 mo
569.05 108 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/dollar <1C60D8A8C9B7EF32532053E28563490A20F0C013F88790C5C9761F2
0685ED1B0F48EE7980E5AC318F1778DB77685FBBDB0B189D1CE1C107D5277523
F0300D3ABF50486BB3A62BAC5912E9A228EBB39D4E23E02C1EE3FCA90008565E
887044BDB5DBABE7EF9FE1066EF7411FD686DC5012C24894264B62A2A14066C4
EDC939542794249C05D3F05C0EC01A71DC9D4EA72958537047028F92C40DCE0E
0F5C1F367DA5915CC5013B2408A63CBF89BF5C8F830270533CAF2B0C8FC816A4
92FB5F6F939D3D493D889BC6E3BB089AF308B55D9B69A64EBA48FE01D4973D68
35C58D9> |-
/six <1C60D8A8C9B7EF32A30FDF4EA3805875E345D52FA706F947AA46EA5A87
C2B35040F95850B25F58A4D5B1EEC949FE33F8C6AA2A82E7AE352A6971CB9DE7
53EF69C7248D8DC27D5E18215C5F9AB1AF39905B1358DA3F5BB67F80EF69C02A
1FE0FD1F11EF08D6EB31563C5576BFBCE78BA693F43C19A64B55634976F8642C
4600ED9416D7FD82DF393196EC5797D89AE4F75F80CF700CEB04F56814DCF47B
E153C9DFE6CCE4CAB27726096F255E49309A5E57CBEE176F2659A7E0> |-
/eight <1C60D8A8C9B7EF32A30FDF41D2B3BC5AB460CE6DF996E6FDBE8358F1
DFDF11DF90B0E3044B1A5A62A638CD2F3D2826314C7260E0C73251E2DC88A1D4
BF9CB628328BB35E1DEA45EFB4D2F67080C8C1A1139D80F41865B30565B1D265
AEA9068B8F8352A2EBD26BDE848AAC61C96BFCDAE9F50EA2677117A6A3E060C8
C63C6C0B753FD688959BE9543F4FA621776BA7A996E194EBB37AA0B1FEB506AC
7A21CC787A002B6DD3A20A2ACBF45E7A53F84057247F8D75DC26B21531985F8E
11CEF62933C89CA2FC9A3E44ACEC5FD855FB45C3C28EC494FDB99B158A1064D6
EC6F6516381FE0A886908D0ADE7D387986> |-
/colon <1C60D8A8C9B854D088EA7EB6412D7C7D5124509928809EDD5ED7B208
0EC1FB14006899C81807B046263F705D1041162D24> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 36 /dollar put
dup 54 /six put
dup 56 /eight put
dup 58 /colon put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/.notdef /four /five /six /seven /eight /.notdef /colon 
10{/.notdef}rp /E /F 9{/.notdef}rp /P 3{/.notdef}rp /T /U 
/.notdef /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/.notdef /w /x /y /z 133{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 105.426 mo
($)sh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 129.567 mo
(2)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 129.567 mo
(Enter:)
[5.19344 4.726 2.67752 4.56452 2.83044 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+TimesLTStd-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+TimesLTStd-Roman def
/FontInfo 7 dict dup begin
/Notice (Copyright 1985, 1987, 1989, 1990, 1993, 1997, 1998, 1999, 2002 Adobe Systems Incorporated. All Rights Reserved. Times is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Roman) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/braceleft <1C60D8A8C9B75BE5157E200E19847916E1C21B8B531EA0C730F7
8879AD07805056291EF2647B624134CA08E147D2A3C99827F7790E2947B87468
05C26BD3153E5D967F8D8344FF26C48EC1382F04802DD3720DB93AC8CDD7B6BD
B78934CC25> |-
/braceright <1C60D8A8C9B75BE5157E200E19847916E1FEFA893472082F8E1
B50325B0F556CE2319A6C1A1196435C60FBC292FD21884A39E84F9D278F23867
8BA4C72BD0AC85196827B6CA267BF08676708CFE6EB0E43EE661BAAE39265170
2ACB1D993790D> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRLA+TimesLTStd-Roman /GFNBAA+TimesLTStd-Roman findfont ct_VMDictPut
/PZSRLA+TimesLTStd-Roman*1 
[123{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
PZSRLA+TimesLTStd-Roman nf
PZSRLA+TimesLTStd-Roman*1 [14.4 0 0 -33.6 0 0 ]msf
93.6 133.149 mo
({)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
108 117.568 mo
($11,600 if married filing jointly or qualifying widow\(er\))
[4.726 4.726 4.726 2.363 4.72601 4.72598 4.72601 2.36299 1.88701 2.51604 2.36299 7.25049 
4.56451 2.83044 2.83043 1.88701 4.56451 5.04053 2.36299 2.51604 1.88701 1.88701 1.88699 4.726 
4.87904 2.36301 1.88699 4.87904 1.88701 4.72598 2.67752 1.88701 4.25 2.36299 4.87906 2.83043 
2.36299 5.04053 4.726 4.56453 1.88699 1.88699 2.51605 4.25 1.88699 4.72601 4.87903 2.36301 
6.44296 1.88699 5.04053 4.87903 6.44299 2.20151 4.56451 2.83044 0 ]xsh
108 129.57 mo
($8,500 if head of household                                               ...........)
[4.726 4.726 2.363 4.726 4.72601 4.72598 2.36301 1.88699 2.51605 2.36301 4.72598 4.56453 
4.56453 5.04051 2.36299 4.87906 2.51604 2.36299 4.72601 4.87903 4.72601 4.25 4.56451 4.726 
4.87904 1.88699 5.04053 2.36301 2.36299 2.36299 2.36301 2.36301 2.36299 2.36299 2.36301 2.36301 
2.36299 2.36299 2.36301 2.36301 2.36299 2.36299 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 
2.36301 2.36298 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 2.36301 2.36298 2.36301 2.36301 
2.36298 2.36301 2.36301 2.36301 2.36301 2.36298 2.36301 2.36301 2.36298 2.36301 2.36301 2.36301 
2.36301 13.4895 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
0 ]xsh
108.025 141.572 mo
($5,800 if single or married filing separately)
[4.726 4.726 2.363 4.726 4.72599 4.72601 2.36299 1.88701 2.51604 2.36299 4.25 1.88701 
4.726 4.87904 1.88701 4.56451 2.36301 4.87903 2.83044 2.36301 7.25046 4.56453 2.83043 2.83044 
1.88699 4.56453 5.04051 2.36301 2.51605 1.88699 1.88699 1.88701 4.726 4.87904 2.36299 4.25 
4.56453 5.04053 4.56451 2.83044 4.56451 2.67754 4.56451 1.88699 0 ]xsh
PZSRLA+TimesLTStd-Roman*1 [14.4 0 0 -33.6 0 0 ]msf
316.8 133.149 mo
(})sh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.874 129.567 mo
(2)sh
set_def_flat
503.75 131.998 mo
569.05 131.998 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B869C135694496FC80660E2CA716B2B3027EC53A1ADA319C> |-
/quotedblleft <1C60D8A8C9B71131DFA7C580178285AA054A5A9B8CEC3BEC6
BDFA738275248C2181003880B2704A816DBE9AA1307C1AC7B893389DAB8C3226
8A89622E224CA23F5CF48949A44A9BAF54813CE5170F9> |-
/quotedblright <1C60D8A8C9B71131DFA78FF9EDD7DC176A59409FFBC35DC2
E83E729F5A0B357DD5E899B9FD9197D518CB4A3C9A673A5082793C3F482287C7
57DF8F1F4A00CB86CE503248A5A6DD92A6203CE876A437> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 73 /I put
dup 170 /quotedblleft put
dup 186 /quotedblright put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/.notdef /four /five /six /seven /eight /.notdef /colon 
10{/.notdef}rp /E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp 
/T /U /.notdef /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /.notdef /w /x /y /z 47{/.notdef}rp 
/quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 129.424 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A1CB48DEA511732BD6FFE1D4F60543CB0C044FA3
ADAD24E62F2164F6A0B9A9B93202DD96D9532FF1CFF13140A48E10B88EC6B175
BF7530781BE7E79FEDB4C4916101DC4BFD530021619A3DA4EC42F0B87F77DAE8
B0B6779E8ABFAA43C6F0E02FD325B778EC383BB7A03835EB54BA23F3897EF27B
42B8DDA5F7B609EF200E61F97FBB623A51BD7429F80BC5FD5DCD80EFDD9E3634
220FE300E6C11C959AFDDF140D56FB792814568A313E3B4A7513136DDD6095F6
ACF2D9B24725D0A99CE841A4D8> |-
/S <1C60D8A8C9B67CE74CEE4AFD25D4788E9CBAD00225F12162A3AB6572194D
45F6518F15C74ADA18D34F3C82D872738297D4D294A273D5D8C38CF4B00F49AC
B2D22BB1279D9B5DA873A47661F4824E1BDE3F68BE4F9DABEE20120AE1F8F215
18B21ABE1F88C68D7C82D11687C7FFD1CF55DD96A11B07828AECC574C7AC1C26
37EB51B0911810E8D37515D320E762438CA96FCB7C251C4327AE1992E43FFD2B
3AD28C33> |-
/b <1C60D8A8C9B7D8BE6A378724B759608062B4370718AA5B42BACE0E914BF3
33138BBECE610A89E1B39047BA4D1237632E4FAF357D89158FE235F86D884574
6D11CC371CA56AB6E8C8235CD36888719FA1C26503AE0C04CC61A9A2E0ABC49D
2088BCB61EBC04F9AFF05BB1657595529D54D313EDAAD335ED521F1B52> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 51 /three put
dup 83 /S put
dup 98 /b put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
13{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N 4{/.notdef}rp /S 
3{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
2{/.notdef}rp /h /i /j /k /.notdef /m /n 
/o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 153.568 mo
(3)sh
64.799 153.568 mo
(Subtract )
[5.51652 5.04052 5.19344 2.99204 3.30656 4.87904 4.87904 2.99204 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
101.961 153.568 mo
(line 2 from line 1. If zero or less, enter \252-0-\272 ................)
[1.887 1.887 4.726 4.56452 2.363 4.726 2.363 2.51604 2.83044 4.87904 7.25047 2.36299 
1.88701 1.88701 4.72598 4.56453 2.36299 4.72601 2.36299 2.36299 2.20154 2.51604 2.36299 4.07997 
4.56453 2.83043 4.87904 2.36301 4.87903 2.83044 2.36301 1.88699 4.56451 4.25 4.25 2.36301 
2.36301 4.56451 4.72601 2.67752 4.56451 2.83044 2.36298 3.62097 3.30655 4.72601 3.30655 3.62097 
10.948 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.903 153.568 mo
(3)sh
set_def_flat
503.75 155.999 mo
569.05 155.999 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A30FDF41B3B09EB0EF99DD55F762CE5B83E660968
DC60A349D9B2A64E5D03F852490B6351C5F496520C6816229AFAA4E2BC692A83
294CA841C96AFB7B831E20CF7FD1601F69E5D7C5572EEF8AA005A3149742587A
48C3917B087C2BA72D0996D50C4006DA06E834569572C873ABE40A6555114CFB
40C20F859160A827D8F8CA3E2FC460F88ED7A62A86B73B97B00D5159B0D69FEF
C8115C70B7D96701323F864C071F8846D9E262CE2C8284C5621C6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/.notdef /four /five /six /seven /eight /nine /colon 
10{/.notdef}rp /E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp 
/T /U /.notdef /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /.notdef /w /x /y /z 47{/.notdef}rp 
/quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 153.425 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF327C10274560C9BEBE172155A7D278E733811D9A19B
96BF6E498600B139262EF956B7082FF89E4FE9B1C1F2DD7DB2DF011E97EFD1F8
19FB1006365841372EBFF2585C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
/four 12{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N 4{/.notdef}rp 
/S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d 
/e 2{/.notdef}rp /h /i /j /k /.notdef /m 
/n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 165.567 mo
(4)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.16 0 0 -8.5 0 0 ]msf
64.8 165.567 mo
(Enter an estimate of your 2011 adjustments to income and any additional standard deduction \(see Pub. 919\) )
[4.98569 4.53696 2.57042 4.38194 2.71722 2.26848 4.38194 4.53696 2.26848 4.38194 4.08 2.57042 
1.81152 6.96045 4.38194 2.57042 4.38194 2.26848 4.68388 2.41541 2.26848 4.08 4.68387 4.53696 
2.71722 2.26849 4.53696 4.53696 4.53696 4.53696 2.26848 4.38194 4.8389 1.81152 4.53696 4.08 
2.57042 6.96045 4.38194 4.53696 2.57042 4.08 2.26848 2.57042 4.68388 2.26848 1.81152 4.53696 
4.38193 4.68388 6.96048 4.38193 2.26846 4.38196 4.53696 4.8389 2.26849 4.38193 4.53696 4.07999 
2.26849 4.38193 4.8389 4.8389 1.81152 2.57043 1.81152 4.68387 4.53696 4.38196 1.81152 2.26843 
4.08002 2.57043 4.38196 4.53693 4.83893 4.3819 2.71722 4.83893 2.26849 4.83887 4.38196 4.83887 
4.53699 4.38196 2.57037 1.81152 4.6839 4.53699 2.26843 2.11346 4.08002 4.38196 4.3819 2.26849 
5.28766 4.53693 4.83893 2.26849 2.26843 4.53699 4.53693 4.53699 2.10529 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.874 165.567 mo
(4)sh
set_def_flat
503.75 167.998 mo
569.05 167.998 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A30FDF41D2AA7A047EF89D7DB5335B3C57271500
04C6AC573F9686D737551D1298FE18C0CC29FB2681D0F650C17F208183791643
BE6EBC296565839A8FBFCF9047A76E7803C3ED6C8C2E878C38B3DB4E333C1DC0
836A2B8AA4A48EF29CC8A728F48FE629709D551775D4B2F61E8D43D359FEB32B
F8084EB6ECD08EBDF2028764357318CAA256B69A8AC61A018902EAC5E540> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
10{/.notdef}rp /E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp 
/T /U /.notdef /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /.notdef /w /x /y /z 47{/.notdef}rp 
/quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 165.424 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A1CB48DEAACDCE1E5E912AFA02E3D131937ECEE40
F6B86A8E08F7B68783F01F5ABFB17625300FD4DF0E5FFCC6C57DBBFD22A1C348
B58600BE82DF50DC9F3741ACF0CC8CB768958C774B7AD44AE3E9A56A8A6C3930
4BDF34065640DF71D190F6290E4FB42EC12772DCF8297> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
/four /five 11{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N 
4{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e 2{/.notdef}rp /h /i /j /k /.notdef 
/m /n /o 2{/.notdef}rp /r /s /t /u 
138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 177.569 mo
(5)sh
64.799 177.374 mo
(Add )
[5.82248 5.19344 5.19344 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
84.7485 177.374 mo
(lines 3 and 4 and enter the total. \(Include any amount for credits from the )
[1.887 1.887 4.726 4.56452 4.25 3.7315 4.726 3.74 4.56452 4.726 5.04052 3.74001 
4.726 3.73999 4.56453 4.726 5.04053 3.73999 4.56451 4.72601 2.67752 4.56451 2.83044 3.73999 
2.67752 4.72598 4.56453 3.74001 2.67752 4.87903 2.67752 4.56453 1.88701 2.36301 3.73999 2.20151 
2.20154 4.72598 4.56451 1.88702 4.72598 5.04053 4.56451 3.73151 4.56451 4.72598 4.25 3.73151 
4.56451 7.25049 4.87903 4.72601 4.72598 2.67752 3.74002 2.51602 4.87906 2.83044 3.73148 4.56451 
2.83044 4.56451 5.04053 1.88699 2.67752 4.25003 3.73148 2.51605 2.83044 4.87906 7.25046 3.73999 
2.67752 4.72601 4.56451 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeueLTStd-It AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKZ+HelveticaNeueLTStd-It dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B7361F0233AF69119A07DC797DD2BFE372E102E07C665
66E83F6> |-
/zero <1C60D8A8C9B7EF32A30FDF4F8ED4A604C7F12411C789C21F9E7AAFC1A
6F826ABB55F79C647BD2AF4FC1F1F663FFCC88E4D50ACB04C8E50E0CDF2D1652
7CD3A1CB155E1C9155857BBEDC96FF921FAF8D61C07327149FC3A83312B> |-
/one <1C60D8A8C9B7EF327C10274AC57CBA7560242AE007D6E38E728379B0B2
E30BCD0499ACE0A4BFD2306CE137E355FA736AEE7327FD7C> |-
/two <1C60D8A8C9B7EF32574661BA14F3CD6987DA9C363DD9A9B155FA18313C
DFE4C930B2F66689E3805EE40CE2F44F399F80969099C18BD0272980DA70B812
DFD56667CEFC9B63F737608E3968F4758D0389BE0BF025C385E2F96823F3FA8C
AD87239033F74F> |-
/four <1C60D8A8C9B7EF327C1027456C3D11214612E460AECC62E6FD3012048
152E6C3959A1D2165D1A356C7B7D55DF6721BEED5616C4C8A5819E05E926BBDF
CA25A6418D5BF77FCA9FA> |-
/A <1C60D8A8C9B64EDFA3F30AE403890171B7903547CB9B72FC08683B355CAE
5D4B5DB9A4D40396FA1291F19C3A202A9DF201F66DBB2EE6C4F5BBC03B7EAA44
FF2EC04AFAC1> |-
/C <1C60D8A8C9B6079FEF8760F9C1321FA3E0DB975079AABBC8C97723D4E7AF
FA73B05279D073D659DEBFC34DEEBDC05C93C9D5281FA21051B28CBEBE94C24F
94DF717B4C8DFC3AD24499CBBAD86E3CCE48369FC5E7A7601D394B20088F44E8
C847> |-
/F <1C60D8A8C9B7FD84CD08F29CEBD0F7D55E27F814D19BBBC12A028893E4A7
1F3512BA444CF4D2DFC4A868314136886FAFF6467C68976AB7> |-
/W <1C60D8A8C9B5A05A5EEA8D4BA03032769CE31A6CB61776C004A9FD6D29D1
33AC0939ABB1B19DB3D56BA27CBA76EDF6D6907C5223DB93BC5CDD3BDF0BAB4B
3B1922570F6D744DCBBB6A2D05E591EE87325463F06D4975ED8185FFEAC64B94
572D4D6CB440E4> |-
/a <1C60D8A8C9B7B4A1B739D425359B63DD4B365A894D755BBF49757D8E11D6
81A3F75876692858B1A4F1A170D21AF83CC07F531B3E06F7A64E7203D21C3A2A
B679035A1ADA02C3BDEF86502AF3EAF5C92C38799A47632179AD1FE1735BD62D
5C0FD116FC63DC31FC8A4020093D1CF57F1752E1C6C8620298007BBE6FFA2162
4937D0F4CE2C278763F3E3BAD907A4F8AD9F414BDE6D83C2B0DA760490933298
6D49CB120971B77B51B8EFC009CDE1> |-
/c <1C60D8A8C9B782565A0F44FF3FF79D894DA93149637D5B445348C0D8F058
B7D38FB71A7341DA9FE77003F5CA3132C8BA98787C14A3409D1A5493E45768F6
C9F05C6AFA27337EAA87E2ACFE4E9570AB07659170BC699C81602C> |-
/d <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1DDA52845A47BD09FBE3B943
9F06EB45DD3A17C775E411402A7B7D5D803D5C75258AB5E828836C0264B6B9E0
D3AD823BA6DCF085F81F0331A4A3B1046050997ECA36ECFAE027053590480D7D
4602BDB53E763EBA16A8274E478261E802B6888A7873F32164BC> |-
/e <1C60D8A8C9B782565A0F44F0302B83DEA18A9E7FF430F8D302B4CBD9EFCC
E86BFFD5690DAA688009EAFBB2D7871DBA85889B3F0E3C6DC670FF292389366D
282E3FC113C3E544AC85E2C146DFA9EC052CE6A398E6E2CC9565376E334FBBB7
2CE4E3B4A7BB42C3918523926693CBBB54> |-
/f <1C60D8A8C9B8425736C8FDF0CEB5D9BE550FA9E1517378C43F13258EB92F
733679B400A033E63201E4F345070D5B389FF5CD9C048442C1A94A0DD25337A1
38E63620356CD233DA92FCD7759E3B1FEB745B5346864F12452DE2208B06B20E
97652F424D956C52F4B21AE50CC62FBE3C39CE> |-
/g <1C60D8A8C9B7FD8496438F224D0E68AC88A9334DCB44929452952541651A
9C96F56D732B98AEACBE0B4AB3FA1F059AAE162B76BABA94E0F4327EE5ED19D4
A12F0808E5149D9EF6936B994CB083B154692336A213A2ED574878318324E779
982C2E9CC25BE4595F452704B092FC76FB323DC23FA00A45DCF9630F6D036ACC
214A390F06ED891563CD527AD6695528A8F35946DD78C2A072C6747D31DC4F16
2EFBB042D87A0C5F1880383572C6E53E2293CD724D8F7729E411AFDBEB> |-
/h <1C60D8A8C9B7EF327C10274A04C52E1BAEF569E81F04032083B2254F4EC2
E0FC152E9C131C27627A8E61501E4385A9EBCCD24C769586364EF0CAF83BC838
42D76096AB55CD0362EA6275E7A779A22EEECF2B653246E3F49781E0892B8AE4
186A33> |-
/i <1C60D8A8C9B88C082599D5E950391FCAB66B5B7B59EF90AE9E8921D08AC9
6B2E9D42B5BEF17145EFA07F08271486AEC74C> |-
/k <1C60D8A8C9B75A17982D11D3B9D5032CBDFC6C01D5903DEB60145BEF40B6
77255B3873C3BB793E4D2F6EA03E217BF972AF54FF92B5650807BBFB75A0C66D
21966365809D3B7BEF5806> |-
/m <1C60D8A8C9B6896805224995B0514B4D4AA61625D66A43E7BB68480CBB29
BA211C1F350C388B55A7833080E224CDF10D9B54B3A264082C7FA219F62CF136
30581D0AC0B42AB1E0B2BD67F9E28A20E1F0A56A97C391E58C89FFA75593F3BC
4667E630E33B9232B0AFF874B68286643D8814678A8BBB5775C0CA6DC2C61E1B
D152F57E489B022FB568A4A13A10BF451B6E3F88D17D1011F2395F63B1> |-
/r <1C60D8A8C9B81F2C6DADD0308D98396760186A86086F885B895AA30EF930
2F5EDC4042B16CCDA504C0B69AE56EDE25732C4EFCD9A73A315432EBEFD81786
1E16CC34F90CDC34BD6E712A352B42CECFE867B5FD834CCC48AF95F683C2C8DE
DC> |-
/s <1C60D8A8C9B75A1747DD2106BCE274391B3887DD42914F4F3ACA95464674
1C28B8FD34178F8587BEAE22222747B762DF287688EF613BA631AF196EA1CC09
D4495DFD4A013D76E935A18C17E2DF4EA38858C0A2107E6423FB434218795CF5
A66F955AD713E66D8E2340B28BC76E032752B763A8C701F92CD88AB669D73D7C
9616856492C970B2E22CB9D08D2B38E6> |-
/t <1C60D8A8C9B831A9F123BD5E6605C8191D17ADD74CAAB603D2658B7C92B9
CC75EB7446C93B61746786EBF42666C414725D4833A530E895A8693DD811F065
D0F7E89D1F26FC5952147DAA1D9E50BEFCB02B82575AE08C8933D571C63A58C0> |-
/v <1C60D8A8C9B75A17982D11DCDE91A012DF922909A846C32AE4EBFCAB8216
24D71B2E1193FC0320D6BA610DD936AC1E36C7D58E441F8BC88B71AB4AEF> |-
/w <1C60D8A8C9B6EA91968DE5A53121131861AED43A38C38525B4C2B123773F
DD2D43CE218CA4FA1B5949FDC5A22238E2B5EEBE33B08D09C641D76495C8F15B
24E50E28DCFF4DE5049B727BCD3964AC3E44C553E100AC6B165DBBC91580B978
BE6014C00979> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKZ+HelveticaNeueLTStd-It /Encoding get
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 65 /A put
dup 67 /C put
dup 70 /F put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
pop
%ADOEndSubsetFont
/PZSRKZ+HelveticaNeueLTStd-It*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four 12{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
16{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o 2{/.notdef}rp /r /s /t /.notdef /v 
/w /.notdef /y 134{/.notdef}rp]
PZSRKZ+HelveticaNeueLTStd-It nf
PZSRKZ+HelveticaNeueLTStd-It*1 [8.5 0 0 -8.5 0 0 ]msf
384.374 177.374 mo
(Converting Credits to )
[6.13699 4.87906 4.72598 4.08853 4.56451 2.83044 2.67752 1.88699 4.72601 4.87903 3.74002 6.13699 
2.83044 4.56451 5.04053 1.88699 2.67752 4.08853 3.73151 2.67749 4.87906 0 ]xsh
64.8245 187.871 mo
(Withholding Allowances for 2011 Form W-4)
[7.87096 1.887 2.67752 4.726 4.726 4.87904 1.887 5.04052 1.887 4.726 4.87904 2.363 
5.66956 1.887 1.887 4.87904 6.45152 4.41147 4.72601 4.56451 4.56451 4.08853 2.36301 2.51604 
4.87904 2.83044 2.36299 4.726 4.726 4.726 4.726 2.36299 4.87906 4.87903 2.83044 7.24203 
2.36301 7.87096 3.30656 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
229.818 187.871 mo
( )sh
PZSRKZ+HelveticaNeueLTStd-It*1 [8.5 0 0 -8.5 0 0 ]msf
232.181 187.871 mo
(Worksheet )
[7.87096 4.87904 2.83044 4.08852 4.08852 4.72601 4.56451 4.56451 2.67752 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
274.834 187.871 mo
(in Pub. 919.\) ...........)
[1.88699 4.72601 2.36298 5.50797 4.72601 5.0405 2.36301 2.36301 4.72601 4.72598 4.72598 2.36301 
2.20154 13.4725 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.92 189.571 mo
(5)sh
set_def_flat
503.75 191.999 mo
569.05 191.999 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B7A73DEE9439F98CDA5041A52794841159137281766159E5F9
4600C10EA2C68B6C850E061AEA52681B268004744AC16A8A2E8C77C617533977> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
10{/.notdef}rp /E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 3{/.notdef}rp 
/T /U /.notdef /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 47{/.notdef}rp 
/quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 189.425 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF32A1CB48DEA53F45D09C37EA7450C2F1B0D3E1B607E7
A537D549203C57E2E1EFC3B6952D280A26432F99C301163CFD7158B19DA216F7
04011F1A20827116C3572F8747E6425B6A8B7EED28F4D498AF3E6DD33C8DB47A
091F041A68E43633A02809DF3A4B1CF41CD3DAC145A277343107438D7D3AF164
6D4C11F75535DBB2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
/four /five /six 10{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp 
/N 4{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e 2{/.notdef}rp /h /i /j /k 
/.notdef /m /n /o 2{/.notdef}rp /r /s /t 
/u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 201.567 mo
(6)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 201.567 mo
(Enter an estimate of your 2011 nonwage income \(such as dividends or interest\)........)
[5.19344 4.726 2.67752 4.56452 2.83044 2.363 4.56452 4.726 2.363 4.56452 4.25 2.67752 
1.887 7.25047 4.56452 2.67752 4.56451 2.36301 4.87904 2.51604 2.36301 4.25 4.87904 4.726 
2.83044 2.36299 4.726 4.726 4.726 4.726 2.36299 4.72601 4.87904 4.72598 6.44296 4.56453 
4.87904 4.56451 2.36301 1.88699 4.72601 4.56451 4.87904 7.25047 4.56451 2.36301 2.20152 4.25 
4.72601 4.56451 4.72601 2.36298 4.56451 4.25 2.36301 5.0405 1.88702 4.25 1.88702 5.0405 
4.56454 4.72595 5.04053 4.25 2.36304 4.87903 2.83044 2.36298 1.88702 4.72601 2.67749 4.56451 
2.83044 4.56451 4.25 2.67755 9.63049 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.886 201.567 mo
(6)sh
set_def_flat
503.75 203.998 mo
569.05 203.998 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 201.424 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7EF327C10274A9264860397BF952BA7D3030BFE9C3B1D
4BFE5242D1CEDFEB6304F63158FA977519E978402E46A73F65E51FFD22E1A951
94A756203108E8980C72A1A89ECBD078> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
/four /five /six /seven 9{/.notdef}rp /A 2{/.notdef}rp /D 
9{/.notdef}rp /N 4{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e 2{/.notdef}rp /h /i /j 
/k /.notdef /m /n /o 2{/.notdef}rp /r /s 
/t /u 138{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 213.566 mo
(7)sh
64.799 213.566 mo
(Subtract )
[5.51652 5.04052 5.19344 2.99204 3.30656 4.87904 4.87904 2.99204 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
101.961 213.566 mo
(line 6 from line 5. If zero or less, enter \252-0-\272 ................)
[1.887 1.887 4.726 4.56452 2.363 4.726 2.363 2.51604 2.83044 4.87904 7.25047 2.36299 
1.88701 1.88701 4.72598 4.56453 2.36299 4.72601 2.36299 2.36299 2.20154 2.51604 2.36299 4.07997 
4.56453 2.83043 4.87904 2.36301 4.87903 2.83044 2.36301 1.88699 4.56451 4.25 4.25 2.36301 
2.36301 4.56451 4.72601 2.67752 4.56451 2.83044 2.36298 3.62097 3.30655 4.72601 3.30655 3.62097 
10.948 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.903 213.566 mo
(7)sh
set_def_flat
503.75 215.997 mo
569.05 215.997 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B635A4D734FEE524B90076D40977669A4A566C3E61590FFB6F
CDC3D041C91C3712133D40C7574FCFB64F8FF5F6415C095B859EE743A161F77F
B515E377AFD855A5577AE0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
9{/.notdef}rp /D /E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 
3{/.notdef}rp /T /U /.notdef /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 213.423 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF32A1CA72D48D3E1CFAD96DD45360960870693B73CB
1EC3A37E628A512EA2E4E0BB05A59BFA17BD2A9E880DE0AC3A7B81E9DE79266C
BB7DD46D07B2274B1CEA48F6F2E67EFF789110CB89D849FF451F492DA47C544D
9C462173D3EFB087E05C850EDAA1B635C1678B46AB4BAB3F61B139DCCFF6F3E4
9374F054E554BB3EAC459709A98A1E2E857549AF4E207F50FB300D649D360BFD
80E56EA06B55CDF62C89BDDFE038E986122D539D19391480FF05493168010C71
2D79290A1CD092273A1D05A488BA16A0893ECD4B74AA612266F7C436E6A83813
2E45E65944EA37FEBCF75A1F1B86572D7EEAD794153C0D1E42EDE084969AA27B
78DC9BE31468A3> |-
/v <1C60D8A8C9B7B3D0B3A458FB9BFFEF4D40C2203617EEB1DE44C6D0B97969
952A36BB6D391D046C6D5A8C6FE88EAD383E1EA85E30> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 56 /eight put
dup 118 /v put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two /three 
/four /five /six /seven /eight 8{/.notdef}rp /A 2{/.notdef}rp 
/D 9{/.notdef}rp /N 4{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /d /e 2{/.notdef}rp /h /i 
/j /k /.notdef /m /n /o 2{/.notdef}rp /r 
/s /t /u /v 137{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 225.568 mo
(8)sh
64.799 225.568 mo
(Divide )
[6.29848 2.19296 4.42004 2.19296 5.19344 4.87904 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
92.3389 225.568 mo
(the amount on line 7 by $3,700 and enter the result here. Drop any fraction .......)
[2.67752 4.726 4.56452 2.363 4.56452 7.25047 4.87904 4.72601 4.72598 2.67752 2.36301 4.87904 
4.726 2.36301 1.88699 1.88699 4.72601 4.56451 2.36301 4.72598 2.36301 5.04053 4.25 2.36299 
4.726 4.726 2.36299 4.72601 4.72598 4.72601 2.36299 4.56453 4.726 5.04051 2.36299 4.56453 
4.726 2.67752 4.56451 2.83044 2.36301 2.67752 4.726 4.56451 2.36298 2.83044 4.56451 4.25 
4.72601 1.88702 2.67749 2.36304 4.72595 4.56454 2.83041 4.56454 2.36301 2.36298 5.98395 2.83044 
4.87906 5.0405 2.36304 4.56451 4.72601 4.25 2.36298 2.51605 2.83044 4.56451 4.56451 2.67755 
1.88696 4.87903 4.72601 8.54254 12.002 12.002 12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.886 225.568 mo
(8)sh
set_def_flat
503.75 227.999 mo
569.05 227.999 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B854D088EA530B2FDB28EC3B4FF9D9CD0146E6EE424C90
E23A870E2CF366A85A8E1F74ABA0A2CD> |-
/nine <1C60D8A8C9B7EF32A1CA72D420198944AE95BBEAA3C89FD8DA2166305
9E8274DDDCE01650F40F0ECF3D83AFD6E026BD9E452F139EFED07E9F9DA17A3E
67700BCE553F70F601F877A0F791359A4DF49E5F223EB0521708A3F7BEE2E869
8A7B30EFD68BAC4EDAFA6A378542D9D6A161B8D142C8BFF1E18425A8DECDAAA6
62A008F1649CE67> |-
/P <1C60D8A8C9B64EDFA3F30AE4FCEDDC7CF99B0D740AB78A4CD5837380F302
A57BF14EE63914ACD62253B2A55E7694E8F54EF4B8326A6F2E6DA1FCA78582C7
390480E76DC6FC9FF5CC3CDDAAD0A185AE0E323E7768> |-
/l <1C60D8A8C9B868F3ECECA4B3CB4DF347EFB2E6322F61960A8BB3D0C58102
E4D4> |-
/w <1C60D8A8C9B6A351680511D56A8DDE7BB19BEEB7A14024CC7588AC182D19
E78CE8539DC360DB731ACC39A3862D067B4211B093D41A8DD1CF4DD52277643F
6AD4CC203869DBF123A9BC4CD2C1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 44 /comma put
dup 57 /nine put
dup 80 /P put
dup 108 /l put
dup 119 /w put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp /one 
/two /three /four /five /six /seven /eight /nine 
7{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N /.notdef /P 
2{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e 2{/.notdef}rp /h /i /j /k /l 
/m /n /o 2{/.notdef}rp /r /s /t /u 
/v /w 136{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 237.567 mo
(9)sh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6079F3517E07A12A2C48A0EE2770D4AF60C05A31D41DEBCC2
23AFC8646172351DDB62F6E59063FC7A9D7247128356AAB8D7812541E7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 72 /H put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
9{/.notdef}rp /D /E /F /.notdef /H /I 6{/.notdef}rp 
/P 3{/.notdef}rp /T /U /.notdef /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
/z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 237.567 mo
(Enter the number from the )
[5.19344 4.726 2.67752 4.56452 2.83044 2.363 2.67752 4.726 4.56452 2.363 4.726 4.726 
7.25047 5.04052 4.56452 2.83044 2.36301 2.51604 2.83043 4.87906 7.25046 2.36301 2.67752 4.726 
4.56453 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
167.156 237.567 mo
(Personal Allowances Worksheet, )
[5.66957 4.87903 3.30658 4.56451 5.19344 5.04051 4.87906 2.19296 2.36299 5.82248 2.19296 2.19296 
5.19344 6.91896 4.87904 5.04053 4.87903 4.87906 4.56451 2.36301 8.02399 5.19345 3.30655 4.87906 
4.56451 5.04053 4.87903 4.87906 2.99203 2.36298 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
302.655 237.567 mo
(line H, page 1 .........)
[1.88699 1.88699 4.72601 4.56451 2.36301 6.13699 2.36301 2.36301 5.04053 4.56451 4.87903 4.56451 
2.36301 4.72601 4.91299 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.886 237.567 mo
(9)sh
set_def_flat
503.75 239.998 mo
569.05 239.998 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B704CCBB34F94149B012C05A72966A62F7589DA190506
2B12B0BC3> |-
/slash <1C60D8A8C9B728C5D24E1BE6883F8E70459C44AB40B2AEFF9B813954
EDB7A660C8FB29> |-
/zero <1C60D8A8C9B7EF32A1CB48DEAA21709CC50DCA8C1EC1ABD4E7EB557E2
CDD0F6DE60B49FACB4CB8874F51128AFB43D4F5EA072546CDF8C15C60681D530
A7A36D335C35F801FAD4327B2D61364B3F8A9BC23F682E0555A2BB5EF89BDF56
928A96D> |-
/E <1C60D8A8C9B67DB5F4526A7E94FABE07028B57E65A9AF78EF96609CDB235
DFD7B75910D70BC0B14BEA79534BD3B17C069550E4D1F4DA03EF7FB66E8D54DE
A6> |-
/J <1C60D8A8C9B7EF32A6B3F3793681A02C77519FF9C3107479374C44CEA12C
70D3759BCF7530D18C7F3788B6159194E2DE182FF31B554C1B6C0ECDBA616850
79BC0448C479E53E> |-
/M <1C60D8A8C9B58D099743A044C25BCB009F954079D06977A10F9CB9BD761E
C0E5547BD885267328EB1959AD52249FCE4254E8D98CDB81D990D1AB002EA3F6
826A5C491864B37821FFD1ACA4FEA232> |-
/T <1C60D8A8C9B7D8BE41A64DAA4F1C36A5BC537C07513FCF51433853C1AF3B
A4DB1654B144F15BC7FC3B2AEB0BBD2E66> |-
/p <1C60D8A8C9B7D8BE1A68BECA012E6F309A1EF0C2CC0530F52F1EF08E4CC1
CB433D229B85C0B3DAEF506F3F670C787C9170FE6EA9E4817151B0C1A55A089D
9BEABB37B6ED2F32AFFD041A83A6A8F2F3B9E5DA92042B37E6421F5C5F05114F
DD408F65999EA73157749AB259923D7DB77F73E19A83B6044D426833D53DC82D
673B4236D139298A58893B6F7F7A75A3FD1B7005EFBCCF89AEB8628ADC42A4EE
559E55E5602045E940C1A89762> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 45 /hyphen put
dup 47 /slash put
dup 48 /zero put
dup 69 /E put
dup 74 /J put
dup 77 /M put
dup 84 /T put
dup 112 /p put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E 4{/.notdef}rp /J 
2{/.notdef}rp /M /N /.notdef /P 2{/.notdef}rp /S /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
2{/.notdef}rp /h /i /j /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w 136{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
40.948 249.566 mo
(10)
[4.726 0 ]xsh
64.799 248.869 mo
(Add )
[5.82248 5.19344 5.19344 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6ED05589977F626CB6A269556E7221F6E03CF1DC1BE3C0470
15F23AEB89943170BA4C346A9DCE27DE74621613ADA8CF0C4A6ADFCA9FDE24F9
D680E034C01C08712DC60C90FA059814DAAC1A75E64322C9EEEC3CC276670769
BC2688BD70> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 79 /O put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
9{/.notdef}rp /D /E /F /.notdef /H /I 5{/.notdef}rp 
/O /P 3{/.notdef}rp /T /U /.notdef /W 9{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /k /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
83.397 248.869 mo
(lines 8 and 9 and enter the total here. If you plan to use the )
[1.887 1.887 4.726 4.56452 4.25 2.3885 4.726 2.3885 4.56452 4.72599 5.04053 2.3885 
4.72601 2.38849 4.56451 4.72601 5.04051 2.3885 4.56451 4.726 2.67752 4.56453 2.83043 2.3885 
2.67752 4.726 4.56453 2.38849 2.67752 4.87904 2.67752 4.56453 1.88699 2.3885 4.726 4.56451 
2.83044 4.56451 2.36301 2.3885 2.20152 2.51604 2.3885 4.25 4.87904 4.726 2.3885 5.04051 
1.88702 4.56451 4.72598 2.38852 2.67749 4.87906 2.38852 4.72598 4.25 4.56451 2.38852 2.67749 
4.72601 4.56451 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
309.573 248.869 mo
(Two-Earners/Multiple Jobs Worksheet, )
[5.19342 6.91898 5.19345 3.45947 5.50793 4.87906 3.30655 5.04053 4.87906 3.30655 4.56451 3.15353 
7.70947 5.04053 2.19296 2.99203 2.19296 5.19345 2.19296 4.87903 2.38852 4.72598 5.19345 5.19342 
4.56454 2.38849 8.02399 5.19345 3.30655 4.87906 4.56451 5.04053 4.87906 4.87903 2.99203 2.36301 
0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.748 259.868 mo
(also enter this total on line 1 below. Otherwise, )
[4.56452 1.887 4.25 4.87904 2.363 4.56452 4.726 2.67752 4.56452 2.83044 2.363 2.67752 
4.726 1.887 4.25 2.363 2.67752 4.87904 2.67752 4.56453 1.88699 2.36301 4.87903 4.72601 
2.36299 1.88701 1.88699 4.726 4.56453 2.36299 4.726 2.36301 5.04051 4.56453 1.88699 4.87904 
6.44295 2.36301 2.36301 6.45996 2.67752 4.72598 4.56451 2.83044 6.44296 1.88699 4.25 4.56454 
2.36298 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
244.523 259.868 mo
(stop here )
[4.56451 2.99205 5.19344 5.19342 2.36301 5.04053 4.87906 3.30655 4.87906 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
285.298 259.868 mo
(and enter this total on Form W-4, line 5, page 1)
[4.56451 4.72601 5.04053 2.36298 4.56451 4.72601 2.67752 4.56451 2.83044 2.36301 2.67752 4.72598 
1.88702 4.25 2.36298 2.67752 4.87906 2.67752 4.56451 1.88699 2.36301 4.87906 4.72598 2.36301 
4.87903 4.87906 2.83041 7.25049 2.36301 7.87094 3.30658 4.72598 2.36301 2.36301 1.88699 1.88699 
4.72601 4.56451 2.36301 4.72598 2.36301 2.36301 5.0405 4.56454 4.87903 4.56454 2.36298 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
480.092 261.568 mo
(10)
[4.72601 0 ]xsh
set_def_flat
1 lw
36 671.998 mo
576 671.998 li
576 275.998 li
36 275.998 li
cp
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
112.033 285.638 mo
(Two-Earners/Multiple Jobs Worksheet )
[6.10992 8.13995 6.10992 4.06998 6.47995 5.74005 3.89008 5.93002 5.74005 3.89008 5.37003 3.71002 
9.06998 5.93002 2.57996 3.52005 2.57996 6.10992 2.57996 5.74005 2.78 5.56 6.10992 6.10992 
5.37003 2.78 9.44 6.10992 3.89008 5.74005 5.37003 5.93002 5.74005 5.74005 3.52005 0 
]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B67DB50536B7FF8ABC0B497BA3B515CBA710718F58724EAA99
C9474916D6E54CEBF2CBA3496494F840172398909F9A2A9A7E023D503FE3E4BC
399D0C9DC6E9F5AC613337842184382525816A18C1579C95F53201A84533F2DF
2088F4C0D90D787F53F90357B49210532147C289EB4C6E2398DE8CA36625E9EE
8CADAFD2E64B5A8DF6324DADC658AFC17644E35A5CC2B771DCB67E5841D29C4B
03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
9{/.notdef}rp /D /E /F /.notdef /H /I 5{/.notdef}rp 
/O /P 2{/.notdef}rp /S /T /U /.notdef /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [10 0 0 -10 0 0 ]msf
298.293 285.638 mo
(\(See )
[2.59003 6.47995 5.37003 5.37003 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeueLTStd-It AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKZ+HelveticaNeueLTStd-It dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7FD84CD08F29211E1CE736967C0B5A50A5907151F492BAACE
01910D48129968F57300C87417A74ED67CE9D89A> |-
/b <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1DBE44BA23491C58EF531501
25154B907870F220E4D6FB1C930C6965E354BA5919999A2ED4559A8A770B2369
F7EDB23E0AAEBF2741A6ECA061AAA51C34D4ADC3A9A814DE647FA9D06EA3B413
74C84C2AB8B3A7B5C7475324B0B77E759A8B11D3A8C93E93525A6C00AAED5568
8DCF5BC1BC0E45A450020C001269> |-
/j <1C60D8A8C9B88C087EE9D200C61E879DE16CACCEE07AE273F98C7106EA2D
3D1CFA5B689469493D3545A945669A4EC0ADC1337535C2C9836B2C54681B2C75
C2FCB57B801B3E4CC391319CC2C29D9013555D1FC8DC43> |-
/p <1C60D8A8C9B7CA642635ED2640AFBBBDBA43756539A62EF24D2C375433F8
0366F152A0C12D70EAECF21FDA00B2945BCC9E7438DBBD3DA82B97BB96880EEA
C5DB2B474AE83AA2395512EDA320A151D0F307F745A47B94B1D1E9D41368E114
4DF862EF7DE7F617017A45355ACD80E44185183AD339FE9849CF7604C2> |-
/u <1C60D8A8C9B7EF32A30FDF4E2BE49BF55421DBA44D9345E7C993DD129622
62BDE9277898D0BB688B62F32D496A4C770023CF91AA93E8BC8C3F13C3CA79E9
DA1D0C70AE5933DC6AACD5435DD439D1EB7B8548B38B689DE796AE5F7F6F1507
39AEA033> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKZ+HelveticaNeueLTStd-It /Encoding get
dup 84 /T put
dup 98 /b put
dup 106 /j put
dup 112 /p put
dup 117 /u put
pop
%ADOEndSubsetFont
/PZSRKZ+HelveticaNeueLTStd-It*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four 12{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
13{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
PZSRKZ+HelveticaNeueLTStd-It nf
PZSRKZ+HelveticaNeueLTStd-It*1 [10 0 0 -10 0 0 ]msf
320.883 285.638 mo
(Two earners or multiple jobs )
[5.74005 7.59003 5.74005 2.78 5.37003 5.18997 3.32993 5.56 5.37003 3.32993 4.81003 2.78 
5.74005 3.32993 2.78 8.52005 5.56 2.22 3.15002 2.22 5.93002 2.22 5.37003 2.78 
2.22 5.74005 5.93002 4.81003 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [10 0 0 -10 0 0 ]msf
449.773 285.638 mo
(on page 1.\))
[5.74005 5.56 2.78 5.93002 5.37003 5.74005 5.37003 2.78 5.56 2.78 0 ]xsh
set_def_flat
35.75 288 mo
576.25 288 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
41 297.568 mo
(Note. )
[6.29848 5.19344 2.99204 4.87904 2.363 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
65.089 297.568 mo
(Use this worksheet )
[6.137 4.25 4.56452 2.363 2.67752 4.726 1.887 4.25 2.363 6.44296 4.87904 2.83044 
4.41148 4.25 4.726 4.56451 4.56453 2.67752 0 ]xsh
PZSRKZ+HelveticaNeueLTStd-It*1 [8.5 0 0 -8.5 0 0 ]msf
140.017 297.568 mo
(only )
[4.87904 4.726 1.88699 4.08853 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
157.96 297.568 mo
(if the instructions under line H on page 1 direct you here.)
[1.88699 2.51605 2.36301 2.67752 4.72598 4.56453 2.36299 1.88701 4.726 4.25 2.67752 2.83044 
4.72598 4.56453 2.67752 1.88701 4.87903 4.72601 4.25 2.36299 4.726 4.726 5.04051 4.56453 
2.83043 2.36301 1.88699 1.88701 4.726 4.56451 2.36301 6.13699 2.36301 4.87903 4.72601 2.36301 
5.0405 4.56454 4.87903 4.56454 2.36298 4.72601 2.36298 5.04053 1.88702 2.83041 4.56454 4.56451 
2.67752 2.36301 4.25 4.87903 4.72601 2.36298 4.72601 4.56451 2.83044 4.56451 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.675 309.57 mo
(1)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [7.48 0 0 -8.5 0 0 ]msf
64.8 309.567 mo
(Enter the number from line H, page 1 \(or from line 10 above if you used the )
[4.57022 4.15888 2.35622 4.01678 2.49078 2.07944 2.35622 4.15887 4.01678 2.07944 4.15888 4.15887 
6.38042 4.43565 4.01678 2.49078 2.07944 2.21412 2.49078 4.29356 6.38042 2.07944 1.66055 1.66058 
4.15887 4.01677 2.07945 5.40054 2.07944 2.07944 4.43567 4.01678 4.29355 4.01678 2.07944 4.15887 
2.07944 1.93735 4.29355 2.4908 2.07944 2.21411 2.49078 4.29356 6.38042 2.07944 1.66055 1.66057 
4.15887 4.01678 2.07944 4.15887 4.15887 2.07945 4.01677 4.43565 4.29356 3.73999 4.01678 2.07944 
1.66055 2.21414 2.07944 3.73999 4.29358 4.15887 2.07941 4.15891 3.73999 4.01678 4.43564 2.07947 
2.3562 4.15887 4.01678 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [7.48 0 0 -8.5 0 0 ]msf
316.562 309.567 mo
(Deductions and Adjustments Worksheet)
[5.54266 4.29355 4.57022 4.43567 4.29355 2.633 1.92981 4.57022 4.43567 4.01678 2.07944 4.29355 
4.43567 4.57022 2.07944 5.12378 4.57022 2.07944 4.43567 4.01675 2.633 6.77695 4.29355 4.43567 
2.633 4.01678 2.07944 7.06113 4.57022 2.90976 4.29358 4.01678 4.43564 4.29355 4.29358 0 
]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [7.48 0 0 -8.5 0 0 ]msf
460.343 309.567 mo
(\))sh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.874 309.567 mo
(1)sh
set_def_flat
.5 lw
503.75 311.998 mo
569.05 311.998 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6184AECC26C5F013D64FB9C2A65827FAFEA8577451F102C72
5201BF14CDCDC9A65348C0172BC4506E48CCA1363B6527E4D3C2DF030A6A68E9
7244A880> |-
/L <1C60D8A8C9B7CA6456D3EEA4470DB08988F3EDC4FE20F001483F1FED1ED6
AE9A06A09E7DED4695> |-
/O <1C60D8A8C9B6FF8678D4C46F3D07688C9986455395FECA2D5B7259815DD4
12294EA296BF7058CC05B9028E8B3694102B4FB7F7F9E65D9F13FA90AB83C598
D6B4972E78F7D8BB0706EEE068C941B02EEBE673B21999E67C5954A670771FAE
DA738F2BFACF0BC13F4E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 72 /H put
dup 76 /L put
dup 79 /O put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E 2{/.notdef}rp /H 
/.notdef /J /.notdef /L /M /N /O /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e 2{/.notdef}rp /h /i /j /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w 136{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 321.566 mo
(2)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 321.863 mo
(Find the number in )
[4.87904 1.887 4.726 5.04052 2.873 2.67752 4.726 4.56452 2.87299 4.726 4.726 7.25047 
5.04053 4.56451 2.83044 2.873 1.88699 4.726 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
140.542 321.863 mo
(Table 1 )
[5.19344 4.87904 5.19344 2.19296 4.87904 2.873 4.726 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
173.352 321.863 mo
(below that applies to the )
[5.04051 4.56453 1.88701 4.87903 6.44296 2.873 2.67752 4.726 4.56453 2.67752 2.873 4.56451 
5.04053 5.04051 1.88701 1.88699 4.56451 4.25 2.87302 2.67752 4.87904 2.873 2.67752 4.72601 
4.56451 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
271.935 321.863 mo
(LOWEST)
[5.04053 6.61298 8.02402 5.50797 5.51651 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
307.831 321.863 mo
( paying job and enter it here. )
[2.87299 5.04053 4.56451 4.25 1.88702 4.72598 4.87906 2.87299 1.88699 4.87906 5.04053 2.87299 
4.56451 4.72601 5.04053 2.87299 4.56451 4.72601 2.67752 4.56451 2.83044 2.87299 1.88699 2.67755 
2.87299 4.72601 4.56451 2.83044 4.56451 2.36298 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
422.402 321.863 mo
(However,)
[6.29849 5.19342 6.91895 4.87906 4.42004 4.87903 3.30658 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
460.661 321.863 mo
( if )
[2.87299 1.88702 2.51602 0 ]xsh
64.7395 332.862 mo
(you are married filing jointly and wages from the highest paying job are $65,000 or less, do not enter more )
[4.25 4.87904 4.726 2.4395 4.56452 2.83044 4.56452 2.4395 7.25047 4.56452 2.83044 2.83044 
1.887 4.56452 5.04052 2.4395 2.51604 1.88699 1.88701 1.88701 4.726 4.87904 2.43948 1.88701 
4.87904 1.88699 4.72601 2.67752 1.88699 4.25 2.4395 4.56453 4.72598 5.04053 2.4395 6.44296 
4.56451 4.87906 4.56453 4.25 2.4395 2.51604 2.83044 4.87904 7.25047 2.4395 2.67752 4.726 
4.56453 2.4395 4.726 1.88701 4.87903 4.72601 4.56451 4.25 2.67752 2.43951 5.0405 4.56454 
4.25 1.88699 4.72601 4.87903 2.43951 1.88699 4.87906 5.04053 2.43948 4.56451 2.83044 4.56451 
2.43951 4.72598 4.72601 4.72598 2.36301 4.72598 4.72601 4.72598 2.43948 4.87906 2.83044 2.43948 
1.88699 4.56451 4.25 4.25 2.36301 2.43948 5.04053 4.87906 2.43948 4.72598 4.87906 2.67752 
2.43948 4.56451 4.72601 2.67752 4.56451 2.83044 2.43948 7.25046 4.87906 2.83044 4.56451 0 
]xsh
64.782 343.861 mo
(than \2523\272 ..............................)
[2.67752 4.726 4.56452 4.726 2.363 3.62096 4.726 3.62096 12.172 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.911 345.561 mo
(2)sh
set_def_flat
503.75 347.998 mo
569.05 347.998 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7D8BE1A68BECA012E6F309A00C1AE535E718C41B0B5190BC5
22B45C5373D25FA53E41B6AA8DD07CECCEB18CC7FD8D2AE725D41A6DD2B75C59
F430B1A094B2EAC2F6B267960F2869FDD070355183CA9592B58973C372E7E245
A8FFB5D66113F65736CFBCC26A886E7DF47649B41730D4FCAED9D9B32FDAFDC3
4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E 2{/.notdef}rp /H 
/.notdef /J /.notdef /L /M /N /O /P 
2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e 2{/.notdef}rp /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w 136{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 357.566 mo
(3)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 356.869 mo
(If line 1 is )
[2.20152 2.51604 3.281 1.887 1.887 4.726 4.56452 3.281 4.726 3.28101 1.88699 4.25 
0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
106.568 356.869 mo
(more than or equal to )
[7.70105 5.19344 3.30656 4.87904 3.28101 2.99203 5.04051 4.87906 5.04051 3.28099 5.19345 3.30655 
3.28101 4.87904 5.19344 5.04053 4.87903 2.19296 3.28101 2.99203 5.19344 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
200.875 356.869 mo
(line 2, subtract line 2 from line 1. Enter the result here \(if zero, enter )
[1.88699 1.88701 4.726 4.56451 3.28101 4.726 2.36301 3.28099 4.25 4.726 5.04053 2.67752 
2.83043 4.56453 4.56453 2.67752 3.28098 1.88699 1.88702 4.72598 4.56454 3.28098 4.72598 3.28101 
2.51605 2.83044 4.87903 7.25049 3.28101 1.88699 1.88699 4.72601 4.56451 3.28101 4.72598 2.36301 
3.28101 5.19342 4.72601 2.67749 4.56454 2.83041 3.28101 2.67752 4.72598 4.56454 3.28098 2.83044 
4.56451 4.25 4.72601 1.88702 2.67749 3.28101 4.72601 4.56451 2.83044 4.56451 3.28101 2.20151 
1.88699 2.51605 3.28101 4.07996 4.56451 2.83044 4.87903 2.36304 3.28098 4.56454 4.72598 2.67752 
4.56451 2.83044 0 ]xsh
64.782 367.868 mo
(\252-0-\272\) and on Form W-4, line 5, page 1. )
[3.62096 3.30656 4.726 3.30656 3.62096 2.20152 2.363 4.56452 4.726 5.04052 2.363 4.87904 
4.726 2.363 4.87904 4.87904 2.83044 7.25046 2.36301 7.87096 3.30656 4.726 2.36299 2.36301 
1.88699 1.88701 4.726 4.56451 2.36301 4.726 2.36299 2.36301 5.04053 4.56451 4.87903 4.56454 
2.36298 4.72601 2.36301 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
215.164 367.868 mo
(Do not )
[6.29848 5.19344 2.36301 5.04051 5.19344 2.99203 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
244.608 367.868 mo
(use the rest of this worksheet .........)
[4.726 4.25 4.56453 2.36298 2.67755 4.72598 4.56451 2.36301 2.83044 4.56451 4.25 2.67752 
2.36301 4.87903 2.51605 2.36301 2.67752 4.72598 1.88699 4.25 2.36301 6.44296 4.87906 2.83041 
4.4115 4.25 4.72598 4.56454 4.56451 2.67752 3.44247 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.869 369.568 mo
(3)sh
set_def_flat
503.75 371.999 mo
569.05 371.999 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
41 380.869 mo
(Note. )
[6.29848 5.19344 2.99204 4.87904 2.363 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B6079FEF8760F9C1321FA433F0BA2035A26FF8FE488C0C4876
D35C91EC3100D4DDD0332AD8F31C7DFF7C2EA58FE6FF8CD039C86B660095C078
841EFD41499BC62B344A982FDA8599507300E468BEFF36D7ED13F5DD0660E3D5
319829C660065AFD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
8{/.notdef}rp /C /D /E /F /.notdef /H /I 
5{/.notdef}rp /O /P 2{/.notdef}rp /S /T /U /.notdef 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 
69{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
65.089 380.869 mo
(If line 1 is)
[2.20152 2.51604 2.363 1.887 1.887 4.726 4.56452 2.363 4.726 2.363 1.887 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
100.823 380.869 mo
( less than)
[2.363 2.19296 4.87904 4.56452 4.56452 2.363 2.99204 5.04051 4.87906 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-BdIt Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeueLTStd-BdIt def
/FontInfo 7 dict dup begin
/Notice (Copyright 1988, 1990, 1993, 2002 Adobe Systems Incorporated. All Rights Reserved. Helvetica is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Bold) def
/ItalicAngle -12 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-166 -218 1129 975} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 531 700 700] def
/OtherBlues [264 273 375 384 -196 -182] def
/FamilyBlues [-17 -0 714 731 517 529] def
/FamilyOtherBlues [273 280 380 387 -210 -198] def
/StdHW [107] def
/StdVW [142] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/.notdef <1C60D8A8C9B7FD84E61A8AA1359C7F054E5FAC7329E3417FDB23DB
FAC4E05ABCDFAD4A853C3F15E8BAC0928CD634BE3D85FA39F66B3763A7864480
5801C4292702649F9063712811FFECA4411DCECD4EF2BE875EECB685> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PZSRLB+HelveticaNeueLTStd-BdIt /HIBBAA+HelveticaNeueLTStd-BdIt findfont ct_VMDictPut
/PZSRLB+HelveticaNeueLTStd-BdIt*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
PZSRLB+HelveticaNeueLTStd-BdIt nf
PZSRLB+HelveticaNeueLTStd-BdIt*1 [8.5 0 0 -8.5 0 0 ]msf
139.702 380.869 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
142.065 380.869 mo
(line 2, enter \252-0-\272 on Form W-4, line 5, page 1. Complete lines 4 through 9 below to figure the additional)
[1.88699 1.88701 4.726 4.56451 2.36301 4.726 2.36299 2.36301 4.56451 4.72601 2.67752 4.56451 
2.83044 2.36299 3.62096 3.30656 4.726 3.30656 3.62096 2.36301 4.87903 4.72601 2.36299 4.87904 
4.87904 2.83043 7.25049 2.36299 7.87096 3.30656 4.726 2.36301 2.36301 1.88699 1.88699 4.72601 
4.56451 2.36298 4.72601 2.36301 2.36301 5.0405 4.56454 4.87903 4.56451 2.36301 4.72598 2.36301 
2.36301 6.13699 4.87906 7.25046 5.04053 1.88699 4.56451 2.67755 4.56451 2.36298 1.88702 1.88699 
4.72598 4.56454 4.25 2.36301 4.72598 2.36301 2.67752 4.72598 2.83044 4.87903 4.72601 4.87903 
4.72601 2.36301 4.72598 2.36301 5.04053 4.56451 1.88699 4.87906 6.44296 2.36298 2.67755 4.87903 
2.36301 2.51602 1.88702 4.87903 4.72601 2.83044 4.56451 2.36298 2.67755 4.72598 4.56451 2.36301 
4.56451 5.04053 5.04053 1.88702 2.67749 1.88696 4.87909 4.72601 4.56451 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
535.521 380.869 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.9955 391.868 mo
(withholding amount necessary to avoid a year-end tax bill.)
[6.44296 1.887 2.67752 4.726 4.726 4.87904 1.887 5.04052 1.887 4.726 4.87904 2.363 
4.56452 7.25047 4.87904 4.72601 4.72598 2.67752 2.36301 4.726 4.56453 4.56451 4.56451 4.25 
4.25 4.56453 2.83043 4.25 2.36301 2.67752 4.87904 2.36299 4.56451 4.25 4.87906 1.88699 
5.04053 2.36301 4.56451 2.36301 4.25 4.56451 4.56451 2.83044 3.30655 4.56454 4.72598 5.04053 
2.36301 2.67752 4.56451 4.40305 2.36301 5.0405 1.88702 1.88699 1.88699 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.6665 405.57 mo
(4)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.7915 405.57 mo
(Enter the number from line 2 of this worksheet ..........)
[5.19344 4.726 2.67752 4.56452 2.83044 2.363 2.67752 4.726 4.56452 2.363 4.726 4.726 
7.25047 5.04052 4.56452 2.83044 2.36301 2.51604 2.83043 4.87906 7.25046 2.36301 1.88699 1.88701 
4.726 4.56451 2.36301 4.726 2.36299 4.87906 2.51604 2.36299 2.67752 4.72601 1.88699 4.25 
2.36299 6.44296 4.87906 2.83043 4.41148 4.25 4.72598 4.56453 4.56453 2.67752 11.6535 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
384.085 405.57 mo
(4)sh
set_def_flat
402.95 407.999 mo
468.25 407.999 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 417.567 mo
(5)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 417.567 mo
(Enter the number from line 1 of this worksheet ..........)
[5.19344 4.726 2.67752 4.56452 2.83044 2.363 2.67752 4.726 4.56452 2.363 4.726 4.726 
7.25047 5.04052 4.56452 2.83044 2.36301 2.51604 2.83043 4.87906 7.25046 2.36301 1.88699 1.88701 
4.726 4.56451 2.36301 4.726 2.36299 4.87906 2.51604 2.36299 2.67752 4.72601 1.88699 4.25 
2.36299 6.44296 4.87906 2.83043 4.41148 4.25 4.72598 4.56453 4.56453 2.67752 11.6535 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
384.093 417.567 mo
(5)sh
set_def_flat
402.95 419.998 mo
468.25 419.998 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 429.566 mo
(6)sh
64.799 429.566 mo
(Subtract )
[5.51652 5.04052 5.19344 2.99204 3.30656 4.87904 4.87904 2.99204 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
101.961 429.566 mo
(line 5 from line 4 .........................)
[1.887 1.887 4.726 4.56452 2.363 4.726 2.363 2.51604 2.83044 4.87904 7.25047 2.36299 
1.88701 1.88701 4.72598 4.56453 2.36299 4.72601 3.5275 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 12.002 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.92 429.566 mo
(6)sh
set_def_flat
503.75 431.997 mo
569.05 431.997 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6EA91968DE5AA117AB1A67F1CFCABDAA2E967FD2910C50267
294BF4F8A108FCA0F5ED48AD8852615C0DA71A2D2A850156A251C15198C41A14
8F058590479EB47ADBA6DA002D4769DAF4BE3BC06F074346EA75F01C7C101A20
1CBB4BA0E91B3D4F130A08F1736AA37692283E1634E945C5DE190DFECAC9CFAA
B0BFE22A3EBBD7DFF94E711EAEBB4983> |-
/I <1C60D8A8C9B845C8233CEACBA01AA3521650A1EAFE358A2C4AF7C59726DE
306E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 71 /G put
dup 73 /I put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E /.notdef /G 
/H /I /J /.notdef /L /M /N /O 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e 2{/.notdef}rp /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w 136{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 441.568 mo
(7)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 441.568 mo
(Find the amount in )
[4.87904 1.887 4.726 5.04052 2.363 2.67752 4.726 4.56452 2.363 4.56452 7.25047 4.87904 
4.726 4.726 2.67752 2.36301 1.88699 4.726 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
138.188 441.568 mo
(Table 2 )
[5.19344 4.87904 5.19344 2.19296 4.87904 2.36301 4.72598 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
169.978 441.568 mo
(below that applies to the )
[5.04053 4.56451 1.88699 4.87906 6.44296 2.36299 2.67752 4.726 4.56451 2.67752 2.36301 4.56451 
5.04053 5.04053 1.88699 1.88699 4.56453 4.25 2.36299 2.67752 4.87906 2.36299 2.67752 4.726 
4.56451 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
266.011 441.568 mo
(HIGHEST )
[6.29846 2.50751 6.45151 6.29849 5.50793 5.51654 5.19342 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
306.148 441.568 mo
(paying job and enter it here ....)
[5.04053 4.56451 4.25 1.88699 4.72601 4.87903 2.36301 1.88699 4.87906 5.0405 2.36301 4.56454 
4.72598 5.04053 2.36301 4.56451 4.72598 2.67752 4.56451 2.83044 2.36301 1.88699 2.67752 2.36301 
4.72601 4.56451 2.83044 4.56451 9.93649 12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.878 441.568 mo
(7)sh
set_def_flat
503.75 443.999 mo
569.05 443.999 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 441.425 mo
($)sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7B4A13335097CACA4545518D9A05B96907D6FBF4621519CC3
2B7407A8C567078FA2E27BC28ACAE333A7A52B868D2D820442440A44EC31906E
1CA142AB767FFD7AECB38A6A29600B588B02FD12> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E /.notdef /G 
/H /I /J /.notdef /L /M /N /O 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e 2{/.notdef}rp /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 453.567 mo
(8)sh
64.799 453.567 mo
(Multiply )
[7.70948 5.04052 2.19296 2.99204 2.19296 5.19344 2.19296 4.41148 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
99.0878 453.567 mo
(line 7 by line 6 and enter the result here. This is the additional annual withholding needed ..)
[1.887 1.887 4.726 4.56452 2.363 4.726 2.363 5.04052 4.24999 2.36301 1.88699 1.88701 
4.726 4.56451 2.36301 4.726 2.36299 4.56453 4.726 5.04053 2.36299 4.56453 4.72598 2.67752 
4.56453 2.83043 2.36301 2.67752 4.726 4.56453 2.36299 2.83043 4.56453 4.25 4.726 1.88699 
2.67752 2.36301 4.72598 4.56454 2.83041 4.56454 2.36298 2.36301 4.87906 4.72598 1.88699 4.25 
2.36301 1.88699 4.25 2.36301 2.67752 4.72601 4.56451 2.36301 4.56451 5.04053 5.0405 1.88702 
2.67752 1.88699 4.87903 4.72601 4.56451 1.88699 2.36301 4.56451 4.72601 4.72598 4.72601 4.56451 
1.88699 2.36301 6.44296 1.88699 2.67752 4.72601 4.72598 4.87906 1.88699 5.04053 1.88699 4.72598 
4.87906 2.36301 4.72598 4.56454 4.56451 5.04053 4.56451 5.04053 8.13449 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.878 453.567 mo
(8)sh
set_def_flat
503.75 455.998 mo
569.05 455.998 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 453.424 mo
($)sh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
45.674 465.566 mo
(9)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [8.5 0 0 -8.5 0 0 ]msf
64.799 465.863 mo
(Divide line 8 by the number of pay periods remaining in 2011. For example, divide by 26 if you are paid )
[5.98396 1.887 4.25 1.887 5.04052 4.56452 3.0515 1.887 1.887 4.72601 4.56451 3.0515 
4.726 3.0515 5.04052 4.25 3.0515 2.67753 4.72598 4.56453 3.0515 4.726 4.726 7.25047 
5.04051 4.56453 2.83043 3.05151 4.87904 2.51604 3.05151 5.04051 4.56451 4.25 3.05151 5.04051 
4.56453 2.83043 1.88701 4.87904 5.04051 4.25 3.0515 2.83043 4.56453 7.25047 4.56451 1.88701 
4.72598 1.88702 4.72598 4.87906 3.05148 1.88699 4.72601 3.05148 4.72598 4.72601 4.72601 4.72598 
2.36301 3.05148 4.87906 4.87903 2.83044 3.05151 4.56451 4.40302 4.56451 7.25049 5.04053 1.88702 
4.56451 2.36298 3.05151 5.04053 1.88702 4.25 1.88696 5.04053 4.56451 3.05151 5.04053 4.25 
3.05151 4.72601 4.72595 3.05151 1.88702 2.51605 3.05151 4.25 4.87903 4.72601 3.05151 4.56451 
2.83044 4.56451 3.05151 5.04053 4.56451 1.88696 5.04053 0 ]xsh
64.7565 476.862 mo
(every two weeks and you complete this form in December 2010. Enter the result here and on Form W-4, )
[4.56452 4.25 4.56452 2.83044 4.25 2.8305 2.67752 6.44296 4.87905 2.83049 6.44296 4.56453 
4.56451 4.41148 4.25 2.83049 4.56453 4.72598 5.04053 2.83051 4.25 4.87904 4.726 2.83899 
4.56453 4.87904 7.25047 5.04051 1.88701 4.56453 2.67752 4.56451 2.83051 2.67752 4.72601 1.88699 
4.25 2.83051 2.51605 4.87903 2.83044 7.25046 2.83051 1.88699 4.72601 2.83899 5.98395 4.56454 
4.56451 4.56451 7.25049 5.0405 4.56454 2.83041 2.83051 4.72601 4.72598 4.72601 4.72598 2.36301 
2.83051 5.19345 4.72598 2.67752 4.56451 2.83044 2.83051 2.67752 4.72601 4.56451 2.83051 2.83041 
4.56454 4.25 4.72598 1.88699 2.67752 2.83051 4.72601 4.56451 2.83044 4.56451 2.83051 4.56451 
4.72601 5.0405 2.83051 4.87906 4.72598 2.83051 4.87906 4.87903 2.83044 7.25046 2.83051 7.87097 
3.30655 4.72601 2.36301 0 ]xsh
64.714 487.861 mo
(line 6, page 1. This is the additional amount to be withheld from each paycheck ........)
[1.887 1.887 4.726 4.56452 2.363 4.726 2.363 2.363 5.04052 4.56452 4.87904 4.56452 
2.363 4.726 2.363 2.363 4.87904 4.726 1.88701 4.25 2.36299 1.88701 4.25 2.36299 
2.67752 4.726 4.56451 2.36301 4.56451 5.04053 5.04053 1.88699 2.67752 1.88699 4.87906 4.72598 
4.56453 1.88701 2.36299 4.56453 7.25046 4.87906 4.72598 4.72601 2.67752 2.36299 2.67752 4.87904 
2.36301 5.04051 4.56453 2.36299 6.44295 1.88702 2.67752 4.72598 4.72601 4.56451 1.88699 5.04053 
2.36301 2.51605 2.83041 4.87906 7.25046 2.36301 4.56451 4.56451 4.56454 4.72598 2.36301 5.04053 
4.56451 4.25 4.56451 4.72601 4.56451 4.56451 4.41147 6.30701 12.002 12.002 12.002 12.002 
12.002 12.002 12.002 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [8.5 0 0 -8.5 0 0 ]msf
484.801 488.558 mo
(9)sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [9 0 0 -9 0 0 ]msf
504 488.424 mo
($)sh
set_def_flat
1 lw
35.5 491.998 mo
295.45 491.998 li
@
1 setflat
set_def_flat
35.5 504.998 mo
295.45 504.998 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
148.29 502.138 mo
(Table 1)
[6.10992 5.74005 6.10992 2.57996 5.74005 2.78 0 ]xsh
set_def_flat
.5 lw
35.5 515.999 mo
165.85 515.999 li
@
1 setflat
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7CA647DE1C48F9C4687B08955F8336BCF8715F08A41E17834
59E98373110F13BFFA77A936A46DA97E534097ADD083017D12EC> |-
/g <1C60D8A8C9B7D8BE1A051E11C984AE1B2AD6C7DFFCFD4019259F0541286E
615037C3AE44917E9ED178875F5BD55D2A7417CD87B57ED7C3C988A28DE0F1E4
749444691A00F0B3560785F3237DB7EB959DFAE6DC66A7B0382451183DD0B88E
A766EC079FDB987878A106F602A389D44126E0093378C70BB8352D5C4825D76C
E87969812B3D2998DBD6378FAD2BAD9A05778F5286DF582B5E684A4F4732> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 70 /F put
dup 103 /g put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E /F /G 
/H /I /J /.notdef /L /M /N /O 
/P 2{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /.notdef /g /h /i 
/j /k /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
134{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
60.897 513.211 mo
(Married Filing Jointly)
[7.25599 4.59204 3.11206 3.11206 2.06396 4.59204 4.88794 2.224 4.74402 2.06396 2.06396 2.06396 
4.74402 4.88794 2.224 4.448 4.88794 2.06396 4.74402 2.81604 2.06396 0 ]xsh
set_def_flat
35.5 540 mo
115.45 540 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/emdash <1C60D8A8C9B5EE310D8D69071B3DED82010D47598B81701526F3B7A
43116DA8F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 208 /emdash put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
8{/.notdef}rp /C /D /E /F /.notdef /H /I 
5{/.notdef}rp /O /P 2{/.notdef}rp /S /T /U /.notdef 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /x /y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 
21{/.notdef}rp /emdash 47{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.3 0 0 -7 0 0 ]msf
41 527.598 mo
(If wages from )
[1.63172 1.86483 1.7514 4.77538 3.38311 3.61623 3.38311 3.15 1.7514 1.86483 2.09785 3.61623 
5.37388 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.3 0 0 -7 0 0 ]msf
81.0114 527.598 mo
(LOWEST)
[3.73592 4.9014 5.9472 4.08237 4.08871 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.3 0 0 -7 0 0 ]msf
107.616 527.598 mo
( )sh
41 535.998 mo
(paying job are\320)
[3.73592 3.38311 3.15 1.3986 3.5028 3.61623 1.7514 1.3986 3.61623 3.73592 1.7514 3.38312 
2.09785 3.38312 0 ]xsh
set_def_flat
114.95 540 mo
165.85 540 li
@
1 setflat
set_def_flat
115.2 515.749 mo
115.2 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
120.2 527.598 mo
(Enter on  )
[4.27695 3.892 2.20502 3.75902 2.33095 1.946 4.01804 3.892 1.946 0 ]xsh
120.2 535.998 mo
(line 2 above)
[1.554 1.554 3.892 3.75902 1.946 3.892 1.946 3.75902 4.15102 4.01804 3.5 0 
]xsh
60.889 549.998 mo
($0  -  $5,000  -)
[3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 3.892 1.946 3.892 3.892 
3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 539.75 mo
115.2 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 549.998 mo
(0)sh
51.158 557.999 mo
(5,001  -  12,000  -)
[3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 3.892 
1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 551.75 mo
115.2 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 557.998 mo
(1)sh
47.266 565.999 mo
(12,001  -  22,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 559.75 mo
115.2 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 565.998 mo
(2)sh
47.266 573.999 mo
(22,001  -  25,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 567.75 mo
115.2 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 573.998 mo
(3)sh
47.266 581.999 mo
(25,001  -  30,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 575.75 mo
115.2 584.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 581.998 mo
(4)sh
47.266 589.999 mo
(30,001  -  40,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 583.75 mo
115.2 592.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 589.998 mo
(5)sh
47.266 597.999 mo
(40,001  -  48,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 591.75 mo
115.2 600.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 597.998 mo
(6)sh
47.266 605.999 mo
(48,001  -  55,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 599.75 mo
115.2 608.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 605.998 mo
(7)sh
47.266 613.999 mo
(55,001  -  65,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 607.75 mo
115.2 616.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 613.998 mo
(8)sh
47.266 621.999 mo
(65,001  -  72,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 615.75 mo
115.2 624.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
139.708 621.998 mo
(9)sh
47.266 629.999 mo
(72,001  -  85,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 623.75 mo
115.2 632.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 629.998 mo
(10)
[3.892 0 ]xsh
47.266 637.999 mo
(85,001  -  97,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 631.75 mo
115.2 640.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 637.998 mo
(11)
[3.892 0 ]xsh
47.266 645.999 mo
(97,001  -110,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 3.892 3.892 3.892 
1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 639.75 mo
115.2 648.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 645.998 mo
(12)
[3.892 0 ]xsh
43.374 653.999 mo
(110,001  -120,000  -)
[3.892 3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 3.892 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 647.75 mo
115.2 656.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 653.998 mo
(13)
[3.892 0 ]xsh
43.374 661.999 mo
(120,001  -135,000  -)
[3.892 3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 3.892 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
115.2 655.75 mo
115.2 664.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 661.998 mo
(14)
[3.892 0 ]xsh
42.597 669.999 mo
(135,001 and over)
[3.892 3.892 3.892 1.946 3.892 3.892 3.892 1.946 3.75902 3.892 4.15102 1.946 
4.01804 3.5 3.75902 0 ]xsh
set_def_flat
115.2 663.75 mo
115.2 672.5 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
135.816 669.998 mo
(15)
[3.892 0 ]xsh
set_def_flat
164.85 515.999 mo
295.45 515.999 li
@
1 setflat
set_def_flat
1.5 lw
165.6 503.75 mo
165.6 516.249 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
211.592 513.211 mo
(All Others)
[5.47998 2.06396 2.06396 2.224 6.224 2.81604 4.74402 4.59204 3.11206 0 ]xsh
set_def_flat
.5 lw
164.85 540 mo
245.05 540 li
@
1 setflat
set_def_flat
1.5 lw
165.6 515.749 mo
165.6 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.3 0 0 -7 0 0 ]msf
170.6 527.598 mo
(If wages from )
[1.63171 1.86484 1.7514 4.77536 3.38312 3.61624 3.38312 3.14999 1.7514 1.86484 2.09784 3.61624 
5.37387 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.3 0 0 -7 0 0 ]msf
210.611 527.598 mo
(LOWEST)
[3.73592 4.9014 5.9472 4.08237 4.08871 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.3 0 0 -7 0 0 ]msf
237.216 527.598 mo
( )sh
170.6 535.998 mo
(paying job are\320)
[3.73592 3.38312 3.14999 1.39861 3.50279 3.61624 1.75139 1.39861 3.61623 3.73593 1.75139 3.38312 
2.09785 3.38312 0 ]xsh
set_def_flat
.5 lw
244.55 540 mo
295.45 540 li
@
1 setflat
set_def_flat
244.8 515.749 mo
244.8 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
249.8 527.598 mo
(Enter on  )
[4.27695 3.89198 2.20502 3.75903 2.33093 1.94601 4.01804 3.892 1.94601 0 ]xsh
249.8 535.998 mo
(line 2 above)
[1.554 1.554 3.89198 3.75903 1.94598 3.89203 1.94598 3.75903 4.151 4.01804 3.5 0 
]xsh
set_def_flat
1.5 lw
165.6 539.75 mo
165.6 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
190.488 549.998 mo
($0  -  $8,000  -)
[3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 3.892 1.946 3.892 3.892 
3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 539.75 mo
244.8 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 549.998 mo
(0)sh
set_def_flat
1.5 lw
165.6 551.75 mo
165.6 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
180.758 557.998 mo
(8,001  -  15,000  -)
[3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 3.892 
1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 551.75 mo
244.8 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 557.998 mo
(1)sh
set_def_flat
1.5 lw
165.6 559.75 mo
165.6 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 565.998 mo
(15,001  -  25,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 559.75 mo
244.8 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 565.998 mo
(2)sh
set_def_flat
1.5 lw
165.6 567.75 mo
165.6 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 573.998 mo
(25,001  -  30,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 567.75 mo
244.8 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 573.998 mo
(3)sh
set_def_flat
1.5 lw
165.6 575.75 mo
165.6 584.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 581.998 mo
(30,001  -  40,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 575.75 mo
244.8 584.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 581.998 mo
(4)sh
set_def_flat
1.5 lw
165.6 583.75 mo
165.6 592.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 589.998 mo
(40,001  -  50,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 583.75 mo
244.8 592.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 589.998 mo
(5)sh
set_def_flat
1.5 lw
165.6 591.75 mo
165.6 600.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 597.998 mo
(50,001  -  65,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 591.75 mo
244.8 600.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 597.998 mo
(6)sh
set_def_flat
1.5 lw
165.6 599.75 mo
165.6 608.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 605.998 mo
(65,001  -  80,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 599.75 mo
244.8 608.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 605.998 mo
(7)sh
set_def_flat
1.5 lw
165.6 607.75 mo
165.6 616.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 613.998 mo
(80,001  -  95,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 1.946 1.946 3.892 
3.892 1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 607.75 mo
244.8 616.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 613.998 mo
(8)sh
set_def_flat
1.5 lw
165.6 615.75 mo
165.6 624.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
176.866 621.998 mo
(95,001  -120,000  -)
[3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 2.72305 3.892 3.892 3.892 
1.946 3.892 3.892 3.892 1.946 1.946 0 ]xsh
set_def_flat
.5 lw
244.8 615.75 mo
244.8 624.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
269.308 621.998 mo
(9)sh
set_def_flat
1.5 lw
165.6 623.75 mo
165.6 672.499 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
173.254 629.998 mo
(120,001  and over)
[3.892 3.892 3.892 1.946 3.892 3.892 3.892 1.946 1.946 3.75902 3.892 4.15102 
1.946 4.01804 3.5 3.75902 0 ]xsh
set_def_flat
.5 lw
244.8 623.75 mo
244.8 672.499 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
265.416 629.998 mo
(10)
[3.892 0 ]xsh
set_def_flat
1 lw
294.2 491.998 mo
576.5 491.998 li
@
1 setflat
set_def_flat
294.2 504.998 mo
576.5 504.998 li
@
1 setflat
set_def_flat
2 lw
295.2 491.498 mo
295.2 505.498 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [10 0 0 -10 0 0 ]msf
418.29 502.138 mo
(Table 2)
[6.10992 5.74005 6.10992 2.57996 5.74005 2.78 0 ]xsh
set_def_flat
.5 lw
294.2 515.999 mo
432.25 515.999 li
@
1 setflat
set_def_flat
2 lw
295.2 503.75 mo
295.2 516.249 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
323.697 513.211 mo
(Married Filing Jointly)
[7.25598 4.59204 3.11206 3.11206 2.06396 4.59204 4.88794 2.224 4.74402 2.06396 2.06396 2.06396 
4.74402 4.88794 2.224 4.448 4.88794 2.06396 4.74402 2.81604 2.06396 0 ]xsh
set_def_flat
.5 lw
294.2 540 mo
381.85 540 li
@
1 setflat
set_def_flat
2 lw
295.2 515.749 mo
295.2 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
300.2 527.598 mo
(If wages from )
[1.81302 2.07205 1.94598 5.30597 3.75903 4.01801 3.75903 3.5 1.94598 2.07205 2.33096 4.01801 
5.97101 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
344.657 527.598 mo
(HIGHEST)
[5.18698 2.06497 5.31305 5.18695 4.53598 4.543 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
375.765 527.598 mo
( )sh
300.2 535.998 mo
(paying job are\320)
[4.151 3.75903 3.5 1.55402 3.89197 4.01807 1.94598 1.55402 4.01801 4.15103 1.94601 3.759 
2.33096 3.759 0 ]xsh
set_def_flat
.5 lw
381.35 540 mo
432.25 540 li
@
1 setflat
set_def_flat
381.6 515.749 mo
381.6 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
386.6 528.598 mo
(Enter on  )
[4.27695 3.892 2.20502 3.759 2.33096 1.94601 4.01801 3.89203 1.94598 0 ]xsh
386.6 536.998 mo
(line 7 above)
[1.55399 1.55402 3.892 3.759 1.94601 3.892 1.94598 3.75903 4.151 4.01807 3.5 0 
]xsh
set_def_flat
2 lw
295.2 539.75 mo
295.2 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
326.011 549.998 mo
($0  -  $65,000)
[3.892 3.892 1.94598 1.94601 2.72305 1.94598 1.94601 3.892 3.892 3.892 1.94598 3.89203 
3.89197 0 ]xsh
set_def_flat
.5 lw
381.6 539.75 mo
381.6 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
398.432 549.998 mo
($560)
[3.892 3.892 3.892 0 ]xsh
set_def_flat
2 lw
295.2 551.75 mo
295.2 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
312.389 557.998 mo
(65,001  -  125,000)
[3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 3.89197 
3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
381.6 551.75 mo
381.6 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
402.324 557.998 mo
(930)
[3.892 3.892 0 ]xsh
set_def_flat
2 lw
295.2 559.75 mo
295.2 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
308.497 565.998 mo
(125,001  -  185,000)
[3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 
3.89197 3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
381.6 559.75 mo
381.6 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
396.486 565.998 mo
(1,040)
[3.892 1.94598 3.89203 3.89197 0 ]xsh
set_def_flat
2 lw
295.2 567.75 mo
295.2 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
308.497 573.998 mo
(185,001  -  335,000)
[3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 
3.89197 3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
381.6 567.75 mo
381.6 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
396.486 573.998 mo
(1,220)
[3.892 1.94598 3.89203 3.89197 0 ]xsh
set_def_flat
2 lw
295.2 575.75 mo
295.2 672.501 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
308.108 581.998 mo
(335,001  and  over)
[3.892 3.892 3.892 1.94598 3.89203 3.89197 3.89203 1.94598 1.94598 3.75903 3.892 4.15103 
1.94598 1.94598 4.01807 3.5 3.759 0 ]xsh
set_def_flat
.5 lw
381.6 575.75 mo
381.6 672.501 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
396.486 581.998 mo
(1,300)
[3.892 1.94598 3.89203 3.89197 0 ]xsh
set_def_flat
431.25 515.999 mo
576.5 515.999 li
@
1 setflat
set_def_flat
1.5 lw
432 503.75 mo
432 516.249 li
@
1 setflat
PZSRKY+HelveticaNeueLTStd-Bd*1 [8 0 0 -8 0 0 ]msf
485.192 513.211 mo
(All Others)
[5.47998 2.06396 2.06396 2.224 6.224 2.81604 4.74402 4.59207 3.11206 0 ]xsh
set_def_flat
.5 lw
431.25 540 mo
518.65 540 li
@
1 setflat
set_def_flat
1.5 lw
432 515.749 mo
432 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
437 528.598 mo
(If wages from )
[1.81302 2.07205 1.94598 5.30597 3.75903 4.01801 3.75903 3.5 1.94598 2.07205 2.33096 4.01801 
5.97101 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [7 0 0 -7 0 0 ]msf
481.457 528.598 mo
(HIGHEST)
[5.18698 2.06497 5.31305 5.18695 4.53598 4.543 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
512.565 528.598 mo
( )sh
437 536.998 mo
(paying job are\320)
[4.151 3.75903 3.5 1.55402 3.89197 4.01807 1.94598 1.55402 4.01801 4.15103 1.94601 3.759 
2.33096 3.759 0 ]xsh
set_def_flat
.5 lw
518.15 540 mo
576.5 540 li
@
1 setflat
set_def_flat
518.4 515.749 mo
518.4 540.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
523.4 528.598 mo
(Enter on  )
[4.27698 3.89197 2.20502 3.75903 2.33093 1.94598 4.01807 3.89197 1.94604 0 ]xsh
523.4 536.998 mo
(line 7 above)
[1.55402 1.55402 3.89197 3.75903 1.94598 3.89203 1.94598 3.75897 4.15106 4.01801 3.5 0 
]xsh
set_def_flat
1.5 lw
432 539.75 mo
432 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
462.811 549.998 mo
($0  -  $35,000)
[3.892 3.892 1.94601 1.94598 2.72305 1.94601 1.94598 3.892 3.892 3.892 1.94601 3.89197 
3.89203 0 ]xsh
set_def_flat
.5 lw
518.4 539.75 mo
518.4 552.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
538.432 549.998 mo
($560)
[3.89197 3.89203 3.89203 0 ]xsh
set_def_flat
1.5 lw
432 551.75 mo
432 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
449.189 557.998 mo
(35,001  -    90,000)
[3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 1.94598 
1.94598 3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
518.4 551.75 mo
518.4 560.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
542.324 557.998 mo
(930)
[3.89197 3.89203 0 ]xsh
set_def_flat
1.5 lw
432 559.75 mo
432 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
449.189 565.998 mo
(90,001  -  165,000)
[3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 3.89197 
3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
518.4 559.75 mo
518.4 568.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
536.486 565.998 mo
(1,040)
[3.89203 1.94598 3.89197 3.89203 0 ]xsh
set_def_flat
1.5 lw
432 567.75 mo
432 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
445.297 573.998 mo
(165,001  -  370,000)
[3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 1.94601 1.94601 2.72302 1.94601 1.94601 
3.89197 3.89203 3.89197 1.94601 3.892 3.892 0 ]xsh
set_def_flat
.5 lw
518.4 567.75 mo
518.4 576.25 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
536.486 573.998 mo
(1,220)
[3.89203 1.94598 3.89197 3.89203 0 ]xsh
set_def_flat
1.5 lw
432 575.75 mo
432 672.501 li
@
1 setflat
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
444.908 581.998 mo
(370,001  and  over)
[3.892 3.892 3.892 1.94598 3.89203 3.89197 3.89203 1.94598 1.94598 3.75903 3.892 4.15103 
1.94598 1.94598 4.01807 3.5 3.759 0 ]xsh
set_def_flat
.5 lw
518.4 575.75 mo
518.4 672.501 li
@
1 setflat
%ADOBeginSubsetFont: QJJAAA+HelveticaNeueLTStd-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKX+HelveticaNeueLTStd-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/semicolon <1C60D8A8C9B854D088EA7EB6412D7C7D5124509928809EEC70EC
F50FE4D0740C8999C8BE543A5F345FEC43AE553C8A7028FE682CB81B36A90DA4
DBACDBC5C5> |-
/A <1C60D8A8C9B67DB5DFC07A3352648048B989C881F1D77E85E3FC1B35E4DB
0D5CB1BD5888217B0E4FE6F57A0D0C24C2041E777BCED33B4C7C77D7F47040B4
64F7BA43C275B9D874A81AE32AB56B13CD46> |-
/B <1C60D8A8C9B620B78F80EE0CAC255A65B162516E7DBE65CE2F4FB479487A
8A118DDD04BF075EC753D79D584330022F1CEE72838DFE2D66B3AF6E31874AC0
AA83DCDC1358DB476EC567601B32F9D27FA94BC00BAF65E3890A3DED40E4EC40
9750631ACF173D840B2FC092E30405C16F2D3B935EC8B2FA22AB4478A76B09E8
481E55EF11EB399094034346BB305BF415072BC393CD8414AB986914DB831F24
C7AC9AC4E825885F89A59FD4A3BD7E398D32> |-
/G <1C60D8A8C9B6EA91968DE5AA0C5FEEA72136FC50F4D7F50B492D0E5D88F0
DCC146E52360330EE13ECDC475CB15A2503E385F8CD1DAB2F2A5785A1E0B18EE
D10F5646641EBAE1CA4200EC2160E88C0B1E93D6C307C915B0DB7E56CEB60088
4443CB5E167572B1E63C75A411EF48BD036C9ADADEA309E563271E02AA4DDF9F
CA55F185F9A9468C> |-
/J <1C60D8A8C9B7B4A1B23C3C154A691E3E2F0318164A587574E439FA7F1766
45E2EA4AAAC60091B129E06EE4F680B8409EE9BCBDF434334AE537653D1EED9B
81> |-
/M <1C60D8A8C9B69A173543128D8B1AC42594A59F873F7A3EB54F44F295C397
47C8320D8D5CB5E13143DE91E6825AFF396262D3195986101386A194C01C2852
BB6A7C87971AD0095592A5AC1D1E432779557119462AF93204161A8D> |-
/N <1C60D8A8C9B6079F3517E074AC7F02ABBE6FFD53C20C1832F87BC43EF705
4410E96BC3E9C9B11460D8BEFB30FAC087FA4C3BDE60D5D3104CD934876B0306
5E986F15102A9E642A34042A5C1D32013CCA4287FE888FB8CAAFF1744C> |-
/R <1C60D8A8C9B620B7A43CC5158F274BD61416B8DF2CB03F76C4C846578FB7
14CAFE5419C03938205ED758851FFB113DD92CF140B5269E8D443121A865296E
3A62191A236976A3D30A2F8F5B95C5318C38D1E022A2C4DFE5DB9D85EFDAFE31
5EC8AA5EDC9E625DD24C6C4BD886509475AD> |-
/Y <1C60D8A8C9B67DB5DFC07A3D14BE0C43E1BC981BA7D3053000D78BE4A34B
C9989596C56BDCFFAADA47597E48653EE6AF0536CA3D529A72> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKX+HelveticaNeueLTStd-Roman /Encoding get
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 71 /G put
dup 74 /J put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 89 /Y put
pop
%ADOEndSubsetFont
/PZSRKX+HelveticaNeueLTStd-Roman*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar /percent 2{/.notdef}rp /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
/semicolon 5{/.notdef}rp /A /B /C /D /E /F 
/G /H /I /J 2{/.notdef}rp /M /N /O 
/P /.notdef /R /S /T /U /.notdef /W 
/.notdef /Y 7{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 47{/.notdef}rp /quotedblleft 15{/.notdef}rp 
/quotedblright 21{/.notdef}rp /emdash 47{/.notdef}rp]
PZSRKX+HelveticaNeueLTStd-Roman nf
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
536.486 581.998 mo
(1,300)
[3.89203 1.94598 3.89197 3.89203 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeueLTStd-Bd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PZSRKY+HelveticaNeueLTStd-Bd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B6079F3517E07A620C16A5BE4108A83ED4226ED84952F24EE2
315F0B5BDF90527DB90E8B2A1133E506EEE1BAAB59780F28791C4A19D3747A28
BF7434F71400755B0A5C3F9596DF50769F966C7F26A248DA40BCA96678FB97DE
EA934D3FF49DDE20744C2F12D7488E931CBFA7A8F0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PZSRKY+HelveticaNeueLTStd-Bd /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/PZSRKY+HelveticaNeueLTStd-Bd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /slash /zero 
/one /two /three /four /five /six /seven /eight 
/nine 7{/.notdef}rp /A 2{/.notdef}rp /D /E /F /G 
/H /I /J /.notdef /L /M /N /O 
/P /.notdef /R /S /T 2{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /d /e /.notdef /g /h 
/i /j /k /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
PZSRKY+HelveticaNeueLTStd-Bd nf
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
36 679.996 mo
(Privacy Act and Paperwork Reduction Act Notice. )
[4.06208 2.36905 1.5712 3.16682 3.49569 3.49569 3.16069 1.69302 4.17164 3.49569 2.14371 1.69302 
3.49569 3.61139 3.72094 1.69302 4.06208 3.49569 3.72095 3.49569 2.36906 4.95723 3.72095 2.36906 
3.49569 1.69302 4.39698 3.4957 3.72093 3.61139 3.4957 2.14371 1.5712 3.72095 3.61139 1.69301 
4.17165 3.49568 2.14371 1.69302 4.51268 3.72093 2.14371 1.5712 3.4957 3.49568 1.69302 0 
]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
181.71 679.996 mo
(We ask for the information on this)
[5.63931 3.27034 1.69302 3.27034 3.045 3.16069 1.69302 1.80267 3.4957 2.02792 1.69302 1.91837 
3.38603 3.27034 1.69302 1.35199 3.38603 1.80267 3.49568 2.02792 5.19476 3.27034 1.91837 1.35197 
3.4957 3.38605 1.69301 3.49568 3.38605 1.69302 1.91837 3.38605 1.35196 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
273.419 679.996 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
275.112 679.996 mo
(form to )
[1.80267 3.4957 2.02792 5.19473 1.69302 1.91837 3.4957 0 ]xsh
36 687.997 mo
(carry out the Internal Revenue laws of the United States. Internal Revenue Code)
[3.27035 3.27034 2.02792 2.02793 3.045 1.69302 3.49569 3.38604 1.91837 1.69302 1.91837 3.38604 
3.27034 1.69302 1.57732 3.38604 1.91837 3.27034 2.02793 3.38604 3.27034 1.35199 1.69301 4.17165 
3.27034 3.045 3.27035 3.38604 3.38604 3.27035 1.69302 1.35198 3.27035 4.61619 3.045 1.69302 
3.4957 1.80267 1.69301 1.91837 3.38603 3.27036 1.69302 4.39697 3.38605 1.35197 1.91837 3.27034 
3.61139 1.69302 3.94629 1.91837 3.27034 1.91837 3.27034 3.04501 1.69301 1.69302 1.57733 3.38603 
1.91837 3.27034 2.02794 3.38603 3.27034 1.35199 1.69301 4.17165 3.27034 3.045 3.27036 3.38603 
3.38603 3.27036 1.69302 4.39697 3.4957 3.61137 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
253.23 687.997 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
254.923 687.997 mo
(sections )
[3.045 3.27036 3.27032 1.91837 1.35199 3.4957 3.38605 3.04498 0 ]xsh
36 695.998 mo
(3402\(f\)\(2\) and 6109 and their regulations require you to provide this)
[3.38604 3.38604 3.38604 3.38604 1.57733 1.80267 1.57733 1.57732 3.38604 1.57733 1.69302 3.27034 
3.38605 3.61138 1.69302 3.38604 3.38604 3.38603 3.38605 1.69302 3.27035 3.38603 3.61139 1.69302 
1.91837 3.38604 3.27035 1.35198 2.02792 1.69302 2.02792 3.27035 3.49569 3.38604 1.35199 3.27034 
1.91837 1.35197 3.4957 3.38605 3.04498 1.69302 2.02792 3.27036 3.61139 3.38603 1.35197 2.02792 
3.27036 1.69302 3.04498 3.4957 3.38605 1.69302 1.91837 3.49567 1.69302 3.61139 2.02792 3.4957 
3.04501 1.35196 3.61139 3.27036 1.69302 1.91837 3.38602 1.35199 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
218.408 695.998 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
220.101 695.998 mo
(information; your employer )
[1.35197 3.38605 1.80267 3.49568 2.02792 5.19476 3.27034 1.91837 1.35197 3.4957 3.38605 1.69301 
1.69302 3.045 3.4957 3.38602 2.02795 1.69299 3.27036 5.19476 3.61136 1.35199 3.4957 3.04501 
3.27032 2.02792 0 ]xsh
36 703.999 mo
(uses it to determine your federal income tax withholding.)
[3.38604 3.045 3.27035 3.045 1.69302 1.35198 1.91836 1.69302 1.91837 3.49569 1.69302 3.61139 
3.27035 1.91837 3.27034 2.02792 5.19475 1.35199 3.38603 3.27035 1.69302 3.045 3.4957 3.38604 
2.02792 1.69302 1.80267 3.27035 3.61138 3.27035 2.02792 3.27035 1.35198 1.69302 1.35198 3.38604 
3.27034 3.4957 5.19475 3.27034 1.69302 1.91837 3.27036 3.15465 1.69301 4.61621 1.35197 1.91835 
3.38605 3.38605 3.4957 1.35196 3.61139 1.35199 3.38605 3.49567 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
190.193 703.999 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
191.886 703.999 mo
(Failure to provide a properly )
[3.4957 3.27034 1.35197 1.35199 3.38603 2.02792 3.27036 1.69301 1.91837 3.4957 1.69302 3.61137 
2.02794 3.49568 3.045 1.35199 3.61137 3.27036 1.69301 3.27036 1.69302 3.61137 2.02792 3.4957 
3.61137 3.27036 2.02792 1.35199 3.04498 0 ]xsh
36 712 mo
(completed form will result in your being treated as a single)
[3.27035 3.49569 5.19475 3.61139 1.35198 3.27034 1.91837 3.27035 3.61138 1.69302 1.80267 3.49569 
2.02792 5.19476 1.69302 4.61619 1.35199 1.35197 1.35198 1.69302 2.02792 3.27036 3.045 3.38603 
1.35198 1.91837 1.69302 1.35197 3.38604 1.69302 3.045 3.49569 3.38604 2.02792 1.69302 3.61137 
3.27036 1.35199 3.38602 3.4957 1.69302 1.91837 2.02792 3.27036 3.27034 1.91837 3.27034 3.61139 
1.69302 3.27032 3.04501 1.69302 3.27036 1.69299 3.04501 1.35199 3.38602 3.4957 1.35199 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
194.693 712 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
196.386 712 mo
(person who claims no withholding )
[3.61139 3.27034 2.02792 3.045 3.4957 3.38603 1.69302 4.6162 3.38603 3.4957 1.69302 3.27034 
1.35199 3.27034 1.35197 5.19476 3.04498 1.69302 3.38605 3.4957 1.69299 4.61621 1.35199 1.91833 
3.38605 3.38605 3.4957 1.35196 3.61139 1.35199 3.38605 3.49567 0 ]xsh
36 720.001 mo
(allowances; providing fraudulent information may)
[3.27034 1.35198 1.35198 3.49569 4.6162 3.27034 3.38604 3.27034 3.27035 3.045 1.69302 1.69302 
3.61138 2.02792 3.4957 3.045 1.35198 3.61138 1.35198 3.38604 3.49569 1.69302 1.80267 2.02792 
3.27036 3.38603 3.61139 3.38603 1.35199 3.27034 3.38603 1.91837 1.69302 1.35197 3.38605 1.80267 
3.49568 2.02794 5.19475 3.27034 1.91837 1.35197 3.4957 3.38605 1.69301 5.19475 3.27036 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
169.773 720.001 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
171.466 720.001 mo
(subject you to penalties. Routine uses of this )
[3.045 3.38605 3.61137 1.35199 3.27034 3.27034 1.91837 1.69302 3.045 3.4957 3.38603 1.69302 
1.91837 3.4957 1.69301 3.61139 3.27034 3.38605 3.27034 1.35197 1.91837 1.35199 3.27034 3.045 
1.69302 1.69302 4.17163 3.4957 3.38603 1.91837 1.35197 3.38605 3.27036 1.69299 3.38605 3.04501 
3.27036 3.04498 1.69302 3.4957 1.80267 1.69299 1.9184 3.38602 1.35199 3.04501 0 ]xsh
36 728.002 mo
(information include giving it to the)
[1.35198 3.38604 1.80267 3.49569 2.02793 5.19475 3.27034 1.91837 1.35198 3.49569 3.38604 1.69302 
1.35197 3.38605 3.27034 1.35198 3.38604 3.61139 3.27034 1.69302 3.49568 1.35199 3.045 1.35197 
3.38605 3.49568 1.69302 1.35197 1.91837 1.69302 1.91837 3.4957 1.69301 1.91837 3.38605 0 
]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
128.16 728.002 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
129.853 728.002 mo
(Department of Justice for civil and criminal litigation, to )
[4.28732 3.27036 3.61137 3.27036 2.02792 1.91837 5.19475 3.27034 3.38605 1.91837 1.69302 3.49568 
1.80267 1.69302 3.16069 3.38603 3.045 1.91837 1.35199 3.27034 3.27034 1.69302 1.80267 3.4957 
2.02792 1.69302 3.27034 1.35197 3.04501 1.35197 1.35197 1.69302 3.27036 3.38603 3.61137 1.69302 
3.27036 2.02792 1.35197 5.19475 1.35199 3.38603 3.27034 1.35199 1.69302 1.35197 1.35197 1.91837 
1.35199 3.4957 3.27032 1.9184 1.35196 3.4957 3.38605 1.69299 1.69305 1.91833 3.4957 0 
]xsh
36 736.003 mo
(cities, states, the District of)
[3.27034 1.35198 1.91837 1.35198 3.27034 3.045 1.69302 1.69302 3.045 1.91837 3.27034 1.91837 
3.27034 3.04501 1.69302 1.69302 1.91837 3.38604 3.27035 1.69302 4.28732 1.35198 3.045 1.91837 
2.02792 1.35198 3.27034 1.91837 1.69302 3.4957 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
109.878 736.003 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
111.571 736.003 mo
(Columbia, and U.S. commonwealths and possessions for use in )
[4.39698 3.49569 1.35198 3.38604 5.19476 3.61137 1.35199 3.27034 1.69302 1.69302 3.27034 3.38605 
3.61137 1.69302 4.39697 1.69302 3.94629 1.69302 1.69301 3.27036 3.4957 5.19473 5.19476 3.4957 
3.38603 4.6162 3.27034 3.27034 1.35199 1.91837 3.38605 3.04498 1.69302 3.27036 3.38603 3.61137 
1.69302 3.61139 3.4957 3.045 3.045 3.27036 3.04498 3.04501 1.35196 3.4957 3.38605 3.04501 
1.69299 1.80267 3.4957 2.02792 1.69302 3.38605 3.04498 3.27036 1.69302 1.35199 3.38602 0 
]xsh
36 744.004 mo
(administering their tax)
[3.27034 3.61139 5.19475 1.35198 3.38604 1.35198 3.045 1.91837 3.27034 2.02793 1.35197 3.38604 
3.49569 1.69302 1.91837 3.38603 3.27036 1.35197 2.02792 1.69302 1.91837 3.27034 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
96.3459 744.004 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
98.0389 744.004 mo
(laws; and to the Department of Health and Human Services for use in )
[1.35198 3.27035 4.61619 3.04501 1.69302 1.69302 3.27035 3.38604 3.61138 1.69302 1.91837 3.49569 
1.69302 1.91837 3.38603 3.27034 1.69302 4.28732 3.27036 3.61139 3.27034 2.02792 1.91837 5.19475 
3.27036 3.38603 1.91837 1.69301 3.4957 1.80267 1.69302 4.39697 3.27036 3.27034 1.35197 1.91837 
3.38605 1.69302 3.27034 3.38603 3.61139 1.69302 4.39697 3.38605 5.19475 3.27034 3.38605 1.69302 
3.94629 3.27034 2.02792 3.045 1.35199 3.27034 3.27034 3.04501 1.69299 1.80267 3.49573 2.02789 
1.69302 3.38605 3.04501 3.27032 1.69302 1.35199 3.38602 0 ]xsh
36 752.005 mo
(the National Directory of New Hires. We may also disclose this)
[1.91837 3.38604 3.27035 1.69302 4.39698 3.27034 1.91837 1.35198 3.49569 3.38604 3.27035 1.35197 
1.69302 4.28733 1.35198 2.02792 3.27034 3.27036 1.91836 3.49569 2.02792 3.04501 1.69302 3.4957 
1.80267 1.69301 4.39699 3.27034 4.6162 1.69302 4.39697 1.35199 2.02792 3.27034 3.045 1.69302 
1.69302 5.63931 3.27034 1.69302 5.19475 3.27034 3.045 1.69302 3.27034 1.35199 3.045 3.4957 
1.69302 3.61137 1.35199 3.045 3.27034 1.35199 3.49568 3.045 3.27036 1.69301 1.91837 3.38605 
1.35197 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
205.728 752.005 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
207.421 752.005 mo
(information to other countries )
[1.35197 3.38605 1.80267 3.49568 2.02792 5.19476 3.27034 1.91837 1.35197 3.4957 3.38603 1.69302 
1.91837 3.4957 1.69302 3.49568 1.91837 3.38603 3.27036 2.02792 1.69302 3.27036 3.49567 3.38605 
3.38605 1.91837 2.02792 1.35199 3.27032 3.04501 0 ]xsh
36 760.006 mo
(under a tax treaty, to federal and state agencies to)
[3.38604 3.38604 3.61139 3.27035 2.02792 1.69302 3.27034 1.69302 1.91837 3.27034 3.15466 1.69302 
1.91836 2.02793 3.27034 3.27035 1.91837 3.045 1.69302 1.69302 1.91837 3.49569 1.69302 1.80267 
3.27035 3.61138 3.27035 2.02792 3.27035 1.35198 1.69302 3.27035 3.38604 3.61138 1.69302 3.04499 
1.91837 3.27036 1.91837 3.27034 1.69302 3.27034 3.4957 3.27036 3.38602 3.27036 1.35199 3.27034 
3.045 1.69302 1.91837 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
173.159 760.006 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
174.852 760.006 mo
(enforce federal nontax criminal laws, or to )
[3.27034 3.38605 1.80267 3.49568 2.02792 3.27036 3.27034 1.69302 1.80267 3.27034 3.61139 3.27034 
2.02792 3.27036 1.35197 1.69302 3.38603 3.4957 3.38603 1.91837 3.27036 3.15465 1.69302 3.27034 
2.02792 1.35199 5.19473 1.35199 3.38605 3.27036 1.35196 1.69302 1.35199 3.27032 4.61621 3.04498 
1.69302 1.69302 3.4957 2.02792 1.69302 1.91837 3.49567 0 ]xsh
36 768.007 mo
(federal law enforcement and intelligence)
[1.80267 3.27034 3.61139 3.27034 2.02793 3.27034 1.35198 1.69302 1.35198 3.27034 4.61619 1.69302 
3.27034 3.38604 1.80267 3.49569 2.02792 3.27035 3.27035 5.19475 3.27035 3.38604 1.91837 1.69302 
3.27035 3.38604 3.61138 1.69302 1.35197 3.38604 1.91837 3.27035 1.35198 1.35198 1.35197 3.4957 
3.27034 3.38603 3.27036 0 ]xsh
PZSRKY+HelveticaNeueLTStd-Bd*1 [6.09 0 0 -7 0 0 ]msf
145.852 768.007 mo
( )sh
PZSRKX+HelveticaNeueLTStd-Roman*1 [6.09 0 0 -7 0 0 ]msf
147.545 768.007 mo
(agencies to combat terrorism.)
[3.27034 3.4957 3.27034 3.38605 3.27034 1.35199 3.27034 3.045 1.69302 1.91837 3.49568 1.69302 
3.27036 3.49568 5.19475 3.61139 3.27034 1.91837 1.69302 1.91837 3.27034 2.02792 2.02792 3.4957 
2.02792 1.35199 3.04498 5.19476 0 ]xsh
PZSRKX+HelveticaNeueLTStd-Roman*1 [7 0 0 -7 0 0 ]msf
323.8 679.996 mo
(You are not required to provide the information requested on a form that is )
[4.53595 4.01807 3.89197 1.94601 3.759 2.33096 3.759 1.94601 3.892 4.01804 2.20502 1.94601 
2.33093 3.75903 4.151 3.892 1.55399 2.33096 3.759 4.15103 1.94601 2.20502 4.01801 1.94601 
4.15103 2.33093 4.01804 3.5 1.55399 4.15103 3.759 1.94601 2.20502 3.892 3.75903 1.94598 
1.55402 3.89197 2.07205 4.01804 2.33093 5.97101 3.759 2.20502 1.55399 4.01807 3.89197 1.94601 
2.33096 3.759 4.15103 3.89197 3.75903 3.5 2.20502 3.75903 4.151 1.94598 4.01807 3.89197 
1.94598 3.75903 1.94604 2.07202 4.01801 2.33099 5.97095 1.94598 2.20502 3.89203 3.75897 2.20508 
1.94598 1.55402 3.5 0 ]xsh
316.8 687.997 mo
(subject to the Paperwork Reduction Act unless the form displays a valid OMB )
[3.5 3.892 4.15103 1.55399 3.759 3.75903 2.20502 1.94598 2.20502 4.01807 1.94598 2.20502 
3.892 3.759 1.94601 4.53598 3.759 4.15103 3.759 2.33096 5.30597 4.01801 2.33096 3.63297 
1.94601 4.79498 3.759 4.15103 3.892 3.75903 2.20502 1.55399 4.01804 3.892 1.94601 4.53595 
3.75903 2.20502 1.94598 3.892 3.892 1.55402 3.759 3.5 3.5 1.94601 2.20502 3.89197 
3.75903 1.94598 2.07205 4.01804 2.33093 5.97101 1.94598 4.151 1.55402 3.5 4.151 1.55402 
3.75903 3.5 3.5 1.94598 3.75903 1.94598 3.5 3.75903 1.55402 1.55396 4.151 1.94604 
5.31995 6.09705 4.79492 0 ]xsh
316.8 695.998 mo
(control number. Books or records relating to a form or its instructions must be )
[3.75903 4.01801 3.89203 2.20502 2.33093 4.01804 1.55399 1.94601 3.892 3.892 5.97098 4.151 
3.75903 2.33093 1.94601 1.94601 4.79498 4.01801 4.01807 3.63297 3.5 1.94601 4.01801 2.33096 
1.94601 2.33093 3.75903 3.759 4.01804 2.33093 4.15103 3.5 1.94601 2.33093 3.75903 1.55399 
3.759 2.20502 1.55402 3.892 4.01804 1.94598 2.20502 4.01807 1.94598 3.75903 1.94598 2.07202 
4.01807 2.33093 5.97098 1.94601 4.01801 2.33096 1.94601 1.55399 2.20502 3.5 1.94601 1.55399 
3.892 3.5 2.20502 2.33093 3.89203 3.75897 2.20508 1.55396 4.01807 3.89197 3.5 1.94604 
5.97095 3.89197 3.5 2.20508 1.94598 4.151 3.75903 0 ]xsh
316.8 703.999 mo
(retained as long as their contents may become material in the administration of )
[2.33093 3.75903 2.20502 3.75903 1.55399 3.892 3.75903 4.151 1.94598 3.75903 3.5 1.94598 
1.55402 4.01804 3.892 4.01804 1.94601 3.759 3.5 1.94601 2.20502 3.89197 3.75903 1.55402 
2.33093 1.94598 3.75903 4.01804 3.892 2.20502 3.75903 3.89197 2.20502 3.5 1.94601 5.97098 
3.75903 3.5 1.94598 4.151 3.75903 3.75903 4.01801 5.97101 3.759 1.94601 5.97095 3.75903 
2.20502 3.75903 2.33093 1.55402 3.759 1.55399 1.94601 1.55399 3.89203 1.94598 2.20502 3.892 
3.759 1.94601 3.759 4.15106 5.97095 1.55402 3.89197 1.55402 3.5 2.20502 2.33093 3.75903 
2.20502 1.55402 4.01801 3.89203 1.94598 4.01807 2.07202 0 ]xsh
316.8 712 mo
(any Internal Revenue law. Generally, tax returns and return information are )
[3.75903 3.89197 3.5 1.94601 1.81302 3.892 2.20502 3.759 2.33096 3.892 3.75903 1.55399 
1.94601 4.79498 3.759 3.5 3.759 3.89203 3.89197 3.75903 1.94598 1.55402 3.75903 5.30597 
1.94598 1.94598 5.31305 3.759 3.892 3.75903 2.33093 3.75903 1.55399 1.55399 3.5 1.94601 
1.94601 2.20502 3.759 3.62604 1.94601 2.33093 3.75903 2.20502 3.89197 2.33096 3.892 3.5 
1.94598 3.75903 3.892 4.15103 1.94598 2.33093 3.75903 2.20502 3.892 2.33096 3.89197 1.94601 
1.55399 3.89203 2.07202 4.01801 2.33099 5.97095 3.75903 2.20502 1.55402 4.01801 3.89203 1.94598 
3.75903 2.33093 3.75903 0 ]xsh
316.8 720.001 mo
(confidential, as required by Code section 6103. )
[3.75903 4.01801 3.89203 2.07202 1.55402 4.151 3.75903 3.89197 2.20502 1.55402 3.75903 1.55399 
1.94601 1.94598 3.75903 3.5 1.94598 2.33093 3.75903 4.151 3.89203 1.55399 2.33096 3.759 
4.15103 1.94598 4.151 3.5 1.94601 5.05399 4.01807 4.151 3.75903 1.94598 3.5 3.75903 
3.759 2.20502 1.55399 4.01807 3.89197 1.94601 3.892 3.892 3.892 3.892 1.94601 0 
]xsh
323.8 730.998 mo
(The average time and expenses required to complete and file this form will vary )
[4.01804 3.892 3.75903 1.94598 3.75903 3.5 3.759 2.33096 3.759 4.01804 3.75903 1.94598 
2.20502 1.55402 5.97095 3.75903 1.94598 3.75903 3.892 4.15103 1.94598 3.75903 3.62604 4.151 
3.75903 3.89197 3.5 3.75903 3.5 1.94598 2.33096 3.759 4.15103 3.892 1.55402 2.33093 
3.75903 4.151 1.94598 2.20502 4.01807 1.94598 3.75903 4.01801 5.97101 4.151 1.55402 3.759 
2.20502 3.759 1.94601 3.759 3.89203 4.151 1.94598 2.07205 1.55399 1.55402 3.75903 1.94598 
2.20502 3.89197 1.55402 3.5 1.94598 2.07208 4.01801 2.33093 5.97101 1.94598 5.30597 1.55402 
1.55402 1.55402 1.94598 3.5 3.75897 2.33099 3.5 0 ]xsh
316.8 738.999 mo
(depending on individual circumstances. For estimated averages, see the )
[4.151 3.75903 4.151 3.75903 3.892 4.15103 1.55399 3.892 4.01804 1.94601 4.01801 3.89203 
1.94598 1.55402 3.89197 4.15103 1.55399 3.5 1.55402 4.151 3.89203 3.759 1.55399 1.94601 
3.759 1.55402 2.33093 3.75903 3.892 5.97098 3.5 2.20502 3.75903 3.89197 3.75903 3.75903 
3.5 1.94598 1.94598 4.01807 4.01801 2.33096 1.94601 3.759 3.5 2.20502 1.55399 5.97101 
3.759 2.20502 3.759 4.15103 1.94601 3.759 3.5 3.759 2.33096 3.759 4.01807 3.75897 
3.5 1.94604 1.94598 3.5 3.75903 3.75897 1.94604 2.20502 3.89197 3.75903 0 ]xsh
316.8 747 mo
(instructions for your income tax return.)
[1.55402 3.89197 3.5 2.20502 2.33096 3.892 3.75903 2.20502 1.55399 4.01804 3.892 3.5 
1.94601 2.07202 4.01804 2.33096 1.94598 3.5 4.01804 3.892 2.33093 1.94601 1.55399 3.89203 
3.759 4.01804 5.97098 3.759 1.94601 2.20502 3.759 3.62604 1.94601 2.33096 3.759 2.20502 
3.892 2.33093 3.89203 0 ]xsh
323.8 757.997 mo
(If you have suggestions for making this form simpler, we would be happy to hear )
[1.81302 2.07205 1.94598 3.5 4.01804 3.892 1.94598 3.89203 3.759 3.5 3.759 1.94601 
3.5 3.892 4.01804 4.01804 3.75903 3.5 2.20502 1.55399 4.01804 3.892 3.5 1.94601 
2.07202 4.01804 2.33096 1.94598 5.97098 3.759 3.633 1.55402 3.89197 4.01807 1.94598 2.20502 
3.892 1.55399 3.5 1.94601 2.07205 4.01801 2.33096 5.97098 1.94598 3.5 1.55402 5.97098 
4.15103 1.55399 3.759 2.33096 1.94601 1.94598 5.30597 3.75903 1.94598 5.30597 4.01804 3.892 
1.55402 4.151 1.94598 4.15106 3.75897 1.94598 3.89203 3.75903 4.151 4.151 3.5 1.94598 
2.20508 4.01801 1.94598 3.89203 3.75897 3.75903 2.33093 0 ]xsh
316.8 765.998 mo
(from you. See the instructions for your income tax return.)
[2.07202 2.33096 4.01804 5.97098 1.94601 3.5 4.01801 3.89203 1.94598 1.94598 4.53598 3.759 
3.75903 1.94598 2.20502 3.89203 3.759 1.94601 1.55399 3.892 3.5 2.20502 2.33093 3.89203 
3.759 2.20502 1.55399 4.01807 3.89197 3.5 1.94601 2.07205 4.01801 2.33096 1.94601 3.5 
4.01801 3.89203 2.33093 1.94598 1.55402 3.892 3.759 4.01807 5.97095 3.75903 1.94598 2.20502 
3.75903 3.62604 1.94598 2.33096 3.759 2.20502 3.89203 2.33093 3.892 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/1 ]]
] del_res
/PZSRLB+HelveticaNeueLTStd-BdIt*1 uf
/PZSRLB+HelveticaNeueLTStd-BdIt uf
/HIBBAA+HelveticaNeueLTStd-BdIt uf
/PZSRKZ+HelveticaNeueLTStd-It*1 uf
/PZSRKZ+HelveticaNeueLTStd-It uf
/PBAAAA+HelveticaNeueLTStd-It uf
/PZSRLA+TimesLTStd-Roman*1 uf
/PZSRLA+TimesLTStd-Roman uf
/GFNBAA+TimesLTStd-Roman uf
/PZSRKX+HelveticaNeueLTStd-Roman*1 uf
/PZSRKX+HelveticaNeueLTStd-Roman uf
/QJJAAA+HelveticaNeueLTStd-Roman uf
/PZSRKY+HelveticaNeueLTStd-Bd*1 uf
/PZSRKY+HelveticaNeueLTStd-Bd uf
/HIBBAA+HelveticaNeueLTStd-Bd uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 2
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
